http_interactions:
- request:
    method: get
    uri: http://v4.boldsystems.org/index.php/API_Public/specimen?taxon=Osmia&format=xml
    body:
      encoding: ''
      string: ''
    headers:
      User-Agent: libcurl/7.54.0 r-curl/3.2 crul/0.5.2
      Accept-Encoding: gzip, deflate
      Accept: application/json, text/xml, application/xml, */*
  response:
    status:
      status_code: '200'
      message: OK
      explanation: Request fulfilled, document follows
    headers:
      status: HTTP/1.1 200 OK
      date: Tue, 24 Apr 2018 18:40:13 GMT
      server: Apache/2.2.15 (Red Hat)
      x-powered-by: PHP/5.3.15
      content-disposition: attachment; filename=bold_data.xml
      connection: close
      transfer-encoding: chunked
      content-type: application/x-download
    body:
      encoding: UTF-8
      string: '<?xml version="1.0" encoding="UTF-8"?>
<bold_records xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="http://v4.boldsystems.org/schemas/BOLDPublic_record.xsd">
  <record>
    <record_id>281216</record_id>
    <processid>BEECA186-06</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0186</sampleid>
      <fieldnum>03-BC-0186</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514868</record_id>
    <processid>BEECA501-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>06-ON-0501</sampleid>
      <fieldnum>06-ON-0501</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516957</record_id>
    <processid>BEECA605-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>05-YT-0605</sampleid>
      <fieldnum>05-YT-0605</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Sheffield and A. Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Hwy 3, near Rae</exactsite>
      <coordinates>
        <lat>62.7209</lat>
        <lon>-116.077</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706475</record_id>
    <processid>BEECB1079-07</processid>
    <bin_uri>BOLD:AAC0884</bin_uri>
    <specimen_identifiers>
      <sampleid>07-MB-1700</sampleid>
      <fieldnum>07-MB-1700</fieldnum>
      <institution_storing>University of Manitoba</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58232</taxID>
          <name>Osmia distincta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A.M. Patenaude</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <exactsite>Spruce Woods Prov. Park</exactsite>
      <coordinates>
        <lat>49.729</lat>
        <lon>-99.133</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596919</record_id>
    <processid>BEECB357-07</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1075</sampleid>
      <catalognum>BBSL696762</catalognum>
      <fieldnum>04-WA-1075</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.8 mi W Tiffany Lake</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596922</record_id>
    <processid>BEECB360-07</processid>
    <bin_uri>BOLD:ABY7557</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1078</sampleid>
      <catalognum>BBSL697132</catalognum>
      <fieldnum>04-WA-1078</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265228</taxID>
          <name>Osmia pentstemonis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>3 mi SE Hodges Horse Pasture</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596925</record_id>
    <processid>BEECB363-07</processid>
    <bin_uri>BOLD:AAC8503</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1081</sampleid>
      <catalognum>BBSL696966</catalognum>
      <fieldnum>04-WA-1081</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96584</taxID>
          <name>Osmia trevoris</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Virginia Lilly Trailhead</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597000</record_id>
    <processid>BEECB438-07</processid>
    <bin_uri>BOLD:AAF2159</bin_uri>
    <specimen_identifiers>
      <sampleid>00-UT-1157</sampleid>
      <catalognum>BBSL432653</catalognum>
      <fieldnum>00-UT-1157</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96620</taxID>
          <name>Osmia bella</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597070</record_id>
    <processid>BEECB508-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1226</sampleid>
      <fieldnum>07-ID-1226</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060892</record_id>
    <processid>BEECC1189-09</processid>
    <bin_uri>BOLD:AAF2159</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2862</sampleid>
      <catalognum>BBSL480684</catalognum>
      <fieldnum>03-UT-2862</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84710</taxID>
          <name>Osmia cobaltina</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Wilson,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Paradise Canyon</exactsite>
      <coordinates>
        <lat>37.405</lat>
        <lon>-111.65</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1003237</record_id>
    <processid>BEECC722-09</processid>
    <bin_uri>BOLD:AAE5460</bin_uri>
    <specimen_identifiers>
      <sampleid>98-UT-2300</sampleid>
      <catalognum>BBSL608599</catalognum>
      <fieldnum>98-UT-2300</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>196921</taxID>
          <name>Osmia crassa</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Toler,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Dugway Proving Grounds: Ditto HQ, 2.5 km N (site 3</exactsite>
      <coordinates>
        <lat>40.201</lat>
        <lon>-112.92</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650286</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2300+1263577236.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011048</record_id>
    <processid>BEECC869-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2447</sampleid>
      <catalognum>BBSL485359</catalognum>
      <fieldnum>03-UT-2447</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198195</taxID>
          <name>Osmia alpestris</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Barker Reservoir, 0.1 mi E</exactsite>
      <coordinates>
        <lat>37.923</lat>
        <lon>-111.824</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650405</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2447+1263585120.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011049</record_id>
    <processid>BEECC870-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2448</sampleid>
      <catalognum>BBSL480682</catalognum>
      <fieldnum>03-UT-2448</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198195</taxID>
          <name>Osmia alpestris</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Wilson,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Paradise Canyon</exactsite>
      <coordinates>
        <lat>37.405</lat>
        <lon>-111.65</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650406</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2448+1263585180.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057698</record_id>
    <processid>BEECC953-09</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2721</sampleid>
      <catalognum>BBSL624283</catalognum>
      <fieldnum>05-CA-2721</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Gibbs, Jason</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>2 mi W Andrews Peak</exactsite>
      <coordinates>
        <lat>38.041</lat>
        <lon>-119.717</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650651</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2721+1263590028.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Triteleia ixioides]]&gt;</notes>
  </record>
  <record>
    <record_id>56151</record_id>
    <processid>BUSA372-05</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>18414</sampleid>
      <catalognum>18414</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Sam W. Droege</collectors>
      <country>United States</country>
      <province_state>West Virginia</province_state>
      <region>Hampshire</region>
      <exactsite>Capon Bridge</exactsite>
      <coordinates>
        <lat>39.3258</lat>
        <lon>-78.4344</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>31375</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BUSA/IMG_3061.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4190248</record_id>
    <processid>CNGBI1408-14</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG10524-E01</sampleid>
      <catalognum>BIOUG10524-E01</catalognum>
      <fieldnum>GMP#01522</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Wetland</habitat>
      <extrainfo>Georgian Bay Islands NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Prabir Roy</collectors>
      <collection_note>2 Malaise traps|Marsh</collection_note>
      <site_code>BIOUG:GEOBAY-NP:1</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Georgian Bay Islands National Park</region>
      <sector>Administration Office, 901 Wye Valley Rd.</sector>
      <coordinates>
        <lat>44.7418</lat>
        <lon>-79.8501</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>190</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289027</record_id>
    <processid>FBAPB666-09</processid>
    <bin_uri>BOLD:AAI1798</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02141</sampleid>
      <catalognum>BC ZSM HYM 02141</catalognum>
      <fieldnum>BC ZSM HYM 02141</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663004</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02141+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289040</record_id>
    <processid>FBAPB679-09</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02154</sampleid>
      <catalognum>BC ZSM HYM 02154</catalognum>
      <fieldnum>BC ZSM HYM 02154</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Muehlacker</exactsite>
      <coordinates>
        <lat>48.938</lat>
        <lon>8.837</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>440</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663017</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02154+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289049</record_id>
    <processid>FBAPB688-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02163</sampleid>
      <catalognum>BC ZSM HYM 02163</catalognum>
      <fieldnum>BC ZSM HYM 02163</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Steinenstadt, Baggersee</exactsite>
      <coordinates>
        <lat>47.76</lat>
        <lon>7.54</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>220</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663026</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02163+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289091</record_id>
    <processid>FBAPB730-09</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02205</sampleid>
      <catalognum>BC ZSM HYM 02205</catalognum>
      <fieldnum>BC ZSM HYM 02205</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Lombardy</province_state>
      <exactsite>Brescia, Pavone</exactsite>
      <coordinates>
        <lat>45.65</lat>
        <lon>10.43</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>280</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663068</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02205+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289099</record_id>
    <processid>FBAPB738-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02213</sampleid>
      <catalognum>BC ZSM HYM 02213</catalognum>
      <fieldnum>BC ZSM HYM 02213</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <sector>Upper Bavaria</sector>
      <exactsite>Lagerlechfeld, Klaeranlage</exactsite>
      <coordinates>
        <lat>48.19</lat>
        <lon>10.88</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>545</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663076</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02213+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[edit CSE sep11]]&gt;</notes>
  </record>
  <record>
    <record_id>1289104</record_id>
    <processid>FBAPB743-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02218</sampleid>
      <catalognum>BC ZSM HYM 02218</catalognum>
      <fieldnum>BC ZSM HYM 02218</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Carpentras, Les Baux</exactsite>
      <coordinates>
        <lat>44.128</lat>
        <lon>5.041</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>120</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663081</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02218+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289114</record_id>
    <processid>FBAPB753-09</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02228</sampleid>
      <catalognum>BC ZSM HYM 02228</catalognum>
      <fieldnum>BC ZSM HYM 02228</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Lombardy</province_state>
      <exactsite>Bormio, Eita</exactsite>
      <coordinates>
        <lat>46.38</lat>
        <lon>10.24</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663091</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02228+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709627</record_id>
    <processid>FBAPC361-10</processid>
    <bin_uri>BOLD:AAZ7638</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05966</sampleid>
      <catalognum>BC ZSM HYM 05966</catalognum>
      <fieldnum>BC ZSM HYM 05966</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Spain</country>
      <region>Alicante</region>
      <exactsite>Moraira</exactsite>
      <coordinates>
        <lat>38.689</lat>
        <lon>0.135</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>13</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189827</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05966+1309188386.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709629</record_id>
    <processid>FBAPC363-10</processid>
    <bin_uri>BOLD:AAP2728</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05968</sampleid>
      <catalognum>BC ZSM HYM 05968</catalognum>
      <fieldnum>BC ZSM HYM 05968</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265280</taxID>
          <name>Osmia viridana</name>
          <reference>Morawitz, 1874</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Turkey</country>
      <province_state>Ankara</province_state>
      <exactsite>Ankara,  Hacettepe University Beytepe</exactsite>
      <coordinates>
        <lat>39.87</lat>
        <lon>32.734</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1044</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189829</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05968+1309188384.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709640</record_id>
    <processid>FBAPC374-10</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05979</sampleid>
      <catalognum>BC ZSM HYM 05979</catalognum>
      <fieldnum>BC ZSM HYM 05979</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>W. Dolin</collectors>
      <country>Azerbaijan</country>
      <exactsite>Talish Mountain</exactsite>
      <coordinates>
        <lat>38.7</lat>
        <lon>48.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1835</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189840</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05979+1309188372.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from O. fulviventris (JS, 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>2021835</record_id>
    <processid>FBAPC542-11</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07002</sampleid>
      <catalognum>BC ZSM HYM 07002</catalognum>
      <fieldnum>BC ZSM HYM 07002</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Brigue</exactsite>
      <coordinates>
        <lat>44.065</lat>
        <lon>7.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>800</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171219</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07002+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083450</record_id>
    <processid>FBAPC966-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08471</sampleid>
      <catalognum>BC ZSM HYM 08471</catalognum>
      <fieldnum>BC ZSM HYM 08471</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Lausnitz, Totenstein</exactsite>
      <coordinates>
        <lat>50.728</lat>
        <lon>11.691</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>260</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243644</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08471+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083176</record_id>
    <processid>FBAPD122-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08767</sampleid>
      <catalognum>BC ZSM HYM 08767</catalognum>
      <fieldnum>BC ZSM HYM 08767</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, Vogelsangpass</exactsite>
      <coordinates>
        <lat>48.087</lat>
        <lon>7.692</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243851</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08767+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083178</record_id>
    <processid>FBAPD124-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08769</sampleid>
      <catalognum>BC ZSM HYM 08769</catalognum>
      <fieldnum>BC ZSM HYM 08769</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, Vogelsangpass</exactsite>
      <coordinates>
        <lat>48.087</lat>
        <lon>7.692</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243853</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08769+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083183</record_id>
    <processid>FBAPD129-11</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08774</sampleid>
      <catalognum>BC ZSM HYM 08774</catalognum>
      <fieldnum>BC ZSM HYM 08774</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, 1 km E Bickensohl</exactsite>
      <coordinates>
        <lat>48.082</lat>
        <lon>7.659</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>385</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243858</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08774+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140446</record_id>
    <processid>FBAPD235-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09545</sampleid>
      <catalognum>BC ZSM HYM 09545</catalognum>
      <fieldnum>BC ZSM HYM 09545</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Konstanz</exactsite>
      <coordinates>
        <lat>47.661</lat>
        <lon>9.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>430</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1311263</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_09545+1315500456.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[check sex]]&gt;</notes>
  </record>
  <record>
    <record_id>2140585</record_id>
    <processid>FBAPD374-11</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07784</sampleid>
      <catalognum>BC ZSM HYM 07784</catalognum>
      <fieldnum>BC ZSM HYM 07784</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km SW Sevilla, W Maalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310927</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07784+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140591</record_id>
    <processid>FBAPD380-11</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07790</sampleid>
      <catalognum>BC ZSM HYM 07790</catalognum>
      <fieldnum>BC ZSM HYM 07790</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <region>Alpes Maritimes</region>
      <exactsite>Alpes Maritimes, Col de Cayolle, South</exactsite>
      <coordinates>
        <lat>44.253</lat>
        <lon>6.742</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310933</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07790+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133857</record_id>
    <processid>FBHAP305-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00400</sampleid>
      <catalognum>BC ZSM HYM 00400</catalognum>
      <fieldnum>BC ZSM HYM 00400</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>B. Bembe</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Nymphenburg</exactsite>
      <coordinates>
        <lat>48.5</lat>
        <lon>11.5</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>520</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497301</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00400+1244555774.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133873</record_id>
    <processid>FBHAP321-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00416</sampleid>
      <catalognum>BC ZSM HYM 00416</catalognum>
      <fieldnum>BC ZSM HYM 00416</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Isarauen</exactsite>
      <coordinates>
        <lat>48.1</lat>
        <lon>11.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>525</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497317</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00416+1243550820.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133883</record_id>
    <processid>FBHAP331-09</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00426</sampleid>
      <catalognum>BC ZSM HYM 00426</catalognum>
      <fieldnum>BC ZSM HYM 00426</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>A. Weis</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Neuaubing</exactsite>
      <coordinates>
        <lat>48.151</lat>
        <lon>11.417</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>565</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497327</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00426+1243550820.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from Osmia (JS 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>3199236</record_id>
    <processid>GBACU3697-13</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17282</sampleid>
      <catalognum>BC ZSM HYM 17282</catalognum>
      <fieldnum>BC ZSM HYM 17282</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Grissheim</exactsite>
      <coordinates>
        <lat>47.87</lat>
        <lon>7.56</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>210</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937573</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17282+1362509776.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>470888</record_id>
    <processid>GBAH0291-06</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250938</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>470890</record_id>
    <processid>GBAH0293-06</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250940</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33110</taxID>
          <name>Osmia pedicornis</name>
          <reference>Cockerell, 1919</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>470892</record_id>
    <processid>GBAH0295-06</processid>
    <bin_uri>BOLD:AAW9605</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250942</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33108</taxID>
          <name>Osmia excavata</name>
          <reference>Alfken, 1903</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>470893</record_id>
    <processid>GBAH0296-06</processid>
    <bin_uri>BOLD:AAW9625</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250943</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33107</taxID>
          <name>Osmia satoi</name>
          <reference>Yasumatsu &amp; Hirashima, 1950</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856409</record_id>
    <processid>GBAH3878-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726629</sampleid>
      <catalognum>EU726629</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856440</record_id>
    <processid>GBAH3909-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726598</sampleid>
      <catalognum>EU726598</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856442</record_id>
    <processid>GBAH3911-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726596</sampleid>
      <catalognum>EU726596</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856471</record_id>
    <processid>GBAH3940-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726567</sampleid>
      <catalognum>EU726567</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856477</record_id>
    <processid>GBAH3946-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726561</sampleid>
      <catalognum>EU726561</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616538</record_id>
    <processid>GBAH7420-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583328</sampleid>
      <catalognum>KC583328</catalognum>
      <fieldnum>KC583328</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616542</record_id>
    <processid>GBAH7424-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583324</sampleid>
      <catalognum>KC583324</catalognum>
      <fieldnum>KC583324</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3174335</record_id>
    <processid>GBMIN18105-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135986</sampleid>
      <catalognum>ADU059</catalognum>
      <fieldnum>KC135986</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417846</record_id>
    <processid>GBMIN78110-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX374766</sampleid>
      <fieldnum>KX374766</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>566</record_id>
    <processid>HCBNS179-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee87</sampleid>
      <catalognum>CSS#164</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Grand Pre</sector>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>404</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS179-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4829</record_id>
    <processid>HDBNS086-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c86</sampleid>
      <catalognum>sheff-c86</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Annapolis County</region>
      <sector>Middleton</sector>
      <coordinates>
        <lat>44.9665</lat>
        <lon>-65.0576</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4830</record_id>
    <processid>HDBNS087-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c87</sampleid>
      <catalognum>sheff-c87</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Lockhartville</sector>
      <coordinates>
        <lat>45.1</lat>
        <lon>-64.2</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>708863</record_id>
    <processid>HMBCH063-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-044</sampleid>
      <catalognum>CHU07-BEE-044</catalognum>
      <fieldnum>CHU07-BEE-044</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259426</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_058+1197914492.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708864</record_id>
    <processid>HMBCH064-07</processid>
    <bin_uri>BOLD:ACE4798</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-045</sampleid>
      <catalognum>CHU07-BEE-045</catalognum>
      <fieldnum>CHU07-BEE-045</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>686305</taxID>
          <name>Osmia tarsata</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259427</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_059+1197914492.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>1979095</record_id>
    <processid>JSHYM437-11</processid>
    <bin_uri>BOLD:AAU1235</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG01030-E09</sampleid>
      <fieldnum>L#JSETM-009</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>BOLD ID Engine</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
      <habitat>Temperate mixed forest</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>James Sones</collectors>
      <site_code>BIOUG:Elizabethtown</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Leeds and Grenville</region>
      <sector>Elizabethtown-Kitley</sector>
      <exactsite>4452 Rowsome Rd., Elizabethtown</exactsite>
      <coordinates>
        <lat>44.621</lat>
        <lon>-75.773</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>112</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1323160</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Spencer Walker</photographer>
        <image_file>http://www.boldsystems.org/pics/JSHYM/bioug01030-e09+1315589146.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[May 18-22, 2010]]&gt;</notes>
  </record>
  <record>
    <record_id>1422994</record_id>
    <processid>JSYKA122-10</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-028</sampleid>
      <fieldnum>L#JSYKB-028</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia1</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot16</exactsite>
      <coordinates>
        <lat>69.1658</lat>
        <lon>-140.188</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754248</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7917+1272292858.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[White pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1422997</record_id>
    <processid>JSYKA125-10</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-031</sampleid>
      <fieldnum>L#JSYKB-031</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia2</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot03</exactsite>
      <coordinates>
        <lat>69.1693</lat>
        <lon>-140.159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>315</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754251</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7920+1272292890.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[White pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>2613350</record_id>
    <processid>MAMTK123-12</processid>
    <bin_uri>BOLD:ACA2606</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG02378-C01</sampleid>
      <fieldnum>GMP#00519</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Muhammad Ashfaq</identification_provided_by>
      <identification_method>BOLD ID engine/ morphology</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>591749</taxID>
          <name>Osmia ma04</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
    </specimen_desc>
    <collection_event>
      <collectors>Muhammad Rafique</collectors>
      <site_code>BIOUG:RAWAL</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Pakistan</country>
      <province_state>Islamabad</province_state>
      <sector>Islamabad</sector>
      <exactsite>Pakistan Museum of Natural History</exactsite>
      <coordinates>
        <lat>33.686</lat>
        <lon>73.076</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1808303</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Muhammad Ashfaq</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Muhammad Ashfaq</photographer>
        <image_file>http://www.boldsystems.org/pics/MAMTK/BIOUG02378-C01+1350060972.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Malaise - Ashfaq 2012]]&gt;</notes>
  </record>
  <record>
    <record_id>1132311</record_id>
    <processid>NOBEE056-09</processid>
    <bin_uri>BOLD:ACI4938</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00056</sampleid>
      <catalognum>NHMO_APO00056</catalognum>
      <fieldnum>NHMO_APO00056</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Endrestol, Anders</collectors>
      <country>Norway</country>
      <province_state>Akershus</province_state>
      <region>Oslo</region>
      <exactsite>Ekebergskraningen [SE]</exactsite>
      <coordinates>
        <lat>59.8875</lat>
        <lon>10.7671</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107429</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00056+1375713754.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199626</record_id>
    <processid>SSWLB1508-13</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04934-H05</sampleid>
      <catalognum>BIOUG04934-H05</catalognum>
      <fieldnum>L#12BIOBUS-0642</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>1 Intercept Trap|Mostly cloudy, Windy, 6C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:3</site_code>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.081</lat>
        <lon>-113.879</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1335</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051001</record_id>
    <processid>UPOLB612-09</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>G2Y-20080519-008</sampleid>
      <fieldnum>G2Y May 15 -19 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Guelph Lake Sports Fields</exactsite>
      <coordinates>
        <lat>43.588</lat>
        <lon>-80.254</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051010</record_id>
    <processid>UPOLB621-09</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>I2Y-20080520-005</sampleid>
      <fieldnum>I2Y May 16 -20 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Massey Drive</exactsite>
      <coordinates>
        <lat>43.541</lat>
        <lon>-80.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8115251</record_id>
    <processid>ABEE074-17</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 42</sampleid>
      <catalognum>NHMW-HYM 42</catalognum>
      <fieldnum>Zimmermann 07.06.2016</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>vouchered: registered collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>NBH3 Nordbahnhof</exactsite>
      <coordinates>
        <lat>48.2299</lat>
        <lon>16.3913</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3162634</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000042_Oo+1500053706.jpg</image_file>
      </media>
      <media>
        <mediaID>3162638</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000042_La2+1500053704.jpg</image_file>
      </media>
      <media>
        <mediaID>3162636</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000042_Os+1500053706.jpg</image_file>
      </media>
      <media>
        <mediaID>3162635</mediaID>
        <media_descriptor>Frontal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000042_Of+1500053704.jpg</image_file>
      </media>
      <media>
        <mediaID>3162637</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000042_La1+1500053704.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>8115253</record_id>
    <processid>ABEE075-17</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 875</sampleid>
      <catalognum>NHMW-HYM 875</catalognum>
      <fieldnum>Schoedl 04.07.2004</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sabine Schoder</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>vouchered: registered collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schoedl Stefan</collectors>
      <country>Austria</country>
      <province_state>Lower Austria</province_state>
      <exactsite>Bad Fischau-Brunn</exactsite>
      <coordinates>
        <lat>47.8333</lat>
        <lon>16.1666</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8362215</record_id>
    <processid>ABEE116-17</processid>
    <bin_uri>BOLD:ADJ1069</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 280</sampleid>
      <catalognum>NHMW-HYM 280</catalognum>
      <fieldnum>NBH2 Zimmermann 2016.07.11 WienAUTWienZimmermann</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2273</lat>
        <lon>16.3919</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3955532</record_id>
    <processid>ASGCB255-13</processid>
    <bin_uri>BOLD:ABZ2181</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F04</sampleid>
      <fieldnum>BIOUG07489-F04</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>Tree Based Identification (Mar 2017)</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84727</taxID>
          <name>Osmia georgica</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172457</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_9_Y_Dorsal+1383686208.jpg</image_file>
      </media>
      <media>
        <mediaID>2172458</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_9_Y_Lateral+1383686214.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2711807</record_id>
    <processid>BBHYA3298-12</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG02688-A06</sampleid>
      <catalognum>BIOUG02688-A06</catalognum>
      <fieldnum>L#11BIOBUS-2558</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Mono Lake State Park</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Biobus 2011</collectors>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Mono Lake State Park</region>
      <sector>boardwalk</sector>
      <exactsite>cut grass, saline marsh, riparian zone</exactsite>
      <coordinates>
        <lat>38.016</lat>
        <lon>-119.15</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1955</elev>
    </collection_event>
    <notes>&lt;![CDATA[malaise trap|04-05-Aug-11]]&gt;</notes>
  </record>
  <record>
    <record_id>1769802</record_id>
    <processid>BBHYL359-10</processid>
    <bin_uri>BOLD:AAF2159</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3313</sampleid>
      <catalognum>10BBCHY-3313</catalognum>
      <fieldnum>L#PC2010YO-001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96620</taxID>
          <name>Osmia bella</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Forest</habitat>
      <extrainfo>Yoho NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>Free Hand|Partly cloudy, Warm|Forested campground</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Yoho NP</region>
      <sector>Kicking Horse Campground</sector>
      <coordinates>
        <lat>51.424</lat>
        <lon>-116.429</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1317</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992585</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6560+1295293366.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3896353</record_id>
    <processid>BCHYM412-13</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 18272</sampleid>
      <catalognum>BC ZSM HYM 18272</catalognum>
      <fieldnum>BC ZSM HYM 18272</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Diez</exactsite>
      <coordinates>
        <lat>50.366</lat>
        <lon>8.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>130</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2157646</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_18272+1364415196.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281107</record_id>
    <processid>BEECA077-06</processid>
    <bin_uri>BOLD:AAD4181</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0077</sampleid>
      <fieldnum>04-MB-0077</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85395</taxID>
          <name>Osmia nigrifrons</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268416</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_nigrifrons_Fem_Lat+1205190918.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>514740</record_id>
    <processid>BEECA373-06</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>05-NT-0373</sampleid>
      <fieldnum>05-NT-0373</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84789</taxID>
          <name>Osmia sp1-1395</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516953</record_id>
    <processid>BEECA601-06</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0601</sampleid>
      <fieldnum>06-YT-0601</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516959</record_id>
    <processid>BEECA607-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>05-NT-0607</sampleid>
      <fieldnum>05-NT-0607</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Anne Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Ingram Trail; Yellowknife</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554149</record_id>
    <processid>BEECA959-07</processid>
    <bin_uri>BOLD:AAC3294</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0786</sampleid>
      <fieldnum>01-OR-0786</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204027</taxID>
          <name>Osmia densa</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Packer</collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
      <region>Lane Co.</region>
      <exactsite>Hampton, Hwy 58, 28 mi SE Eugene</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706418</record_id>
    <processid>BEECB1022-07</processid>
    <bin_uri>BOLD:ABY6905</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CO-1643</sampleid>
      <catalognum>USGSDRO34202</catalognum>
      <fieldnum>04-CO-1643</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>123703</taxID>
          <name>Osmia sladeni</name>
          <reference>Sandhouse, 1925</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Colorado</province_state>
      <region>Jackson Co.</region>
      <coordinates>
        <lat>40.602</lat>
        <lon>-106.073</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596912</record_id>
    <processid>BEECB350-07</processid>
    <bin_uri>BOLD:ABY6905</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1068</sampleid>
      <catalognum>BBSL696955</catalognum>
      <fieldnum>04-WA-1068</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96579</taxID>
          <name>Osmia odontogaster</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.5 mi W Corner Butte</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596930</record_id>
    <processid>BEECB368-07</processid>
    <bin_uri>BOLD:AAC5802</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1086</sampleid>
      <catalognum>BBSL696744</catalognum>
      <fieldnum>04-WA-1086</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.8 mi W Tiffany Lake</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596997</record_id>
    <processid>BEECB435-07</processid>
    <bin_uri>BOLD:AAD0302</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1154</sampleid>
      <catalognum>BBSL626302</catalognum>
      <fieldnum>05-CA-1154</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96618</taxID>
          <name>Osmia calla</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268541</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_calla_Male_Lat+1205190598.jpg</image_file>
      </media>
      <media>
        <mediaID>268540</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_calla_Fem_Lat+1205190536.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>688028</record_id>
    <processid>BEECB738-07</processid>
    <bin_uri>BOLD:AAC3290</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1361</sampleid>
      <catalognum>PYU-1145</catalognum>
      <fieldnum>07-ID-1361</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Blaine Co.</region>
      <exactsite>10 km E Craters of the Moon Nat. Mon</exactsite>
      <coordinates>
        <lat>43.379</lat>
        <lon>-113.722</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1587</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060884</record_id>
    <processid>BEECC1181-09</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2854</sampleid>
      <catalognum>BBSL438934</catalognum>
      <fieldnum>02-UT-2854</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Wilson, Joe</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Pine Creek, N of jct. Deep Creek</exactsite>
      <coordinates>
        <lat>37.945</lat>
        <lon>-111.644</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060899</record_id>
    <processid>BEECC1196-09</processid>
    <bin_uri>BOLD:AAC8498</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2869</sampleid>
      <catalognum>BBSL515903</catalognum>
      <fieldnum>03-UT-2869</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204359</taxID>
          <name>Osmia cockerelli</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Henrieville Creek, jct Hwy 12</exactsite>
      <coordinates>
        <lat>37.62</lat>
        <lon>-111.861</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060906</record_id>
    <processid>BEECC1203-09</processid>
    <bin_uri>BOLD:AAE5460</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2876</sampleid>
      <catalognum>BBSL442690</catalognum>
      <fieldnum>02-UT-2876</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>196921</taxID>
          <name>Osmia crassa</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger, Olivia</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Cougar Knoll, 0.97 mi SSE</exactsite>
      <coordinates>
        <lat>37.3</lat>
        <lon>-111.128</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844571</record_id>
    <processid>BEECC208-08</processid>
    <bin_uri>BOLD:AAC8503</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1881</sampleid>
      <catalognum>PYU-2586</catalognum>
      <fieldnum>07-WA-1881</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96584</taxID>
          <name>Osmia trevoris</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Garfield Co.</region>
      <exactsite>25 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.441</lat>
        <lon>-117.437</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>805</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>903182</record_id>
    <processid>BEECC285-08</processid>
    <bin_uri>BOLD:ABZ2181</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ON-1957</sampleid>
      <catalognum>ANT_1510</catalognum>
      <fieldnum>07-ON-1957</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84727</taxID>
          <name>Osmia georgica</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>YPT</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>A. Taylor</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Norfolk</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>973659</record_id>
    <processid>BEECC521-08</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-2194</sampleid>
      <catalognum>USGSDRO075428</catalognum>
      <fieldnum>07-SC-2194</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650189</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2194+1263584002.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>973660</record_id>
    <processid>BEECC522-08</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-2195</sampleid>
      <catalognum>USGSDRO075453</catalognum>
      <fieldnum>07-SC-2195</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650190</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2195+1263584010.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1003233</record_id>
    <processid>BEECC718-09</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>05-WY-2296</sampleid>
      <catalognum>BBSL588833</catalognum>
      <fieldnum>05-WY-2296</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Hawk, Jessica</collectors>
      <country>United States</country>
      <province_state>Wyoming</province_state>
      <exactsite>Bear Mountain, SE Slope</exactsite>
      <coordinates>
        <lat>42.228</lat>
        <lon>-107.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650282</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2296+1263577170.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Penstemon haydenii]]&gt;</notes>
  </record>
  <record>
    <record_id>1011060</record_id>
    <processid>BEECC881-09</processid>
    <bin_uri>BOLD:AAI1802</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2459</sampleid>
      <catalognum>BBSL510436</catalognum>
      <fieldnum>03-UT-2459</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198197</taxID>
          <name>Osmia austromaritima</name>
          <reference>Michener, 1936</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Kitchen Corral Pt., 0.35 mi W</exactsite>
      <coordinates>
        <lat>37.212</lat>
        <lon>-112.123</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650417</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2459+1263585160.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057727</record_id>
    <processid>BEECC982-09</processid>
    <bin_uri>BOLD:ABY6391</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2750</sampleid>
      <catalognum>BBSL545967</catalognum>
      <fieldnum>04-CA-2750</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>95794</taxID>
          <name>Osmia exigua</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Miguel Mdw, 2.9 WNW Dam</exactsite>
      <coordinates>
        <lat>37.963</lat>
        <lon>-119.838</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650680</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2750+1263590148.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057733</record_id>
    <processid>BEECC988-09</processid>
    <bin_uri>BOLD:AAE5477</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2756</sampleid>
      <catalognum>BBSL613000</catalognum>
      <fieldnum>05-CA-2756</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>686302</taxID>
          <name>Osmia sedula</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Briggs, Heather</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.7 mi SWbyS Ostrander Rocks</exactsite>
      <coordinates>
        <lat>37.671</lat>
        <lon>-119.608</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650686</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2756+1263590278.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>6064976</record_id>
    <processid>BEEEE156-15</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970463</sampleid>
      <catalognum>BMNH(E)#970463</catalognum>
      <fieldnum>BMNH(E)#970463</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <associated_taxa>ex: Helicella itala</associated_taxa>
      <extrainfo>from nest in shell of Helicella itala</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: SM733271</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Pembrokeshire</region>
      <sector>Whitesand Bay</sector>
      <coordinates>
        <lat>51.896</lat>
        <lon>-5.296</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Pembs: Whitesand Bay: SM733271: dune: vi.2009: from nest in shell of Helicella itala: D.G.Notton; D.Notton coll. BMNH-ENT-2012-112; m Osmia aurulenta det. D.Notton, 2015; BMNH(E)#970463]]&gt;</notes>
  </record>
  <record>
    <record_id>6065006</record_id>
    <processid>BEEEE186-15</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970555</sampleid>
      <catalognum>BMNH(E)#970555</catalognum>
      <fieldnum>BMNH(E)#970555</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <tissue_type>Leg</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: SU617794</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Oxfordshire</region>
      <sector>Hartslock SSSI</sector>
      <exactsite>Near Goring-on-Thames</exactsite>
      <coordinates>
        <lat>51.51</lat>
        <lon>-1.112</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Oxon: Hartslock SSSI: nr Goring-on-Thames: SU617794: 7.vi.2015: D.Notton: m Osmia spinulosa det. D.Notton, 2015: BMNH(E)#970555]]&gt;</notes>
  </record>
  <record>
    <record_id>5563316</record_id>
    <processid>CNRVC101-15</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG19444-D07</sampleid>
      <catalognum>BIOUG19444-D07</catalognum>
      <fieldnum>GMP#05048</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Mount Revelstoke NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>S.Devita</collectors>
      <collection_note>2 Malaise traps|coniferous forest close to cliff edge</collection_note>
      <site_code>BIOUG:REVEL-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Mount Revelstoke National Park</region>
      <sector>Off trail behind old staff housing</sector>
      <coordinates>
        <lat>51.018</lat>
        <lon>-118.205</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>608</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7201067</record_id>
    <processid>CRHIF007-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-E07</sampleid>
      <catalognum>BIOUG30310-E07</catalognum>
      <fieldnum>L#16CRH-0001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.616</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289026</record_id>
    <processid>FBAPB665-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02140</sampleid>
      <catalognum>BC ZSM HYM 02140</catalognum>
      <fieldnum>BC ZSM HYM 02140</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Kaiserstuhl, Schelingen</exactsite>
      <coordinates>
        <lat>48.1391</lat>
        <lon>7.69318</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>197</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663003</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02140+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709628</record_id>
    <processid>FBAPC362-10</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05967</sampleid>
      <catalognum>BC ZSM HYM 05967</catalognum>
      <fieldnum>BC ZSM HYM 05967</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Spain</country>
      <province_state>Murcia</province_state>
      <region>Murcia</region>
      <exactsite>Balsicas</exactsite>
      <coordinates>
        <lat>37.817</lat>
        <lon>-0.951</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>94</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189828</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05967+1309188384.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2374338</record_id>
    <processid>FBAPD949-11</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 10069</sampleid>
      <catalognum>BC ZSM HYM 10069</catalognum>
      <fieldnum>BC ZSM HYM 10069</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmidt-Egger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Kyffhaeuser, 1 km N Rottleben</exactsite>
      <coordinates>
        <lat>51.362</lat>
        <lon>11.046</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>144</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1466773</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_10069+1324047826.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133859</record_id>
    <processid>FBHAP307-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00402</sampleid>
      <catalognum>BC ZSM HYM 00402</catalognum>
      <fieldnum>BC ZSM HYM 00402</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Isarauen</exactsite>
      <coordinates>
        <lat>48.1</lat>
        <lon>11.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>525</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497303</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00402+1244555792.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133890</record_id>
    <processid>FBHAP338-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00433</sampleid>
      <catalognum>BC ZSM HYM 00433</catalognum>
      <fieldnum>BC ZSM HYM 00433</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Allacher Forst</exactsite>
      <coordinates>
        <lat>48.2</lat>
        <lon>11.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497334</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00433+1244555930.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:edit CSE sep11::endTaxonomy:edit CSE sep11]]&gt;</notes>
  </record>
  <record>
    <record_id>2875220</record_id>
    <processid>GBACU1209-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14509</sampleid>
      <catalognum>BC ZSM HYM 14509</catalognum>
      <fieldnum>BC ZSM HYM 14509</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>berg Kaiserstuhl, Badberg</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.67</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>522</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825270</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14509+1345839368.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912236</record_id>
    <processid>GBACU1882-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14232</sampleid>
      <catalognum>BC ZSM HYM 14232</catalognum>
      <fieldnum>BC ZSM HYM 14232</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>243</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834228</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14232+1449672346.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199234</record_id>
    <processid>GBACU3695-13</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17280</sampleid>
      <catalognum>BC ZSM HYM 17280</catalognum>
      <fieldnum>BC ZSM HYM 17280</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Grissheim</exactsite>
      <coordinates>
        <lat>47.87</lat>
        <lon>7.56</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>210</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937571</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17280+1362509770.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199237</record_id>
    <processid>GBACU3698-13</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17283</sampleid>
      <catalognum>BC ZSM HYM 17283</catalognum>
      <fieldnum>BC ZSM HYM 17283</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Vogtsburg/Badberg</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.67</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>522</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937574</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17283+1362509780.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199241</record_id>
    <processid>GBACU3702-13</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17287</sampleid>
      <catalognum>BC ZSM HYM 17287</catalognum>
      <fieldnum>BC ZSM HYM 17287</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>Valpelline, Oyace</exactsite>
      <coordinates>
        <lat>45.854</lat>
        <lon>7.376</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937578</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17287+1362509792.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2874805</record_id>
    <processid>GBACU794-12</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 13334</sampleid>
      <catalognum>BC ZSM HYM 13334</catalognum>
      <fieldnum>BC ZSM HYM 13334</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825459</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_13334+1337104464.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856475</record_id>
    <processid>GBAH3944-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726563</sampleid>
      <catalognum>EU726563</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856476</record_id>
    <processid>GBAH3945-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726562</sampleid>
      <catalognum>EU726562</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417845</record_id>
    <processid>GBMIN78109-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957860</sampleid>
      <fieldnum>KX957860</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417855</record_id>
    <processid>GBMIN78119-17</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957901</sampleid>
      <fieldnum>KX957901</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>565</record_id>
    <processid>HCBNS178-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee86</sampleid>
      <catalognum>CSS#163</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Kentville</sector>
      <coordinates>
        <lat>45.06</lat>
        <lon>-64.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>403</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS178-03b.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4831</record_id>
    <processid>HDBNS088-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c88</sampleid>
      <catalognum>sheff-c88</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Morristown</sector>
      <coordinates>
        <lat>44.981</lat>
        <lon>-64.7545</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4839</record_id>
    <processid>HDBNS096-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c96</sampleid>
      <catalognum>sheff-c96</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Lockhartville</sector>
      <coordinates>
        <lat>45.1</lat>
        <lon>-64.2</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1422995</record_id>
    <processid>JSYKA123-10</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-029</sampleid>
      <fieldnum>L#JSYKB-029</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia1</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot16</exactsite>
      <coordinates>
        <lat>69.1658</lat>
        <lon>-140.188</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754249</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7918+1272292868.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[White pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1422996</record_id>
    <processid>JSYKA124-10</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-030</sampleid>
      <fieldnum>L#JSYKB-030</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia1</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot10</exactsite>
      <coordinates>
        <lat>69.29</lat>
        <lon>-140.302</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>440</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754250</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7919+1272292880.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Blue pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423036</record_id>
    <processid>JSYKA164-10</processid>
    <bin_uri>BOLD:ABZ4941</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-070</sampleid>
      <fieldnum>L#JSYKB-070</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia4</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot01</exactsite>
      <coordinates>
        <lat>69.2672</lat>
        <lon>-140.251</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>253</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754290</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7961+1272293282.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1132313</record_id>
    <processid>NOBEE058-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00058</sampleid>
      <catalognum>NHMO_APO00058</catalognum>
      <fieldnum>NHMO_APO00058</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Sagvolden, Bjorn</collectors>
      <country>Norway</country>
      <province_state>Finnmark</province_state>
      <region>Sor-Varanger</region>
      <exactsite>Skogfoss - Nyrud</exactsite>
      <coordinates>
        <lat>69.3014</lat>
        <lon>29.2516</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107434</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00058+1375713858.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6295930</record_id>
    <processid>SRIRP007-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-4</sampleid>
      <catalognum>SRFS-4</catalognum>
      <fieldnum>SRFS-4</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>3N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9481</lat>
        <lon>-120.111</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>466.52</elev>
    </collection_event>
    <notes>&lt;![CDATA[Kelly Alesio, Fisher Price]]&gt;</notes>
  </record>
  <record>
    <record_id>3969989</record_id>
    <processid>SSWLE5346-13</processid>
    <bin_uri>BOLD:AAD5711</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG08756-G07</sampleid>
      <catalognum>BIOUG08756-G07</catalognum>
      <fieldnum>L#12BIOBUS-1618</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>1 Intercept Trap|Overcast, 19C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:5</site_code>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.088</lat>
        <lon>-113.883</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1328</elev>
    </collection_event>
    <notes>&lt;![CDATA[Aug 8 and 10, both intercept pans found dried out]]&gt;</notes>
  </record>
  <record>
    <record_id>970584</record_id>
    <processid>TTHYW314-08</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0281</sampleid>
      <catalognum>BIOUG06406-A12</catalognum>
      <fieldnum>L#08BANFF-004</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Grassland</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>daytime netting||Avalanche meadow, montane</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff NP</region>
      <sector>Sunshine Highway</sector>
      <coordinates>
        <lat>51.126</lat>
        <lon>-115.726</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1614</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371119</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Nick Jeffery</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_7884+1231450870.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1050881</record_id>
    <processid>UPOLB492-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>I4S-20070816-014</sampleid>
      <fieldnum>I4S August 16 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Cambridge</sector>
      <exactsite>Savage Road</exactsite>
      <coordinates>
        <lat>43.366</lat>
        <lon>-80.287</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1050930</record_id>
    <processid>UPOLB541-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>O5S-20070816-020</sampleid>
      <fieldnum>O5S August 16 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Cambridge</sector>
      <exactsite>Chalmers Street</exactsite>
      <coordinates>
        <lat>43.355</lat>
        <lon>-80.298</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1050979</record_id>
    <processid>UPOLB590-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20080519-006</sampleid>
      <fieldnum>G1Y May 15 -19 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051009</record_id>
    <processid>UPOLB620-09</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>I2Y-20080520-004</sampleid>
      <fieldnum>I2Y May 16 -20 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Massey Drive</exactsite>
      <coordinates>
        <lat>43.541</lat>
        <lon>-80.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051223</record_id>
    <processid>UPOLB834-09</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>I1Y-20080703-005</sampleid>
      <fieldnum>I1Y June 30 - July 3 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Southgate Drive</exactsite>
      <coordinates>
        <lat>43.488</lat>
        <lon>-80.202</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051238</record_id>
    <processid>UPOLB849-09</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>O3Y-20080704-004</sampleid>
      <fieldnum>O3Y July 1 - 4 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Waterloo</sector>
      <exactsite>Thorndale Drive</exactsite>
      <coordinates>
        <lat>43.45</lat>
        <lon>-80.551</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051257</record_id>
    <processid>UPOLB868-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>N3B-20080704-005</sampleid>
      <fieldnum>N3B July 1 - 4 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Waterloo</sector>
      <exactsite>Chesapeake Drive</exactsite>
      <coordinates>
        <lat>43.508</lat>
        <lon>-80.505</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8362257</record_id>
    <processid>ABEE158-17</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 877</sampleid>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schoedl</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schoedl Stefan</collectors>
      <country>Austria</country>
      <province_state>Lower Austria</province_state>
      <exactsite>Bad Fischau-Brunn</exactsite>
      <coordinates>
        <lat>47.8333</lat>
        <lon>16.1667</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8362287</record_id>
    <processid>ABEE188-17</processid>
    <bin_uri>BOLD:AAF2155</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 2242</sampleid>
      <catalognum>NHMW-HYM 2242</catalognum>
      <fieldnum>NHB3 Schoder 2017.05.30 Oesterreich WienAUTWienSchoder</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schoder Sabine</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2166</lat>
        <lon>16.3833</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3955530</record_id>
    <processid>ASGCB253-13</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F02</sampleid>
      <fieldnum>BIOUG07489-F02</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>Tree Based Identification (Mar 2017)</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172454</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_26_B_Lateral+1383686214.jpg</image_file>
      </media>
      <media>
        <mediaID>2172453</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_26_B_Dorsal+1383686212.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3955538</record_id>
    <processid>ASGCB261-13</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F10</sampleid>
      <fieldnum>BIOUG07489-F10</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>Tree Based Identification (Mar 2017)</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172468</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia1_11_Y_Dorsal+1383686218.jpg</image_file>
      </media>
      <media>
        <mediaID>2172469</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia1_11_Y_Lateral+1383686214.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1301732</record_id>
    <processid>BBHEC461-09</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>09BBEHY-0492</sampleid>
      <catalognum>09BBEHY-0492</catalognum>
      <fieldnum>L#09KJ-102</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Riparian Zone</habitat>
      <extrainfo>Kejimkujik NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2009</collectors>
      <collection_note>|Hot, sunny|Shore</collection_note>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kejimkujik NP</region>
      <sector>Grafton Lake</sector>
      <coordinates>
        <lat>44.383</lat>
        <lon>-65.202</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>103</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>653573</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHEC/IMG_9841+1264448414.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>240796</record_id>
    <processid>BCT020-06</processid>
    <bin_uri>BOLD:AAC0884</bin_uri>
    <specimen_identifiers>
      <sampleid>06-BCT-020</sampleid>
      <fieldnum>06-BCT-020</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58232</taxID>
          <name>Osmia distincta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>Smith, Bursey</collectors>
      <country>United States</country>
      <province_state>Connecticut</province_state>
      <region>Hartford County</region>
      <exactsite>Farmington-sand patch</exactsite>
      <coordinates>
        <lat>41.767</lat>
        <lon>-72.767</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>144039</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/BCT/06-BCT-020+1147195494.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281152</record_id>
    <processid>BEECA122-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0122</sampleid>
      <fieldnum>04-ON-0122</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268417</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_subaustralis_Male_Lat+1205191006.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281192</record_id>
    <processid>BEECA162-06</processid>
    <bin_uri>BOLD:AAC3107</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0162</sampleid>
      <fieldnum>03-BC-0162</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281214</record_id>
    <processid>BEECA184-06</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0184</sampleid>
      <fieldnum>03-BC-0184</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516945</record_id>
    <processid>BEECA593-06</processid>
    <bin_uri>BOLD:AAC0882</bin_uri>
    <specimen_identifiers>
      <sampleid>02-ON-0593</sampleid>
      <fieldnum>02-ON-0593</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268414</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_conjuncta_Male_Lat+1205190792.jpg</image_file>
      </media>
      <media>
        <mediaID>268413</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_conjuncta_Fem_Lat+1205190756.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>554153</record_id>
    <processid>BEECA963-07</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0790</sampleid>
      <fieldnum>01-OR-0790</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706473</record_id>
    <processid>BEECB1077-07</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>07-MB-1698</sampleid>
      <fieldnum>07-MB-1698</fieldnum>
      <institution_storing>University of Manitoba</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A.M. Patenaude</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <exactsite>Spruce Woods Prov. Park</exactsite>
      <coordinates>
        <lat>49.729</lat>
        <lon>-99.133</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596904</record_id>
    <processid>BEECB342-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1060</sampleid>
      <catalognum>BBSL697137</catalognum>
      <fieldnum>04-WA-1060</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>2.4 mi W. Duncan Ridge</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268545</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596924</record_id>
    <processid>BEECB362-07</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1080</sampleid>
      <catalognum>BBSL695935</catalognum>
      <fieldnum>04-WA-1080</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson, L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.3 mi W Suttons Meadow</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596959</record_id>
    <processid>BEECB397-07</processid>
    <bin_uri>BOLD:AAF2142</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-1116</sampleid>
      <catalognum>BBSL482339</catalognum>
      <fieldnum>03-UT-1116</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>96598</taxID>
          <name>Osmia ribifloris ribifloris</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>H. Ikerd</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <region>Garfield Co.</region>
      <exactsite>Calf Creek</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688031</record_id>
    <processid>BEECB741-07</processid>
    <bin_uri>BOLD:AAD3950</bin_uri>
    <specimen_identifiers>
      <sampleid>05-SK-1364</sampleid>
      <fieldnum>05-SK-1364</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96578</taxID>
          <name>Osmia longula</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Saskatchewan</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268554</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Fem_Lat+1205190844.jpg</image_file>
      </media>
      <media>
        <mediaID>268555</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Male_Lat+1205190880.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[from nest under rock]]&gt;</notes>
  </record>
  <record>
    <record_id>1060880</record_id>
    <processid>BEECC1177-09</processid>
    <bin_uri>BOLD:AAD0288</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2850</sampleid>
      <catalognum>BBSL457819</catalognum>
      <fieldnum>02-UT-2850</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204356</taxID>
          <name>Osmia atrocyanea</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger, Olivia</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Horse Pasture, 3.9 mi S</exactsite>
      <coordinates>
        <lat>37.645</lat>
        <lon>-111.07</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844572</record_id>
    <processid>BEECC209-08</processid>
    <bin_uri>BOLD:AAC5818</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1882</sampleid>
      <catalognum>PYU-2507</catalognum>
      <fieldnum>07-WA-1882</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297533</taxID>
          <name>Osmia cf. pusilla</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Asotin Co.</region>
      <exactsite>15 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.411</lat>
        <lon>-117.268</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>322</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844620</record_id>
    <processid>BEECC257-08</processid>
    <bin_uri>BOLD:AAC3294</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1929</sampleid>
      <fieldnum>07-BC-1929</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204027</taxID>
          <name>Osmia densa</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>vane trap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>G.G.E. Scudder</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <exactsite>East Beach</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844637</record_id>
    <processid>BEECC274-08</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1946</sampleid>
      <catalognum>USGSDRO075463</catalognum>
      <fieldnum>07-SC-1946</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1003236</record_id>
    <processid>BEECC721-09</processid>
    <bin_uri>BOLD:AAE5460</bin_uri>
    <specimen_identifiers>
      <sampleid>98-UT-2299</sampleid>
      <catalognum>BBSL608593</catalognum>
      <fieldnum>98-UT-2299</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>196921</taxID>
          <name>Osmia crassa</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Toler,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Dugway Proving Grounds: Ditto HQ, 2.5 km N (site 3</exactsite>
      <coordinates>
        <lat>40.201</lat>
        <lon>-112.92</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650285</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2299+1263577202.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057694</record_id>
    <processid>BEECC949-09</processid>
    <bin_uri>BOLD:AAE4128</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2717</sampleid>
      <catalognum>BBSL565031</catalognum>
      <fieldnum>04-CA-2717</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204025</taxID>
          <name>Osmia malina</name>
          <reference>Cockerell, 1909</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Gallison Lk, .5mi SSW Parsons Pk</exactsite>
      <coordinates>
        <lat>37.771</lat>
        <lon>-119.311</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650647</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2717+1263589886.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Senecio scorzonella]]&gt;</notes>
  </record>
  <record>
    <record_id>1057730</record_id>
    <processid>BEECC985-09</processid>
    <bin_uri>BOLD:AAC3291</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2753</sampleid>
      <catalognum>BBSL563042</catalognum>
      <fieldnum>04-CA-2753</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Maddox, Randy</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Sunrise Tr, 1.2mi ENE of Bunnell Pt</exactsite>
      <coordinates>
        <lat>37.747</lat>
        <lon>-119.453</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650683</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2753+1263590258.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>6064971</record_id>
    <processid>BEEEE151-15</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970437</sampleid>
      <catalognum>BMNH(E)#970437</catalognum>
      <fieldnum>BMNH(E)#970437</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>Adult</lifestage>
      <associated_taxa>ex: Senecio jacobaea</associated_taxa>
      <extrainfo>At flowers of Senecio jacobaea</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: TQ398771</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>London</region>
      <sector>Blackheath</sector>
      <exactsite>Southeast Vanbrugh Pits</exactsite>
      <coordinates>
        <lat>51.476</lat>
        <lon>0.012</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: London: Blackheath: se Vanbrugh Pits: TQ398771: 12.vii.2014: at flowers of Senecio jacobaea: D.Notton; f Osmia spinulosa det. D.Notton, 2014; BMNH(E)#970437]]&gt;</notes>
  </record>
  <record>
    <record_id>7200197</record_id>
    <processid>CRHIH007-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-G05</sampleid>
      <catalognum>BIOUG30310-G05</catalognum>
      <fieldnum>L#16CRH-0007</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7218886</record_id>
    <processid>CRHIH491-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-C05</sampleid>
      <catalognum>BIOUG30450-C05</catalognum>
      <fieldnum>L#16CRH-0037</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7218887</record_id>
    <processid>CRHIH492-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-C06</sampleid>
      <catalognum>BIOUG30450-C06</catalognum>
      <fieldnum>L#16CRH-0037</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7218888</record_id>
    <processid>CRHIH493-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-C07</sampleid>
      <catalognum>BIOUG30450-C07</catalognum>
      <fieldnum>L#16CRH-0037</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289061</record_id>
    <processid>FBAPB700-09</processid>
    <bin_uri>BOLD:AAI1853</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02175</sampleid>
      <catalognum>BC ZSM HYM 02175</catalognum>
      <fieldnum>BC ZSM HYM 02175</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265271</taxID>
          <name>Osmia melanogaster</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Aureille</exactsite>
      <coordinates>
        <lat>43.71</lat>
        <lon>4.954</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>90</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663038</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02175+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289109</record_id>
    <processid>FBAPB748-09</processid>
    <bin_uri>BOLD:AAI1998</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02223</sampleid>
      <catalognum>BC ZSM HYM 02223</catalognum>
      <fieldnum>BC ZSM HYM 02223</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265280</taxID>
          <name>Osmia viridana</name>
          <reference>Morawitz, 1874</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>Pondel</exactsite>
      <coordinates>
        <lat>45.68</lat>
        <lon>7.23</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663086</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02223+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709625</record_id>
    <processid>FBAPC359-10</processid>
    <bin_uri>BOLD:AAI1999</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05964</sampleid>
      <catalognum>BC ZSM HYM 05964</catalognum>
      <fieldnum>BC ZSM HYM 05964</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214092</taxID>
          <name>Osmia uncinata</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Brusson</exactsite>
      <coordinates>
        <lat>45.759</lat>
        <lon>7.731</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1319</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189825</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05964+1309188388.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709634</record_id>
    <processid>FBAPC368-10</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05973</sampleid>
      <catalognum>BC ZSM HYM 05973</catalognum>
      <fieldnum>BC ZSM HYM 05973</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Croatia</country>
      <region>Insel Rab, Dalmatia</region>
      <exactsite>Lopar</exactsite>
      <coordinates>
        <lat>44.826</lat>
        <lon>14.729</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>10</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189834</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05973+1309188378.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709635</record_id>
    <processid>FBAPC369-10</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05974</sampleid>
      <catalognum>BC ZSM HYM 05974</catalognum>
      <fieldnum>BC ZSM HYM 05974</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Croatia</country>
      <region>Insel Rab, Dalmatia</region>
      <exactsite>8 km W of Rab, Kampor</exactsite>
      <coordinates>
        <lat>44.779</lat>
        <lon>14.721</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>18</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189835</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05974+1309188376.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2021833</record_id>
    <processid>FBAPC540-11</processid>
    <bin_uri>BOLD:AAY5201</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07000</sampleid>
      <catalognum>BC ZSM HYM 07000</catalognum>
      <fieldnum>BC ZSM HYM 07000</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590709</taxID>
          <name>Osmia saxicola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Foux-d Allos</exactsite>
      <coordinates>
        <lat>44.294</lat>
        <lon>6.564</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171217</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07000+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083439</record_id>
    <processid>FBAPC955-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08460</sampleid>
      <catalognum>BC ZSM HYM 08460</catalognum>
      <fieldnum>BC ZSM HYM 08460</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Weimar</exactsite>
      <coordinates>
        <lat>50.58</lat>
        <lon>11.192</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>226</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243633</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08460+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083444</record_id>
    <processid>FBAPC960-11</processid>
    <bin_uri>BOLD:AAY9599</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08465</sampleid>
      <catalognum>BC ZSM HYM 08465</catalognum>
      <fieldnum>BC ZSM HYM 08465</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Rudolstadt, Moerla</exactsite>
      <coordinates>
        <lat>50.722</lat>
        <lon>11.308</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>281</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243638</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08465+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083181</record_id>
    <processid>FBAPD127-11</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08772</sampleid>
      <catalognum>BC ZSM HYM 08772</catalognum>
      <fieldnum>BC ZSM HYM 08772</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, Vogelsangpass</exactsite>
      <coordinates>
        <lat>48.087</lat>
        <lon>7.692</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243856</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08772+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875219</record_id>
    <processid>GBACU1208-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14508</sampleid>
      <catalognum>BC ZSM HYM 14508</catalognum>
      <fieldnum>BC ZSM HYM 14508</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>5 km N Frankfurt/ Oder, S Lebu</exactsite>
      <coordinates>
        <lat>52.42</lat>
        <lon>14.53</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>47</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825269</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14508+1345839350.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912234</record_id>
    <processid>GBACU1880-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14230</sampleid>
      <catalognum>BC ZSM HYM 14230</catalognum>
      <fieldnum>BC ZSM HYM 14230</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>243</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834226</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14230+1449672346.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912238</record_id>
    <processid>GBACU1884-12</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14234</sampleid>
      <catalognum>BC ZSM HYM 14234</catalognum>
      <fieldnum>BC ZSM HYM 14234</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bickensohl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.66</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>422</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834230</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14234+1449672348.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912239</record_id>
    <processid>GBACU1885-12</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14235</sampleid>
      <catalognum>BC ZSM HYM 14235</catalognum>
      <fieldnum>BC ZSM HYM 14235</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bickensohl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.66</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>422</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834231</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14235+1449672348.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856410</record_id>
    <processid>GBAH3879-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726628</sampleid>
      <catalognum>EU726628</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856416</record_id>
    <processid>GBAH3885-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726622</sampleid>
      <catalognum>EU726622</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856422</record_id>
    <processid>GBAH3891-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726616</sampleid>
      <catalognum>EU726616</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856425</record_id>
    <processid>GBAH3894-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726613</sampleid>
      <catalognum>EU726613</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856433</record_id>
    <processid>GBAH3902-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726605</sampleid>
      <catalognum>EU726605</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856434</record_id>
    <processid>GBAH3903-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726604</sampleid>
      <catalognum>EU726604</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856444</record_id>
    <processid>GBAH3913-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726594</sampleid>
      <catalognum>EU726594</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856455</record_id>
    <processid>GBAH3924-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726583</sampleid>
      <catalognum>EU726583</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856467</record_id>
    <processid>GBAH3936-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726571</sampleid>
      <catalognum>EU726571</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856469</record_id>
    <processid>GBAH3938-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726569</sampleid>
      <catalognum>EU726569</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856473</record_id>
    <processid>GBAH3942-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726565</sampleid>
      <catalognum>EU726565</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5220547</record_id>
    <processid>GMGMH1542-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-H11</sampleid>
      <catalognum>BIOUG17018-H11</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>560</record_id>
    <processid>HCBNS173-03</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee70</sampleid>
      <fieldnum>Bee70</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Kentville</sector>
      <coordinates>
        <lat>45.07</lat>
        <lon>-64.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4837</record_id>
    <processid>HDBNS094-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c94</sampleid>
      <catalognum>CSS#167</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Upper Canard</sector>
      <coordinates>
        <lat>45.135</lat>
        <lon>-64.489</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1420913</record_id>
    <processid>IBBP207-10</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>TCDB-T309</sampleid>
      <fieldnum>8020-A01</fieldnum>
      <institution_storing>Trinity College, Dublin</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Karl Magnacca</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>284782</taxID>
          <name>Osmia rufa</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. Magnacca</collectors>
      <country>Ireland</country>
      <region>Dublin</region>
      <exactsite>Trinity Hall, Dartry</exactsite>
      <coordinates>
        <lat>53.312</lat>
        <lon>-6.2598</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1423013</record_id>
    <processid>JSYKA141-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-047</sampleid>
      <fieldnum>L#JSYKB-047</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot16</exactsite>
      <coordinates>
        <lat>69.1658</lat>
        <lon>-140.188</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754267</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7937+1272293040.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>2645983</record_id>
    <processid>MAMTK571-12</processid>
    <bin_uri>BOLD:ACA2606</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG02561-G05</sampleid>
      <fieldnum>GMP#00519</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Muhammad Ashfaq</identification_provided_by>
      <identification_method>BOLD ID engine/ morphology</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>591749</taxID>
          <name>Osmia ma04</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
    </specimen_desc>
    <collection_event>
      <collectors>Muhammad Rafique</collectors>
      <site_code>BIOUG:RAWAL</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Pakistan</country>
      <province_state>Islamabad</province_state>
      <sector>Islamabad</sector>
      <exactsite>Pakistan Museum of Natural History</exactsite>
      <coordinates>
        <lat>33.686</lat>
        <lon>73.076</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1815174</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/MAMTK/IMG_2806+1351004124.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Malaise - Ashfaq 2012]]&gt;</notes>
  </record>
  <record>
    <record_id>1132310</record_id>
    <processid>NOBEE055-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00055</sampleid>
      <catalognum>NHMO_APO00055</catalognum>
      <fieldnum>NHMO_APO00055</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Endrestol, Anders</collectors>
      <country>Norway</country>
      <province_state>Akershus</province_state>
      <region>Oslo</region>
      <exactsite>Ekebergskraningen [NW]</exactsite>
      <coordinates>
        <lat>59.8948</lat>
        <lon>10.7596</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107430</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00055+1375713706.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1132314</record_id>
    <processid>NOBEE059-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00059</sampleid>
      <catalognum>NHMO_APO00059</catalognum>
      <fieldnum>NHMO_APO00059</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Hansen, Lars Ove</collectors>
      <country>Norway</country>
      <province_state>Buskerud</province_state>
      <region>Drammen</region>
      <exactsite>Underlia</exactsite>
      <coordinates>
        <lat>59.7549</lat>
        <lon>10.1764</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107432</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00059+1375713904.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6295927</record_id>
    <processid>SRIRP004-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-3</sampleid>
      <catalognum>SRFS-3</catalognum>
      <fieldnum>SRFS-3</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>2N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.948</lat>
        <lon>-120.111</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>466.1</elev>
    </collection_event>
    <notes>&lt;![CDATA[Kelly Alesio, Fisher Price]]&gt;</notes>
  </record>
  <record>
    <record_id>2936930</record_id>
    <processid>SSBAC3522-12</processid>
    <bin_uri>BOLD:AAK6054</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG03981-F05</sampleid>
      <catalognum>BIOUG03981-F05</catalognum>
      <fieldnum>L#12BIOBUS-0459</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Wetland</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|mostly cloudy and 16C on end date</collection_note>
      <site_code>BIOUG:BANFF-NP:2</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff National Park</region>
      <sector>Corral Creek old road</sector>
      <coordinates>
        <lat>51.407</lat>
        <lon>-116.154</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1539</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2071708</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSBAC/BIOUG03981-F05+1372873454.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199622</record_id>
    <processid>SSWLB1504-13</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04934-H01</sampleid>
      <catalognum>BIOUG04934-H01</catalognum>
      <fieldnum>L#12BIOBUS-0642</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>1 Intercept Trap|Mostly cloudy, Windy, 6C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:3</site_code>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.081</lat>
        <lon>-113.879</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1335</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>970635</record_id>
    <processid>TTHYW365-08</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0332</sampleid>
      <catalognum>08BBHYM-0332</catalognum>
      <fieldnum>L#08BANFF-035</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Wetland</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>daytime netting||Oxbow marsh complex</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff NP</region>
      <sector>Vermillion Lakes/Bow River</sector>
      <coordinates>
        <lat>51.178</lat>
        <lon>-115.606</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1386</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>370980</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_8900+1231438810.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>8362250</record_id>
    <processid>ABEE151-17</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 773</sampleid>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sabine Schoder</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Lower Austria</province_state>
      <exactsite>Eichkogel</exactsite>
      <coordinates>
        <lat>48.0625</lat>
        <lon>16.2925</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3955534</record_id>
    <processid>ASGCB257-13</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F06</sampleid>
      <fieldnum>BIOUG07489-F06</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>Tree Based Identification (Mar 2017)</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172461</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_40_Y_Dorsal+1383686220.jpg</image_file>
      </media>
      <media>
        <mediaID>2172462</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_40_Y_Lateral+1383686210.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3955539</record_id>
    <processid>ASGCB262-13</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F11</sampleid>
      <fieldnum>BIOUG07489-F11</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172470</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_15_B_Dorsal+1383686228.jpg</image_file>
      </media>
      <media>
        <mediaID>2172471</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_15_B_Lateral+1383686230.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4005341</record_id>
    <processid>BCHYM1492-13</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19352</sampleid>
      <catalognum>BC ZSM HYM 19352</catalognum>
      <fieldnum>BC ZSM HYM 19352</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Saxony-Anhalt</province_state>
      <exactsite>Thurland</exactsite>
      <coordinates>
        <lat>51.715</lat>
        <lon>12.222</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>77</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185445</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19352+1382029602.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3896352</record_id>
    <processid>BCHYM411-13</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 18271</sampleid>
      <catalognum>BC ZSM HYM 18271</catalognum>
      <fieldnum>BC ZSM HYM 18271</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Diez</exactsite>
      <coordinates>
        <lat>50.366</lat>
        <lon>8.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>130</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2157645</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_18271+1364415080.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3896354</record_id>
    <processid>BCHYM413-13</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 18273</sampleid>
      <catalognum>BC ZSM HYM 18273</catalognum>
      <fieldnum>BC ZSM HYM 18273</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Brodtkowitz</exactsite>
      <coordinates>
        <lat>51.748</lat>
        <lon>14.252</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>65</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2157647</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_18273+1364415336.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281104</record_id>
    <processid>BEECA074-06</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0074</sampleid>
      <fieldnum>04-MB-0074</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281155</record_id>
    <processid>BEECA125-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0125</sampleid>
      <fieldnum>04-ON-0125</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281213</record_id>
    <processid>BEECA183-06</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0183</sampleid>
      <fieldnum>03-BC-0183</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516949</record_id>
    <processid>BEECA597-06</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0597</sampleid>
      <fieldnum>04-MB-0597</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>H. Taki and P. Kevan</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <exactsite>Churchill, Kame at Twin Lakes</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516955</record_id>
    <processid>BEECA603-06</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0603</sampleid>
      <fieldnum>06-YT-0603</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516958</record_id>
    <processid>BEECA606-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>05-NT-0606</sampleid>
      <fieldnum>05-NT-0606</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Sheffield and A. Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Hwy 3, near Rae</exactsite>
      <coordinates>
        <lat>62.7209</lat>
        <lon>-116.077</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554159</record_id>
    <processid>BEECA969-07</processid>
    <bin_uri>BOLD:ABY7557</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0796</sampleid>
      <fieldnum>01-OR-0796</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265228</taxID>
          <name>Osmia pentstemonis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596923</record_id>
    <processid>BEECB361-07</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1079</sampleid>
      <catalognum>BBSL696518</catalognum>
      <fieldnum>04-WA-1079</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>3 mi SE Hodges Horse Pasture</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596929</record_id>
    <processid>BEECB367-07</processid>
    <bin_uri>BOLD:AAC5802</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1085</sampleid>
      <catalognum>BBSL697518</catalognum>
      <fieldnum>04-WA-1085</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Tiffany Mountain</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596934</record_id>
    <processid>BEECB372-07</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1090</sampleid>
      <catalognum>BBSL697150</catalognum>
      <fieldnum>04-WA-1090</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Long Swamp</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597016</record_id>
    <processid>BEECB454-07</processid>
    <bin_uri>BOLD:AAF2158</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1173</sampleid>
      <catalognum>BBSL623198</catalognum>
      <fieldnum>05-CA-1173</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84710</taxID>
          <name>Osmia cobaltina</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597067</record_id>
    <processid>BEECB505-07</processid>
    <bin_uri>BOLD:AAD0302</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1223</sampleid>
      <fieldnum>07-ID-1223</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96618</taxID>
          <name>Osmia calla</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688092</record_id>
    <processid>BEECB802-07</processid>
    <bin_uri>BOLD:AAE4128</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1519</sampleid>
      <fieldnum>07-BC-1519</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204025</taxID>
          <name>Osmia malina</name>
          <reference>Cockerell, 1909</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <site_code>BC4</site_code>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Vancouver Island</region>
      <coordinates>
        <lat>49.4474</lat>
        <lon>-124.758</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>28</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060907</record_id>
    <processid>BEECC1204-09</processid>
    <bin_uri>BOLD:AAE5489</bin_uri>
    <specimen_identifiers>
      <sampleid>01-UT-2877</sampleid>
      <catalognum>BBSL420460</catalognum>
      <fieldnum>01-UT-2877</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204360</taxID>
          <name>Osmia pikei</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Cougar Knoll, 0.97 mi SSE</exactsite>
      <coordinates>
        <lat>37.3</lat>
        <lon>-111.128</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844559</record_id>
    <processid>BEECC196-08</processid>
    <bin_uri>BOLD:AAD5711</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1869</sampleid>
      <catalognum>PYU-2576</catalognum>
      <fieldnum>07-WA-1869</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Whitman Co.</region>
      <exactsite>10 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.427</lat>
        <lon>-117.151</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1057709</record_id>
    <processid>BEECC964-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2732</sampleid>
      <catalognum>BBSL567632</catalognum>
      <fieldnum>04-CA-2732</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.2 mi NNE Merced Lk Rngr Sta</exactsite>
      <coordinates>
        <lat>37.754</lat>
        <lon>-119.387</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650662</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2732+1263589938.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Epilobium angustifolium ssp.circumvagum]]&gt;</notes>
  </record>
  <record>
    <record_id>1057714</record_id>
    <processid>BEECC969-09</processid>
    <bin_uri>BOLD:AAI1944</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2737</sampleid>
      <catalognum>BBSL627500</catalognum>
      <fieldnum>05-CA-2737</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204032</taxID>
          <name>Osmia sculleni</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>2 mi W Andrews Peak</exactsite>
      <coordinates>
        <lat>38.041</lat>
        <lon>-119.717</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650667</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2737+1263590100.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Hackelia velutina]]&gt;</notes>
  </record>
  <record>
    <record_id>5983222</record_id>
    <processid>BEEEE072-15</processid>
    <bin_uri>BOLD:AAI1846</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970402</sampleid>
      <catalognum>BMNH(E)#970402</catalognum>
      <fieldnum>BMNH(E)#970402</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <tissue_type>Leg</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: TQ376762</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>London</region>
      <sector>Lewisham</sector>
      <coordinates>
        <lat>51.468</lat>
        <lon>-0.02</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: London: Lewisham: TQ376762: 10.v.2015: D.Notton: leg. D.G.Notton BMNH-ENT-2015-89: m Osmia leaiana det. D.Notton, 2015: BMNH(E)#970402]]&gt;</notes>
  </record>
  <record>
    <record_id>7092244</record_id>
    <processid>BEEEE274-16</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#1730774</sampleid>
      <catalognum>BMNH(E)#1730774</catalognum>
      <fieldnum>BMNH(E)#1730774</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Martin C. Harvey</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <tissue_type>Whole</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Rory O`Connor</collectors>
      <collection_note>LatLong based on UK grid reference: SH6573</collection_note>
      <sampling_protocol>Pan trap</sampling_protocol>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Abergwyngregyn</region>
      <coordinates>
        <lat>53.237</lat>
        <lon>-4.024</lon>
        <coord_source></coord_source>
        <coord_accuracy>1000</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Abergwyngregyn: SH6573: 21.v.2015: Rory O`Connor: Claire Carvell: m Osmia bicornis : det. Harvey, Martin C. 2015: BMNH(E)#1730774]]&gt;</notes>
  </record>
  <record>
    <record_id>7200199</record_id>
    <processid>CRHIH009-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-G07</sampleid>
      <catalognum>BIOUG30310-G07</catalognum>
      <fieldnum>L#16CRH-0007</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7218889</record_id>
    <processid>CRHIH494-16</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-C08</sampleid>
      <catalognum>BIOUG30450-C08</catalognum>
      <fieldnum>L#16CRH-0037</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|grass</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 3</exactsite>
      <coordinates>
        <lat>43.491</lat>
        <lon>-79.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>87</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7221651</record_id>
    <processid>CRHII780-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-F08</sampleid>
      <catalognum>BIOUG30450-F08</catalognum>
      <fieldnum>L#16CRH-0040</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7222537</record_id>
    <processid>CRHIJ885-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30470-C04</sampleid>
      <catalognum>BIOUG30470-C04</catalognum>
      <fieldnum>L#16CRH-0043</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|control; grass, goldenrod</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 5</exactsite>
      <coordinates>
        <lat>43.4878</lat>
        <lon>-79.615</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>82</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7222540</record_id>
    <processid>CRHIJ888-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30470-C07</sampleid>
      <catalognum>BIOUG30470-C07</catalognum>
      <fieldnum>L#16CRH-0043</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|control; grass, goldenrod</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 5</exactsite>
      <coordinates>
        <lat>43.4878</lat>
        <lon>-79.615</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>82</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7222541</record_id>
    <processid>CRHIJ889-16</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30470-C08</sampleid>
      <catalognum>BIOUG30470-C08</catalognum>
      <fieldnum>L#16CRH-0043</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|control; grass, goldenrod</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 5</exactsite>
      <coordinates>
        <lat>43.4878</lat>
        <lon>-79.615</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>82</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289050</record_id>
    <processid>FBAPB689-09</processid>
    <bin_uri>BOLD:AAI1846</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02164</sampleid>
      <catalognum>BC ZSM HYM 02164</catalognum>
      <fieldnum>BC ZSM HYM 02164</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Lombardy</province_state>
      <exactsite>Bormio, Eita</exactsite>
      <coordinates>
        <lat>46.38</lat>
        <lon>10.24</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663027</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02164+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709622</record_id>
    <processid>FBAPC356-10</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05961</sampleid>
      <catalognum>BC ZSM HYM 05961</catalognum>
      <fieldnum>BC ZSM HYM 05961</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Chambave</exactsite>
      <coordinates>
        <lat>45.744</lat>
        <lon>7.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>496</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189822</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05961+1309188392.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2021825</record_id>
    <processid>FBAPC532-11</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 06992</sampleid>
      <catalognum>BC ZSM HYM 06992</catalognum>
      <fieldnum>BC ZSM HYM 06992</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>St. Dalmas-Valdeblore, Millefonts</exactsite>
      <coordinates>
        <lat>44.098</lat>
        <lon>7.186</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2030</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171209</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_06992+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083341</record_id>
    <processid>FBAPC857-11</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08362</sampleid>
      <catalognum>BC ZSM HYM 08362</catalognum>
      <fieldnum>BC ZSM HYM 08362</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Worms, Pfeddersheim NE</exactsite>
      <coordinates>
        <lat>49.6368</lat>
        <lon>8.2804</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>118</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243535</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08362+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083357</record_id>
    <processid>FBAPC873-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08378</sampleid>
      <catalognum>BC ZSM HYM 08378</catalognum>
      <fieldnum>BC ZSM HYM 08378</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Goellheim N</exactsite>
      <coordinates>
        <lat>49.594</lat>
        <lon>8.0539</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243551</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08378+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083358</record_id>
    <processid>FBAPC874-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08379</sampleid>
      <catalognum>BC ZSM HYM 08379</catalognum>
      <fieldnum>BC ZSM HYM 08379</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Goellheim N</exactsite>
      <coordinates>
        <lat>49.594</lat>
        <lon>8.0539</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243552</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08379+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083454</record_id>
    <processid>FBAPC970-11</processid>
    <bin_uri>BOLD:AAZ0859</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08475</sampleid>
      <catalognum>BC ZSM HYM 08475</catalognum>
      <fieldnum>BC ZSM HYM 08475</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265274</taxID>
          <name>Osmia pilicornis</name>
          <reference>Smith, 1846</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Fahner Hoehe, Molschleben, Bienstaedter Warte</exactsite>
      <coordinates>
        <lat>51.017</lat>
        <lon>10.838</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>359</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243648</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08475+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140448</record_id>
    <processid>FBAPD237-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09547</sampleid>
      <catalognum>BC ZSM HYM 09547</catalognum>
      <fieldnum>BC ZSM HYM 09547</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Konstanz</exactsite>
      <coordinates>
        <lat>47.661</lat>
        <lon>9.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>430</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1311265</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_09547+1315500456.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[check sex]]&gt;</notes>
  </record>
  <record>
    <record_id>2140526</record_id>
    <processid>FBAPD315-11</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07725</sampleid>
      <catalognum>BC ZSM HYM 07725</catalognum>
      <fieldnum>BC ZSM HYM 07725</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 23 km S Cadiz, Chiclanca, E-cad 1</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310868</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07725+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133849</record_id>
    <processid>FBHAP297-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00392</sampleid>
      <catalognum>BC ZSM HYM 00392</catalognum>
      <fieldnum>BC ZSM HYM 00392</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>changed from bicolor (JS, 06.2010)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Mattesmuehle</exactsite>
      <coordinates>
        <lat>48.848</lat>
        <lon>10.714</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>440</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497293</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00392+1244555706.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:changed from bicolor (JS, 06.2010) ::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>1133852</record_id>
    <processid>FBHAP300-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00395</sampleid>
      <catalognum>BC ZSM HYM 00395</catalognum>
      <fieldnum>BC ZSM HYM 00395</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Allacher Forst</exactsite>
      <coordinates>
        <lat>48.2</lat>
        <lon>11.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497296</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00395+1244555732.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133882</record_id>
    <processid>FBHAP330-09</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00425</sampleid>
      <catalognum>BC ZSM HYM 00425</catalognum>
      <fieldnum>BC ZSM HYM 00425</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Eichstaett</exactsite>
      <coordinates>
        <lat>48.892</lat>
        <lon>11.18</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>470</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497326</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00425+1244555876.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from Osmia (JS 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>3199239</record_id>
    <processid>GBACU3700-13</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17285</sampleid>
      <catalognum>BC ZSM HYM 17285</catalognum>
      <fieldnum>BC ZSM HYM 17285</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Grissheim</exactsite>
      <coordinates>
        <lat>47.87</lat>
        <lon>7.56</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>210</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937576</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17285+1362509786.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>470891</record_id>
    <processid>GBAH0294-06</processid>
    <bin_uri>BOLD:AAW9622</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250941</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33109</taxID>
          <name>Osmia opima</name>
          <reference>Romankova, 1985</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856420</record_id>
    <processid>GBAH3889-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726618</sampleid>
      <catalognum>EU726618</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Chuncheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856423</record_id>
    <processid>GBAH3892-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726615</sampleid>
      <catalognum>EU726615</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856438</record_id>
    <processid>GBAH3907-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726600</sampleid>
      <catalognum>EU726600</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856447</record_id>
    <processid>GBAH3916-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726591</sampleid>
      <catalognum>EU726591</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856450</record_id>
    <processid>GBAH3919-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726588</sampleid>
      <catalognum>EU726588</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856483</record_id>
    <processid>GBAH3952-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726555</sampleid>
      <catalognum>EU726555</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1021466</record_id>
    <processid>GBAH4626-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>EU863060</sampleid>
      <catalognum>EU863060</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616544</record_id>
    <processid>GBAH7426-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583322</sampleid>
      <catalognum>KC583322</catalognum>
      <fieldnum>KC583322</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3174210</record_id>
    <processid>GBMIN17980-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135989</sampleid>
      <catalognum>ADU072</catalognum>
      <fieldnum>KC135989</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417840</record_id>
    <processid>GBMIN78104-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957862</sampleid>
      <fieldnum>KX957862</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>568</record_id>
    <processid>HCBNS181-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee94</sampleid>
      <catalognum>CSS#171</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Lockhartville</sector>
      <coordinates>
        <lat>45.085</lat>
        <lon>-64.234</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>406</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS181-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4838</record_id>
    <processid>HDBNS095-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c95</sampleid>
      <catalognum>CSS#168</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Digby County</region>
      <sector>Church Point</sector>
      <coordinates>
        <lat>44.368</lat>
        <lon>-66.094</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1420912</record_id>
    <processid>IBBP206-10</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>TCDB-T250</sampleid>
      <fieldnum>8020-P08</fieldnum>
      <institution_storing>Trinity College, Dublin</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Karl Magnacca</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>284782</taxID>
          <name>Osmia rufa</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. Magnacca</collectors>
      <country>Ireland</country>
      <region>Dublin</region>
      <exactsite>Trinity Hall, Dartry</exactsite>
      <coordinates>
        <lat>53.312</lat>
        <lon>-6.2598</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3217980</record_id>
    <processid>SMTPB10101-13</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG05607-C07</sampleid>
      <catalognum>BIOUG05607-C07</catalognum>
      <fieldnum>GMP#00994</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>BOLD ID Engine</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>London, Byron Somerset PS</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Suzanne Glasgow</collectors>
      <site_code>BIOUG:SCHOOL-MTP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>London</region>
      <sector>Byron Somerset Public School</sector>
      <exactsite>EQP-CLL-587</exactsite>
      <coordinates>
        <lat>42.947</lat>
        <lon>-81.326</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2035920</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/SMTPC/bioug05607-c07+1368801892.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Malaise 22-Apr-13 to 03-May-13]]&gt;</notes>
  </record>
  <record>
    <record_id>6295928</record_id>
    <processid>SRIRP005-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-7</sampleid>
      <catalognum>SRFS-7</catalognum>
      <fieldnum>SRFS-7</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>1S PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9442</lat>
        <lon>-120.117</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>446.41</elev>
    </collection_event>
    <notes>&lt;![CDATA[Phoebe Wilkinson, Piper Stump]]&gt;</notes>
  </record>
  <record>
    <record_id>3479812</record_id>
    <processid>SSPAC029-13</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG06524-G03</sampleid>
      <catalognum>BIOUG06524-G03</catalognum>
      <fieldnum>L#12BIOBUS-0942</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Prince Albert NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>2 Malaise Traps|Sunny, Hazy, 30C|mixed wood forest, poplar/white spruce, thick understory</collection_note>
      <site_code>BIOUG:PRINCEALB-NP:1</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Saskatchewan</province_state>
      <region>Prince Albert National Park</region>
      <sector>Spruce River Highlands Trail</sector>
      <coordinates>
        <lat>53.7125</lat>
        <lon>-106.048</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>541</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1050989</record_id>
    <processid>UPOLB600-09</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20080519-016</sampleid>
      <fieldnum>G1Y May 15 -19 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051005</record_id>
    <processid>UPOLB616-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>G2Y-20080519-012</sampleid>
      <fieldnum>G2Y May 15 -19 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Guelph Lake Sports Fields</exactsite>
      <coordinates>
        <lat>43.588</lat>
        <lon>-80.254</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051142</record_id>
    <processid>UPOLB753-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>I4Y-20080612-001</sampleid>
      <fieldnum>I4Y June 9 - 12 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Cambridge</sector>
      <exactsite>Savage Road</exactsite>
      <coordinates>
        <lat>43.366</lat>
        <lon>-80.287</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281193</record_id>
    <processid>BEECA163-06</processid>
    <bin_uri>BOLD:AAC3107</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0163</sampleid>
      <fieldnum>03-BC-0163</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516946</record_id>
    <processid>BEECA594-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>05-NT-0594</sampleid>
      <fieldnum>05-NT-0594</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Anne Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Yellowknife, Ingram Trail</exactsite>
    </collection_event>
    <notes>&lt;![CDATA[on fireweed]]&gt;</notes>
  </record>
  <record>
    <record_id>706417</record_id>
    <processid>BEECB1021-07</processid>
    <bin_uri>BOLD:ABZ1435</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CO-1642</sampleid>
      <catalognum>USGSDRO34212</catalognum>
      <fieldnum>04-CO-1642</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204033</taxID>
          <name>Osmia giliarum</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Colorado</province_state>
      <region>Jackson Co.</region>
      <coordinates>
        <lat>40.602</lat>
        <lon>-106.073</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[::taxonomy:Originally identified as O. physariae.  Should be Osmia aff. giliarum. -MGR::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>596914</record_id>
    <processid>BEECB352-07</processid>
    <bin_uri>BOLD:ABY6905</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1070</sampleid>
      <catalognum>BBSL697087</catalognum>
      <fieldnum>04-WA-1070</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96579</taxID>
          <name>Osmia odontogaster</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Virginia Lilly Trailhead</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596920</record_id>
    <processid>BEECB358-07</processid>
    <bin_uri>BOLD:AAC5797</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1076</sampleid>
      <catalognum>BBSL697174</catalognum>
      <fieldnum>04-WA-1076</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J.Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi SSW Corral Butte</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596927</record_id>
    <processid>BEECB365-07</processid>
    <bin_uri>BOLD:AAC5802</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1083</sampleid>
      <catalognum>BBSL697192</catalognum>
      <fieldnum>04-WA-1083</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.4 mi SW Thunder Mountain</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596931</record_id>
    <processid>BEECB369-07</processid>
    <bin_uri>BOLD:AAE4089</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1087</sampleid>
      <catalognum>BBSL696671</catalognum>
      <fieldnum>04-WA-1087</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96586</taxID>
          <name>Osmia albolateralis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1 mi E Muckamuck Hill</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597006</record_id>
    <processid>BEECB444-07</processid>
    <bin_uri>BOLD:AAC3290</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-1163</sampleid>
      <catalognum>BBSL484532</catalognum>
      <fieldnum>03-UT-1163</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597011</record_id>
    <processid>BEECB449-07</processid>
    <bin_uri>BOLD:ABY6391</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1168</sampleid>
      <catalognum>BBSL626331</catalognum>
      <fieldnum>05-CA-1168</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>95794</taxID>
          <name>Osmia exigua</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597071</record_id>
    <processid>BEECB509-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1227</sampleid>
      <fieldnum>07-ID-1227</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597072</record_id>
    <processid>BEECB510-07</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1228</sampleid>
      <fieldnum>07-ID-1228</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688034</record_id>
    <processid>BEECB744-07</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1367</sampleid>
      <catalognum>PYU-1100</catalognum>
      <fieldnum>07-ID-1367</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Butte Co.</region>
      <exactsite>Craters of the Moon Nat. Mon</exactsite>
      <coordinates>
        <lat>43.464</lat>
        <lon>-113.559</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1815</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688035</record_id>
    <processid>BEECB745-07</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1368</sampleid>
      <catalognum>PYU-1094</catalognum>
      <fieldnum>07-ID-1368</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Butte Co.</region>
      <exactsite>Craters of the Moon Nat. Mon</exactsite>
      <coordinates>
        <lat>43.464</lat>
        <lon>-113.559</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1815</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060871</record_id>
    <processid>BEECC1168-09</processid>
    <bin_uri>BOLD:ABX5180</bin_uri>
    <specimen_identifiers>
      <sampleid>00-UT-2841</sampleid>
      <catalognum>BBSL379770</catalognum>
      <fieldnum>00-UT-2841</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Henry Mountains, Nasty Flat, 0.8 mi W</exactsite>
      <coordinates>
        <lat>38.069</lat>
        <lon>-110.804</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060933</record_id>
    <processid>BEECC1230-09</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2903</sampleid>
      <catalognum>BBSL557202</catalognum>
      <fieldnum>04-CA-2903</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>O`Shaughnessy Dam</exactsite>
      <coordinates>
        <lat>37.947</lat>
        <lon>-119.788</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[Limnanthes alba ssp.versicolor]]&gt;</notes>
  </record>
  <record>
    <record_id>903183</record_id>
    <processid>BEECC286-08</processid>
    <bin_uri>BOLD:ABZ2181</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ON-1958</sampleid>
      <catalognum>ANT_383</catalognum>
      <fieldnum>07-ON-1958</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84727</taxID>
          <name>Osmia georgica</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>WPT</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>A. Taylor</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Lambton</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>973665</record_id>
    <processid>BEECC527-08</processid>
    <bin_uri>BOLD:AAF2177</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-2200</sampleid>
      <catalognum>USGSDRO075535</catalognum>
      <fieldnum>07-SC-2200</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162344</taxID>
          <name>Osmia inspergens</name>
          <reference>Lovell &amp; Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.265</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650195</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2200+1263584102.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1011051</record_id>
    <processid>BEECC872-09</processid>
    <bin_uri>BOLD:AAC8498</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2450</sampleid>
      <catalognum>BBSL465055</catalognum>
      <fieldnum>02-UT-2450</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204359</taxID>
          <name>Osmia cockerelli</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Millett, Megan</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Lick Wash</exactsite>
      <coordinates>
        <lat>37.36</lat>
        <lon>-112.185</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650408</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2450+1263585192.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:was identified as O. alpestris::endTaxonomy:No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011059</record_id>
    <processid>BEECC880-09</processid>
    <bin_uri>BOLD:AAC8498</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2458</sampleid>
      <catalognum>BBSL514283</catalognum>
      <fieldnum>03-UT-2458</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204359</taxID>
          <name>Osmia cockerelli</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Hansen, Brian</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Butler Valley, 4.0 mi S</exactsite>
      <coordinates>
        <lat>37.401</lat>
        <lon>-111.847</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650416</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2458+1263585154.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:was identified as O. alpestris::endTaxonomy:No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057719</record_id>
    <processid>BEECC974-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2742</sampleid>
      <catalognum>BBSL619108</catalognum>
      <fieldnum>05-CA-2742</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204035</taxID>
          <name>Osmia giffardi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.8 mi SSW Ostrander Rocks</exactsite>
      <coordinates>
        <lat>37.666</lat>
        <lon>-119.604</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650672</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2742+1263589964.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>7212717</record_id>
    <processid>CRHIF431-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-G01</sampleid>
      <catalognum>BIOUG30420-G01</catalognum>
      <fieldnum>L#16CRH-0031</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.6165</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7209507</record_id>
    <processid>CRHII272-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-C06</sampleid>
      <catalognum>BIOUG30420-C06</catalognum>
      <fieldnum>L#16CRH-0011</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>1 Intercept trap|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289035</record_id>
    <processid>FBAPB674-09</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02149</sampleid>
      <catalognum>BC ZSM HYM 02149</catalognum>
      <fieldnum>BC ZSM HYM 02149</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663012</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02149+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289038</record_id>
    <processid>FBAPB677-09</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02152</sampleid>
      <catalognum>BC ZSM HYM 02152</catalognum>
      <fieldnum>BC ZSM HYM 02152</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Karlsruhe, Rappenwoerth</exactsite>
      <coordinates>
        <lat>49</lat>
        <lon>8.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>110</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663015</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02152+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289044</record_id>
    <processid>FBAPB683-09</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02158</sampleid>
      <catalognum>BC ZSM HYM 02158</catalognum>
      <fieldnum>BC ZSM HYM 02158</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bretten, Freudenstein</exactsite>
      <coordinates>
        <lat>49.03</lat>
        <lon>8.8</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663021</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02158+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289079</record_id>
    <processid>FBAPB718-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02193</sampleid>
      <catalognum>BC ZSM HYM 02193</catalognum>
      <fieldnum>BC ZSM HYM 02193</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <sector>Lower Bavaria</sector>
      <exactsite>Grafenau, NP Bayerischer Wald</exactsite>
      <coordinates>
        <lat>48.89</lat>
        <lon>13.38</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>600</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663056</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02193+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289100</record_id>
    <processid>FBAPB739-09</processid>
    <bin_uri>BOLD:AAI1999</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02214</sampleid>
      <catalognum>BC ZSM HYM 02214</catalognum>
      <fieldnum>BC ZSM HYM 02214</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214092</taxID>
          <name>Osmia uncinata</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <sector>Upper Bavaria</sector>
      <exactsite>Augsburg-Haunstetten</exactsite>
      <coordinates>
        <lat>48.3</lat>
        <lon>10.94</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>510</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663077</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02214+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289111</record_id>
    <processid>FBAPB750-09</processid>
    <bin_uri>BOLD:AAI1998</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02225</sampleid>
      <catalognum>BC ZSM HYM 02225</catalognum>
      <fieldnum>BC ZSM HYM 02225</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265280</taxID>
          <name>Osmia viridana</name>
          <reference>Morawitz, 1874</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>St. Pierre</exactsite>
      <coordinates>
        <lat>45.7</lat>
        <lon>7.32</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>800</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663088</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02225+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709624</record_id>
    <processid>FBAPC358-10</processid>
    <bin_uri>BOLD:AAI1798</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05963</sampleid>
      <catalognum>BC ZSM HYM 05963</catalognum>
      <fieldnum>BC ZSM HYM 05963</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Croatia</country>
      <region>Insel Rab, Dalmatia</region>
      <exactsite>Banjol</exactsite>
      <coordinates>
        <lat>44.748</lat>
        <lon>14.786</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>4</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189824</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05963+1309188388.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709626</record_id>
    <processid>FBAPC360-10</processid>
    <bin_uri>BOLD:ACC6235</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05965</sampleid>
      <catalognum>BC ZSM HYM 05965</catalognum>
      <fieldnum>BC ZSM HYM 05965</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Turkey</country>
      <province_state>Ankara</province_state>
      <exactsite>Ankara,  Hacettepe University Beytepe</exactsite>
      <coordinates>
        <lat>39.87</lat>
        <lon>32.734</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1044</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189826</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05965+1309188386.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709641</record_id>
    <processid>FBAPC375-10</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05980</sampleid>
      <catalognum>BC ZSM HYM 05980</catalognum>
      <fieldnum>BC ZSM HYM 05980</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Saint-Pierre</exactsite>
      <coordinates>
        <lat>45.709</lat>
        <lon>7.23</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>710</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189841</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05980+1309188370.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from O. fulviventris (JS, 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>2083174</record_id>
    <processid>FBAPD120-11</processid>
    <bin_uri>BOLD:AAY5207</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08765</sampleid>
      <catalognum>BC ZSM HYM 08765</catalognum>
      <fieldnum>BC ZSM HYM 08765</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Badberg, E Vogtsburg near Kaiserstuhl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.67</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>515</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243849</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08765+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083184</record_id>
    <processid>FBAPD130-11</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08775</sampleid>
      <catalognum>BC ZSM HYM 08775</catalognum>
      <fieldnum>BC ZSM HYM 08775</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Badberg, E Vogtsburg near Kaiserstuhl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.67</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>515</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243859</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08775+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140531</record_id>
    <processid>FBAPD320-11</processid>
    <bin_uri>BOLD:AAZ7870</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07730</sampleid>
      <catalognum>BC ZSM HYM 07730</catalognum>
      <fieldnum>BC ZSM HYM 07730</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>396028</taxID>
          <name>Osmia latreillei</name>
          <reference>Spinola, 1806</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km, SW Sevilla, W Matalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310873</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07730+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133847</record_id>
    <processid>FBHAP295-09</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00390</sampleid>
      <catalognum>BC ZSM HYM 00390</catalognum>
      <fieldnum>BC ZSM HYM 00390</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Vorderriss</exactsite>
      <coordinates>
        <lat>47.55</lat>
        <lon>11.436</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>790</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497291</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00390+1244555690.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133881</record_id>
    <processid>FBHAP329-09</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00424</sampleid>
      <catalognum>BC ZSM HYM 00424</catalognum>
      <fieldnum>BC ZSM HYM 00424</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Eichstaett</exactsite>
      <coordinates>
        <lat>48.892</lat>
        <lon>11.18</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>470</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497325</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00424+1244555866.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from Osmia (JS 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>2875163</record_id>
    <processid>GBACU1152-12</processid>
    <bin_uri>BOLD:AAE4127</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14452</sampleid>
      <catalognum>BC ZSM HYM 14452</catalognum>
      <fieldnum>BC ZSM HYM 14452</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Mallnow</exactsite>
      <coordinates>
        <lat>52.56</lat>
        <lon>14.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>6</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825213</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14452+1345837632.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875218</record_id>
    <processid>GBACU1207-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14507</sampleid>
      <catalognum>BC ZSM HYM 14507</catalognum>
      <fieldnum>BC ZSM HYM 14507</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>246</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825268</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14507+1345839310.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875242</record_id>
    <processid>GBACU1231-12</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14531</sampleid>
      <catalognum>BC ZSM HYM 14531</catalognum>
      <fieldnum>BC ZSM HYM 14531</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Grissheim</exactsite>
      <coordinates>
        <lat>47.87</lat>
        <lon>7.56</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>210</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825292</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14531+1345839904.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875279</record_id>
    <processid>GBACU1268-12</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14568</sampleid>
      <catalognum>BC ZSM HYM 14568</catalognum>
      <fieldnum>BC ZSM HYM 14568</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Kyffhaeusen, 1 km E Badra</exactsite>
      <coordinates>
        <lat>51.4</lat>
        <lon>11</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>472</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825648</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14568+1346258898.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2911998</record_id>
    <processid>GBACU1644-12</processid>
    <bin_uri>BOLD:AAE4127</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 13899</sampleid>
      <catalognum>BC ZSM HYM 13899</catalognum>
      <fieldnum>BC ZSM HYM 13899</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Gabow</exactsite>
      <coordinates>
        <lat>52.817</lat>
        <lon>14.076</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>56</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1835669</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_13899+1342732046.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856414</record_id>
    <processid>GBAH3883-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726624</sampleid>
      <catalognum>EU726624</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856421</record_id>
    <processid>GBAH3890-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726617</sampleid>
      <catalognum>EU726617</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856424</record_id>
    <processid>GBAH3893-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726614</sampleid>
      <catalognum>EU726614</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856432</record_id>
    <processid>GBAH3901-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726606</sampleid>
      <catalognum>EU726606</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856446</record_id>
    <processid>GBAH3915-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726592</sampleid>
      <catalognum>EU726592</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856458</record_id>
    <processid>GBAH3927-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726580</sampleid>
      <catalognum>EU726580</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856488</record_id>
    <processid>GBAH3957-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726550</sampleid>
      <catalognum>EU726550</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616531</record_id>
    <processid>GBAH7413-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583335</sampleid>
      <catalognum>KC583335</catalognum>
      <fieldnum>KC583335</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3459487</record_id>
    <processid>GBCHA1065-13</processid>
    <bin_uri>BOLD:ADK9581</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17975</sampleid>
      <catalognum>BC ZSM HYM 17975</catalognum>
      <fieldnum>BC ZSM HYM 17975</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Valle d`Aostal</region>
      <exactsite>St. Pierre</exactsite>
      <coordinates>
        <lat>45.716</lat>
        <lon>7.235</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>700</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2092589</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_17975+1370966312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3174209</record_id>
    <processid>GBMIN17979-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135991</sampleid>
      <catalognum>ADU074</catalognum>
      <fieldnum>KC135991</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417849</record_id>
    <processid>GBMIN78113-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957903</sampleid>
      <fieldnum>KX957903</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4832</record_id>
    <processid>HDBNS089-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c89</sampleid>
      <catalognum>sheff-c89</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>East Torbrook</sector>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>70281</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/sheff-c89+1141055132.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3497952</record_id>
    <processid>HPPPC138-13</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07148-D05</sampleid>
      <catalognum>BIOUG07148-D05</catalognum>
      <fieldnum>GMP#01734</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Tyler Zemlak</collectors>
      <site_code>BIOUG:HALIFAX</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Halifax</region>
      <sector>Point Pleasant Park</sector>
      <coordinates>
        <lat>44.623</lat>
        <lon>-63.569</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>30</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1420911</record_id>
    <processid>IBBP205-10</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>TCDB-T249</sampleid>
      <fieldnum>8020-P07</fieldnum>
      <institution_storing>Trinity College, Dublin</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Karl Magnacca</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>284782</taxID>
          <name>Osmia rufa</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. Magnacca</collectors>
      <country>Ireland</country>
      <region>Dublin</region>
      <exactsite>Trinity Hall, Dartry</exactsite>
      <coordinates>
        <lat>53.312</lat>
        <lon>-6.2598</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3225266</record_id>
    <processid>SMTPB17387-13</processid>
    <bin_uri>BOLD:AAI2020</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG05684-A02</sampleid>
      <catalognum>BIOUG05684-A02</catalognum>
      <fieldnum>GMP#00828</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>BOLD ID Engine</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33101</taxID>
          <name>Osmia taurus</name>
          <reference>Smith, 1873</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <extrainfo>Port Rowan, Port Rowan PS</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Christine Gubesch</collectors>
      <site_code>BIOUG:SCHOOL-MTP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Port Rowan</region>
      <sector>Port Rowan Public School</sector>
      <exactsite>EQP-CLL-563</exactsite>
      <coordinates>
        <lat>42.6246</lat>
        <lon>-80.455</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2035803</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/SMTPC/bioug05684-a02+1368804678.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Malaise 22-Apr-13 to 03-May-13]]&gt;</notes>
  </record>
  <record>
    <record_id>6295929</record_id>
    <processid>SRIRP006-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-2</sampleid>
      <catalognum>SRFS-2</catalognum>
      <fieldnum>SRFS-2</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>4N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9512</lat>
        <lon>-120.109</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>478.9</elev>
    </collection_event>
    <notes>&lt;![CDATA[Sean Min, Noah Eckman]]&gt;</notes>
  </record>
  <record>
    <record_id>6295931</record_id>
    <processid>SRIRP008-15</processid>
    <bin_uri>BOLD:AAE5477</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-6</sampleid>
      <catalognum>SRFS-6</catalognum>
      <fieldnum>SRFS-6</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204037</taxID>
          <name>Osmia claremontensis</name>
          <reference>Michener, 1936</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>2N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.948</lat>
        <lon>-120.111</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>466.1</elev>
    </collection_event>
    <notes>&lt;![CDATA[Paul Anderson, Bailey Harris]]&gt;</notes>
  </record>
  <record>
    <record_id>3199600</record_id>
    <processid>SSWLB1482-13</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04934-F03</sampleid>
      <catalognum>BIOUG04934-F03</catalognum>
      <fieldnum>L#12BIOBUS-0642</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>1 Intercept Trap|Mostly cloudy, Windy, 6C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:3</site_code>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.081</lat>
        <lon>-113.879</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1335</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>970570</record_id>
    <processid>TTHYW300-08</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0267</sampleid>
      <catalognum>08BBHYM-0267</catalognum>
      <fieldnum>L#08WATL-055</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Wetland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting||Wet meadow/roadside</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes NP</region>
      <sector>Cameron Lake</sector>
      <coordinates>
        <lat>49.023</lat>
        <lon>-114.045</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1678</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371105</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Nick Jeffery</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_7870+1231450726.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1051172</record_id>
    <processid>UPOLB783-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>O4Y-20080613-001</sampleid>
      <fieldnum>O4Y June 10 - 13 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Kitchener</sector>
      <exactsite>Conestoga Parkway</exactsite>
      <coordinates>
        <lat>43.454</lat>
        <lon>-80.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051267</record_id>
    <processid>UPOLB878-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>O4Y-20080704-010</sampleid>
      <fieldnum>O4Y July 1 - 4 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Kitchener</sector>
      <exactsite>Conestoga Parkway</exactsite>
      <coordinates>
        <lat>43.454</lat>
        <lon>-80.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051322</record_id>
    <processid>UPOLB933-09</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20080724-001</sampleid>
      <fieldnum>G1Y July 21 - 24 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1049581</record_id>
    <processid>UPOLL142-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20070702-004</sampleid>
      <fieldnum>G1Y June 28 - July 2 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8362207</record_id>
    <processid>ABEE108-17</processid>
    <bin_uri>BOLD:ADF6510</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 155</sampleid>
      <catalognum>NHMW-HYM 155</catalognum>
      <fieldnum>NBH4 Schoder 2016.06.23 Oesterreich WienAUTWienSchoder</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>696826</taxID>
          <name>Osmia bidentata</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schoder Sabine</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2294</lat>
        <lon>16.3899</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4005342</record_id>
    <processid>BCHYM1493-13</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19353</sampleid>
      <catalognum>BC ZSM HYM 19353</catalognum>
      <fieldnum>BC ZSM HYM 19353</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Saxony-Anhalt</province_state>
      <exactsite>Selbitz</exactsite>
      <coordinates>
        <lat>50.317</lat>
        <lon>11.748</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>518</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185447</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19353+1382029678.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>240800</record_id>
    <processid>BCT024-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>06-BCT-024</sampleid>
      <fieldnum>06-BCT-024</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>C. J. Daley</collectors>
      <country>United States</country>
      <province_state>Connecticut</province_state>
      <region>New Haven County</region>
      <exactsite>Milford, Milford Pt.</exactsite>
      <coordinates>
        <lat>41.4</lat>
        <lon>-72.933</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>144043</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/BCT/06-BCT-024+1147195504.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>514802</record_id>
    <processid>BEECA435-06</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>03-NT-0435</sampleid>
      <fieldnum>03-NT-0435</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516947</record_id>
    <processid>BEECA595-06</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0595</sampleid>
      <fieldnum>04-ON-0595</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516951</record_id>
    <processid>BEECA599-06</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0599</sampleid>
      <fieldnum>06-YT-0599</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516964</record_id>
    <processid>BEECA612-06</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0612</sampleid>
      <fieldnum>06-YT-0612</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Packer</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <exactsite>Kluane Nat Park &amp; Res</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>592482</record_id>
    <processid>BEECB159-07</processid>
    <bin_uri>BOLD:AAB6290</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-1030</sampleid>
      <fieldnum>01-OR-1030</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>732137</taxID>
          <name>Osmia sp. aff. bucephala</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596902</record_id>
    <processid>BEECB340-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1058</sampleid>
      <catalognum>BBSL697148</catalognum>
      <fieldnum>04-WA-1058</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Long Swamp</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268547</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596908</record_id>
    <processid>BEECB346-07</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1064</sampleid>
      <catalognum>BBSL697204</catalognum>
      <fieldnum>04-WA-1064</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Roger Lake</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268557</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_subaustralis_Male_Lat+1205191006.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596910</record_id>
    <processid>BEECB348-07</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1066</sampleid>
      <catalognum>BBSL696995</catalognum>
      <fieldnum>04-WA-1066</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>2.4 mi W. Duncan Ridge</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596913</record_id>
    <processid>BEECB351-07</processid>
    <bin_uri>BOLD:ABY6905</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1069</sampleid>
      <catalognum>BBSL697002</catalognum>
      <fieldnum>04-WA-1069</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96579</taxID>
          <name>Osmia odontogaster</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi E Bailey Mountain</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596916</record_id>
    <processid>BEECB354-07</processid>
    <bin_uri>BOLD:AAI2016</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1072</sampleid>
      <catalognum>BBSL697218</catalognum>
      <fieldnum>04-WA-1072</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96580</taxID>
          <name>Osmia tanneri</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.8 mi W Tiffany Lake</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596928</record_id>
    <processid>BEECB366-07</processid>
    <bin_uri>BOLD:AAC5802</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1084</sampleid>
      <catalognum>BBSL697624</catalognum>
      <fieldnum>04-WA-1084</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Tiffany Mountain</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596933</record_id>
    <processid>BEECB371-07</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1089</sampleid>
      <catalognum>BBSL696187</catalognum>
      <fieldnum>04-WA-1089</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson, L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Quarry at Three Buttes</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596936</record_id>
    <processid>BEECB374-07</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1092</sampleid>
      <catalognum>BBSL697606</catalognum>
      <fieldnum>04-WA-1092</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi SSW Corral Butte</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597003</record_id>
    <processid>BEECB441-07</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1160</sampleid>
      <catalognum>BBSL628105</catalognum>
      <fieldnum>05-CA-1160</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96621</taxID>
          <name>Osmia aglaia</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>612375</record_id>
    <processid>BEECB600-07</processid>
    <bin_uri>BOLD:AAE5464</bin_uri>
    <specimen_identifiers>
      <sampleid>07-OR-1317</sampleid>
      <fieldnum>07-OR-1317</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204364</taxID>
          <name>Osmia cyanella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060883</record_id>
    <processid>BEECC1180-09</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2853</sampleid>
      <catalognum>BBSL481971</catalognum>
      <fieldnum>03-UT-2853</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Higbee, Stacy</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Cougar Knoll, 0.61mi SSW</exactsite>
      <coordinates>
        <lat>37.302</lat>
        <lon>-111.144</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060901</record_id>
    <processid>BEECC1198-09</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2871</sampleid>
      <catalognum>BBSL451661</catalognum>
      <fieldnum>02-UT-2871</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger, Olivia</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Escalante Riv. Jct Death Hollow, 1.1 mi W</exactsite>
      <coordinates>
        <lat>37.779</lat>
        <lon>-111.533</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060927</record_id>
    <processid>BEECC1224-09</processid>
    <bin_uri>BOLD:AAK6036</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2897</sampleid>
      <catalognum>BBSL553413</catalognum>
      <fieldnum>04-CA-2897</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204365</taxID>
          <name>Osmia bakeri</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Foresta Rd, 1.9mi SW Eagle Pk</exactsite>
      <coordinates>
        <lat>37.667</lat>
        <lon>-119.81</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844606</record_id>
    <processid>BEECC243-08</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CO-1915</sampleid>
      <catalognum>USGSDRO033818</catalognum>
      <fieldnum>04-CO-1915</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Colorado</province_state>
      <region>Jackson Co.</region>
      <coordinates>
        <lat>40.602</lat>
        <lon>-106.073</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844638</record_id>
    <processid>BEECC275-08</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1947</sampleid>
      <catalognum>USGSDRO075519</catalognum>
      <fieldnum>07-SC-1947</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1057723</record_id>
    <processid>BEECC978-09</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2746</sampleid>
      <catalognum>BBSL551432</catalognum>
      <fieldnum>04-CA-2746</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96621</taxID>
          <name>Osmia aglaia</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, white</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Stephens, Erica</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>El Portal, 1.1mi S Eagle Pk</exactsite>
      <coordinates>
        <lat>37.673</lat>
        <lon>-119.792</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650676</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2746+1263590122.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057734</record_id>
    <processid>BEECC989-09</processid>
    <bin_uri>BOLD:AAE5477</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2757</sampleid>
      <catalognum>BBSL622944</catalognum>
      <fieldnum>05-CA-2757</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>686302</taxID>
          <name>Osmia sedula</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.7 mi SE Ostrander Rock</exactsite>
      <coordinates>
        <lat>37.676</lat>
        <lon>-119.57</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650687</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2757+1263590330.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>5256283</record_id>
    <processid>CNNHC244-14</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17055-G12</sampleid>
      <catalognum>BIOUG17055-G12</catalognum>
      <fieldnum>GMP#03980</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <extrainfo>Nahanni NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Parks Canada</collectors>
      <collection_note>2 Malaise traps</collection_note>
      <site_code>BIOUG:NAHANNI-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <region>Nahanni National Park Reserve</region>
      <sector>Nailicho (Virginia Falls)</sector>
      <coordinates>
        <lat>61.606</lat>
        <lon>-125.758</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>578</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7201065</record_id>
    <processid>CRHIF005-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-E05</sampleid>
      <catalognum>BIOUG30310-E05</catalognum>
      <fieldnum>L#16CRH-0001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.616</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7212718</record_id>
    <processid>CRHIF432-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-G02</sampleid>
      <catalognum>BIOUG30420-G02</catalognum>
      <fieldnum>L#16CRH-0031</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.6165</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7212719</record_id>
    <processid>CRHIF433-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-G03</sampleid>
      <catalognum>BIOUG30420-G03</catalognum>
      <fieldnum>L#16CRH-0031</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.6165</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7200328</record_id>
    <processid>CRHII001-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-G08</sampleid>
      <catalognum>BIOUG30310-G08</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289068</record_id>
    <processid>FBAPB707-09</processid>
    <bin_uri>BOLD:AAE4127</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02182</sampleid>
      <catalognum>BC ZSM HYM 02182</catalognum>
      <fieldnum>BC ZSM HYM 02182</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663045</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02182+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289085</record_id>
    <processid>FBAPB724-09</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02199</sampleid>
      <catalognum>BC ZSM HYM 02199</catalognum>
      <fieldnum>BC ZSM HYM 02199</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Crailsheim, Steinbruch</exactsite>
      <coordinates>
        <lat>49.18</lat>
        <lon>10.03</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>410</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663062</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02199+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289086</record_id>
    <processid>FBAPB725-09</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02200</sampleid>
      <catalognum>BC ZSM HYM 02200</catalognum>
      <fieldnum>BC ZSM HYM 02200</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <sector>South Baden</sector>
      <exactsite>Istein, Rhein</exactsite>
      <coordinates>
        <lat>47.6802</lat>
        <lon>7.57507</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>300</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663063</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02200+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289087</record_id>
    <processid>FBAPB726-09</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02201</sampleid>
      <catalognum>BC ZSM HYM 02201</catalognum>
      <fieldnum>BC ZSM HYM 02201</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663064</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02201+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289103</record_id>
    <processid>FBAPB742-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02217</sampleid>
      <catalognum>BC ZSM HYM 02217</catalognum>
      <fieldnum>BC ZSM HYM 02217</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Tuscany</province_state>
      <exactsite>Siena, Riverbank of Cecina-River</exactsite>
      <coordinates>
        <lat>43.4</lat>
        <lon>11.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>300</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663080</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02217+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709630</record_id>
    <processid>FBAPC364-10</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05969</sampleid>
      <catalognum>BC ZSM HYM 05969</catalognum>
      <fieldnum>BC ZSM HYM 05969</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Aymavilles</exactsite>
      <coordinates>
        <lat>45.703</lat>
        <lon>7.247</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>685</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189830</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05969+1309188382.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022023</record_id>
    <processid>FBAPC730-11</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07570</sampleid>
      <catalognum>BC ZSM HYM 07570</catalognum>
      <fieldnum>BC ZSM HYM 07570</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Col du Tende, Fort de Marguerite</exactsite>
      <coordinates>
        <lat>44.139</lat>
        <lon>7.549</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1830</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171407</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07570+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083179</record_id>
    <processid>FBAPD125-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08770</sampleid>
      <catalognum>BC ZSM HYM 08770</catalognum>
      <fieldnum>BC ZSM HYM 08770</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Badberg, E Vogtsburg near Kaiserstuhl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.67</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>515</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243854</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08770+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140445</record_id>
    <processid>FBAPD234-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09544</sampleid>
      <catalognum>BC ZSM HYM 09544</catalognum>
      <fieldnum>BC ZSM HYM 09544</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Konstanz</exactsite>
      <coordinates>
        <lat>47.661</lat>
        <lon>9.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>430</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1311262</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_09544+1315500456.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[check sex]]&gt;</notes>
  </record>
  <record>
    <record_id>1012628</record_id>
    <processid>FBHAP187-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00092</sampleid>
      <catalognum>BC ZSM HYM 00092</catalognum>
      <fieldnum>BC ZSM HYM 00092</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Munich, Obermenzing</exactsite>
      <coordinates>
        <lat>48.1</lat>
        <lon>11.4</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>496355</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM_00092+1244467972.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133856</record_id>
    <processid>FBHAP304-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00399</sampleid>
      <catalognum>BC ZSM HYM 00399</catalognum>
      <fieldnum>BC ZSM HYM 00399</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A. Dubitzky</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Dachau</exactsite>
      <coordinates>
        <lat>48.25</lat>
        <lon>11.433</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497300</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00399+1244555766.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199238</record_id>
    <processid>GBACU3699-13</processid>
    <bin_uri>BOLD:AAY5201</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17284</sampleid>
      <catalognum>BC ZSM HYM 17284</catalognum>
      <fieldnum>BC ZSM HYM 17284</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590709</taxID>
          <name>Osmia saxicola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>Valpelline, 2 Km N Lake</exactsite>
      <coordinates>
        <lat>45.906</lat>
        <lon>7.489</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937575</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17284+1362509782.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>470889</record_id>
    <processid>GBAH0292-06</processid>
    <bin_uri>BOLD:AAI2020</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250939</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33101</taxID>
          <name>Osmia taurus</name>
          <reference>Smith, 1873</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856418</record_id>
    <processid>GBAH3887-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726620</sampleid>
      <catalognum>EU726620</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856459</record_id>
    <processid>GBAH3928-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726579</sampleid>
      <catalognum>EU726579</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856478</record_id>
    <processid>GBAH3947-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726560</sampleid>
      <catalognum>EU726560</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856485</record_id>
    <processid>GBAH3954-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726553</sampleid>
      <catalognum>EU726553</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3459490</record_id>
    <processid>GBCHA1068-13</processid>
    <bin_uri>BOLD:AAL9209</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17978</sampleid>
      <catalognum>BC ZSM HYM 17978</catalognum>
      <fieldnum>BC ZSM HYM 17978</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590848</taxID>
          <name>Osmia alticola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Valle d`Aostal</region>
      <exactsite>Valpelline, 2km N Lake</exactsite>
      <coordinates>
        <lat>45.906</lat>
        <lon>7.489</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2092592</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_17978+1370966450.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3174211</record_id>
    <processid>GBMIN17981-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135987</sampleid>
      <catalognum>ADU070</catalognum>
      <fieldnum>KC135987</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417856</record_id>
    <processid>GBMIN78120-17</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>KT123237</sampleid>
      <fieldnum>KT123237</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5252567</record_id>
    <processid>GMGMK468-14</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17176-F02</sampleid>
      <catalognum>BIOUG17176-F02</catalognum>
      <fieldnum>GMP#06026</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>558</record_id>
    <processid>HCBNS171-03</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee63</sampleid>
      <catalognum>CSS#158</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Annapolis County</region>
      <sector>Melvern Square</sector>
      <coordinates>
        <lat>44.989</lat>
        <lon>-64.997</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>269088</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Fem_Lat+1205190650.jpg</image_file>
      </media>
      <media>
        <mediaID>269089</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Male_Lat+1205190694.jpg</image_file>
      </media>
      <media>
        <mediaID>399</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS171-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4798</record_id>
    <processid>HDBNS055-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c55</sampleid>
      <catalognum>sheff-c55</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Upper Canard</sector>
      <coordinates>
        <lat>45.1</lat>
        <lon>-64.5</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3700</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffC-55_photo_a.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>708826</record_id>
    <processid>HMBCH026-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-007</sampleid>
      <catalognum>CHU07-BEE-007</catalognum>
      <fieldnum>CHU07-BEE-007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259389</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_021+1197913948.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708867</record_id>
    <processid>HMBCH067-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-048</sampleid>
      <catalognum>CHU07-BEE-048</catalognum>
      <fieldnum>CHU07-BEE-048</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259430</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_062+1197914496.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>3535835</record_id>
    <processid>HPPPD1732-13</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07372-G07</sampleid>
      <catalognum>BIOUG07372-G07</catalognum>
      <fieldnum>GMP#01736</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>museum voucher</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Tyler Zemlak</collectors>
      <site_code>BIOUG:HALIFAX</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Halifax</region>
      <sector>Point Pleasant Park</sector>
      <coordinates>
        <lat>44.623</lat>
        <lon>-63.569</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>30</elev>
    </collection_event>
    <notes>&lt;![CDATA[Date range on label was Jun 22-29 but believe it to be mislabeled]]&gt;</notes>
  </record>
  <record>
    <record_id>8194803</record_id>
    <processid>OPPQM054-17</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG35080-G03</sampleid>
      <catalognum>BIOUG35080-G03</catalognum>
      <fieldnum>GMP#03253</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match (Dec 2017)</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>SEQUELBIN-9272|Short Hills PP|Read:5</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>CBG Collections Staff</collectors>
      <collection_note>Small clearing in forest, beside creek</collection_note>
      <sampling_protocol>Malaise trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Thorold</region>
      <sector>Short Hills Provincial Park</sector>
      <coordinates>
        <lat>43.1129</lat>
        <lon>-79.2738</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>94</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>6017110</record_id>
    <processid>RRMFE3077-15</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG22570-H10</sampleid>
      <catalognum>BIOUG22570-H10</catalognum>
      <fieldnum>GMP#07728</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BOLD ID Engine Manual</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <associated_specimens>duplicate: BIOUG22570-H10_rerun, duplicate: BIOUG22570-H10_NGS</associated_specimens>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Cambridge</region>
      <sector>rare Charitable Research Reserve</sector>
      <exactsite>Site 3 - South Field, forest edge</exactsite>
      <coordinates>
        <lat>43.3705</lat>
        <lon>-80.3641</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>312</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3788375</record_id>
    <processid>SSWLE2274-13</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG08079-G03</sampleid>
      <catalognum>BIOUG08079-G03</catalognum>
      <fieldnum>L#12BIOBUS-1619</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|Overcast, 19C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:5</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.088</lat>
        <lon>-113.883</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1328</elev>
    </collection_event>
    <notes>&lt;![CDATA[Aug 11, 2 pans found tipped over]]&gt;</notes>
  </record>
  <record>
    <record_id>3972452</record_id>
    <processid>SSWLE5578-13</processid>
    <bin_uri>BOLD:AAC5802</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG08719-E11</sampleid>
      <catalognum>BIOUG08719-E11</catalognum>
      <fieldnum>L#12BIOBUS-1617</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>2 Malaise Traps|Overcast, 19C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:5</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.088</lat>
        <lon>-113.883</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1328</elev>
    </collection_event>
    <notes>&lt;![CDATA[Aug 8, moved both malaise traps beyond ridge and out of sight of parkway as per request of park staff]]&gt;</notes>
  </record>
  <record>
    <record_id>970662</record_id>
    <processid>TTHYW392-08</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0359</sampleid>
      <catalognum>08BBHYM-0359</catalognum>
      <fieldnum>L#08BANFF-071</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed Habitat</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting||Marsh, aspen wood</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff NP</region>
      <sector>Near Carrot Creek</sector>
      <coordinates>
        <lat>51.148</lat>
        <lon>-115.42</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1379</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371007</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_8934+1231509900.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1051206</record_id>
    <processid>UPOLB817-09</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>I5Y-20080703-002</sampleid>
      <fieldnum>I5Y June 30 - July 3 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Cambridge</sector>
      <exactsite>Franklin Boulevard</exactsite>
      <coordinates>
        <lat>43.403</lat>
        <lon>-80.308</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051220</record_id>
    <processid>UPOLB831-09</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>I1Y-20080703-002</sampleid>
      <fieldnum>I1Y June 30 - July 3 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Southgate Drive</exactsite>
      <coordinates>
        <lat>43.488</lat>
        <lon>-80.202</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1050354</record_id>
    <processid>UPOLL915-09</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>G1B-20070809-001</sampleid>
      <fieldnum>G1B Aug 6 - 9 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3955533</record_id>
    <processid>ASGCB256-13</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F05</sampleid>
      <fieldnum>BIOUG07489-F05</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172460</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia3_38_Y_Lateral+1383686224.jpg</image_file>
      </media>
      <media>
        <mediaID>2172459</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia3_38_Y_Dorsal+1383686224.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3955536</record_id>
    <processid>ASGCB259-13</processid>
    <bin_uri>BOLD:AAC0884</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F08</sampleid>
      <fieldnum>BIOUG07489-F08</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172466</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_9_Y2_Lateral+1383686224.jpg</image_file>
      </media>
      <media>
        <mediaID>2172465</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_9_Y2_Dorsal+1383686212.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1769807</record_id>
    <processid>BBHYL364-10</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3318</sampleid>
      <catalognum>10BBCHY-3318</catalognum>
      <fieldnum>L#PC2010KT-001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed Habitat</habitat>
      <extrainfo>Kootenay NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>|Hot,sunny,very dry|Mixed coniferous and grasses</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Kootenay NP</region>
      <sector>Redstreak Campground</sector>
      <coordinates>
        <lat>50.627</lat>
        <lon>-116.055</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1018</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992590</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6570+1294951710.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281197</record_id>
    <processid>BEECA167-06</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>04-BC-0167</sampleid>
      <fieldnum>04-BC-0167</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514742</record_id>
    <processid>BEECA375-06</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>05-NT-0375</sampleid>
      <fieldnum>05-NT-0375</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Sheffield and A. Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Hwy 3, near Rae</exactsite>
      <coordinates>
        <lat>62.7209</lat>
        <lon>-116.077</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516923</record_id>
    <processid>BEECA571-06</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>00-NS-0571</sampleid>
      <fieldnum>00-NS-0571</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sue Westby</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554150</record_id>
    <processid>BEECA960-07</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0787</sampleid>
      <fieldnum>01-OR-0787</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554201</record_id>
    <processid>BEECB021-07</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0838</sampleid>
      <fieldnum>04-ON-0838</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A. Bennett, D. Barnes</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <exactsite>N. Gower to Smiths Falls, 1km N of city Rd 6 &amp; Mon</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596932</record_id>
    <processid>BEECB370-07</processid>
    <bin_uri>BOLD:AAE4089</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1088</sampleid>
      <catalognum>BBSL696516</catalognum>
      <fieldnum>04-WA-1088</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96586</taxID>
          <name>Osmia albolateralis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>3 mi SE Hodges Horse Pasture</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596939</record_id>
    <processid>BEECB377-07</processid>
    <bin_uri>BOLD:AAC5817</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1095</sampleid>
      <catalognum>BBSL696567</catalognum>
      <fieldnum>04-WA-1095</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.3 mi NNW Cox Meadow</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597009</record_id>
    <processid>BEECB447-07</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1166</sampleid>
      <catalognum>BBSL614021</catalognum>
      <fieldnum>05-CA-1166</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688027</record_id>
    <processid>BEECB737-07</processid>
    <bin_uri>BOLD:AAC3290</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1360</sampleid>
      <catalognum>PYU-1135</catalognum>
      <fieldnum>07-ID-1360</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Blaine Co.</region>
      <exactsite>10 km E Craters of the Moon Nat. Mon</exactsite>
      <coordinates>
        <lat>43.379</lat>
        <lon>-113.722</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1587</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688032</record_id>
    <processid>BEECB742-07</processid>
    <bin_uri>BOLD:AAD3950</bin_uri>
    <specimen_identifiers>
      <sampleid>05-SK-1365</sampleid>
      <fieldnum>05-SK-1365</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96578</taxID>
          <name>Osmia longula</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Saskatchewan</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268553</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Male_Lat+1205190880.jpg</image_file>
      </media>
      <media>
        <mediaID>268552</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Fem_Lat+1205190844.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[from nest under rock]]&gt;</notes>
  </record>
  <record>
    <record_id>1060879</record_id>
    <processid>BEECC1176-09</processid>
    <bin_uri>BOLD:AAE5368</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2849</sampleid>
      <catalognum>BBSL442586</catalognum>
      <fieldnum>02-UT-2849</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96625</taxID>
          <name>Osmia anasazi</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Wilson, Lindsey</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Paradise Canyon</exactsite>
      <coordinates>
        <lat>37.405</lat>
        <lon>-111.65</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060916</record_id>
    <processid>BEECC1213-09</processid>
    <bin_uri>BOLD:AAD5650</bin_uri>
    <specimen_identifiers>
      <sampleid>01-UT-2886</sampleid>
      <catalognum>BBSL409367</catalognum>
      <fieldnum>01-UT-2886</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204363</taxID>
          <name>Osmia titusi</name>
          <reference>Cockerell, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Left Hand Collet Cyn, 3 mi E</exactsite>
      <coordinates>
        <lat>37.505</lat>
        <lon>-111.4</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844570</record_id>
    <processid>BEECC207-08</processid>
    <bin_uri>BOLD:ABX5180</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1880</sampleid>
      <catalognum>PYU-2569</catalognum>
      <fieldnum>07-WA-1880</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Whitman Co.</region>
      <exactsite>10 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.427</lat>
        <lon>-117.151</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844636</record_id>
    <processid>BEECC273-08</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>05-MD-1945</sampleid>
      <catalognum>USGSDRO084988</catalognum>
      <fieldnum>05-MD-1945</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>B. Hollister</collectors>
      <country>United States</country>
      <province_state>Maryland</province_state>
      <region>Anne Arundel Co.</region>
      <coordinates>
        <lat>38.8</lat>
        <lon>-76.698</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844643</record_id>
    <processid>BEECC280-08</processid>
    <bin_uri>BOLD:AAE5426</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1952</sampleid>
      <catalognum>USGSDRO075529</catalognum>
      <fieldnum>07-SC-1952</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162345</taxID>
          <name>Osmia sandhouseae</name>
          <reference>Mitchell, 1927</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.265</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>973661</record_id>
    <processid>BEECC523-08</processid>
    <bin_uri>BOLD:AAE5426</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-2196</sampleid>
      <catalognum>USGSDRO075449</catalognum>
      <fieldnum>07-SC-2196</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162345</taxID>
          <name>Osmia sandhouseae</name>
          <reference>Mitchell, 1927</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650191</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2196+1263584020.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1011061</record_id>
    <processid>BEECC882-09</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2460</sampleid>
      <catalognum>BBSL457938</catalognum>
      <fieldnum>02-UT-2460</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Higbee, Stacy</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Pool Hollow, nr.</exactsite>
      <coordinates>
        <lat>37.276</lat>
        <lon>-111.116</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650418</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2460+1263585216.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057696</record_id>
    <processid>BEECC951-09</processid>
    <bin_uri>BOLD:AAI1731</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2719</sampleid>
      <catalognum>BBSL616233</catalognum>
      <fieldnum>05-CA-2719</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204026</taxID>
          <name>Osmia caraformis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Stephens, Erica</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Miguel Meadow, 2.9 WNW Dam</exactsite>
      <coordinates>
        <lat>37.961</lat>
        <lon>-119.841</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650649</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2719+1263589900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Collinsia torreyi var.torreyi]]&gt;</notes>
  </record>
  <record>
    <record_id>1057705</record_id>
    <processid>BEECC960-09</processid>
    <bin_uri>BOLD:AAF2168</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2728</sampleid>
      <catalognum>BBSL548067</catalognum>
      <fieldnum>04-CA-2728</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204030</taxID>
          <name>Osmia cara</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Foresta Rd, 0.6mi SbyW Eagle Pk</exactsite>
      <coordinates>
        <lat>37.683</lat>
        <lon>-119.791</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650658</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2728+1263589908.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Clarkia unguiculata]]&gt;</notes>
  </record>
  <record>
    <record_id>1057708</record_id>
    <processid>BEECC963-09</processid>
    <bin_uri>BOLD:AAF2185</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2731</sampleid>
      <catalognum>BBSL545529</catalognum>
      <fieldnum>04-CA-2731</fieldnum>
      <institution_storing>United States Department of Agriculture, ARS, Systematic Entomology Laboratory</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204031</taxID>
          <name>Osmia gabrielis</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, H.W.</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Tuolumne Co.</region>
      <exactsite>Miguel Mdw. 2.9 WNW Dam</exactsite>
      <coordinates>
        <lat>35.854</lat>
        <lon>-115.672</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1540</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650661</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2731+1263589928.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:check lat/long&#13;
11S E250700 N4205527::endTaxonomy:Prosopis glandulosa var.torreyana]]&gt;</notes>
  </record>
  <record>
    <record_id>56150</record_id>
    <processid>BUSA371-05</processid>
    <bin_uri>BOLD:AAC8469</bin_uri>
    <specimen_identifiers>
      <sampleid>18865</sampleid>
      <catalognum>18865</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162343</taxID>
          <name>Osmia collinsiae</name>
          <reference>Robertson, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Robert Jackowski</collectors>
      <country>United States</country>
      <province_state>Maryland</province_state>
      <region>Prince George's</region>
      <exactsite>Patuxent Wildlife Research Center</exactsite>
      <coordinates>
        <lat>39.6548</lat>
        <lon>-76.7803</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>31374</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BUSA/IMG_3060.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>7200330</record_id>
    <processid>CRHII003-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-G10</sampleid>
      <catalognum>BIOUG30310-G10</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7200335</record_id>
    <processid>CRHII008-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-H03</sampleid>
      <catalognum>BIOUG30310-H03</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7200337</record_id>
    <processid>CRHII010-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-H05</sampleid>
      <catalognum>BIOUG30310-H05</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289048</record_id>
    <processid>FBAPB687-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02162</sampleid>
      <catalognum>BC ZSM HYM 02162</catalognum>
      <fieldnum>BC ZSM HYM 02162</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Switzerland</country>
      <province_state>Ticino</province_state>
      <region>Vallemaggia</region>
      <exactsite>Robiei</exactsite>
      <coordinates>
        <lat>46.4</lat>
        <lon>8.6</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2200</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663025</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02162+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289062</record_id>
    <processid>FBAPB701-09</processid>
    <bin_uri>BOLD:AAI1853</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02176</sampleid>
      <catalognum>BC ZSM HYM 02176</catalognum>
      <fieldnum>BC ZSM HYM 02176</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265271</taxID>
          <name>Osmia melanogaster</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Carpentras, Les Baux</exactsite>
      <coordinates>
        <lat>44.128</lat>
        <lon>5.041</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>120</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663039</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02176+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709637</record_id>
    <processid>FBAPC371-10</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05976</sampleid>
      <catalognum>BC ZSM HYM 05976</catalognum>
      <fieldnum>BC ZSM HYM 05976</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Spain</country>
      <province_state>Catalonia</province_state>
      <region>Cataluna</region>
      <exactsite>Pauls</exactsite>
      <coordinates>
        <lat>40.914</lat>
        <lon>0.464</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>162</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189837</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05976+1309188374.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709642</record_id>
    <processid>FBAPC376-10</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05981</sampleid>
      <catalognum>BC ZSM HYM 05981</catalognum>
      <fieldnum>BC ZSM HYM 05981</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Germany</country>
      <province_state>Mecklenburg-Vorpommern</province_state>
      <exactsite>Waren, Speck</exactsite>
      <coordinates>
        <lat>53.438</lat>
        <lon>12.839</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>64</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189842</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05981+1309188370.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022024</record_id>
    <processid>FBAPC731-11</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07571</sampleid>
      <catalognum>BC ZSM HYM 07571</catalognum>
      <fieldnum>BC ZSM HYM 07571</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Col de la Cayolle, S</exactsite>
      <coordinates>
        <lat>44.253</lat>
        <lon>6.742</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171408</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07571+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083359</record_id>
    <processid>FBAPC875-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08380</sampleid>
      <catalognum>BC ZSM HYM 08380</catalognum>
      <fieldnum>BC ZSM HYM 08380</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Neuleinigen, Gruenstaedter Berg, 1 km N</exactsite>
      <coordinates>
        <lat>49.5441</lat>
        <lon>8.1373</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>275</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243553</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08380+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083451</record_id>
    <processid>FBAPC967-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08472</sampleid>
      <catalognum>BC ZSM HYM 08472</catalognum>
      <fieldnum>BC ZSM HYM 08472</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Weimar, Ettersburg</exactsite>
      <coordinates>
        <lat>51.033</lat>
        <lon>11.273</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>331</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243645</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08472+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083452</record_id>
    <processid>FBAPC968-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08473</sampleid>
      <catalognum>BC ZSM HYM 08473</catalognum>
      <fieldnum>BC ZSM HYM 08473</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Weimar, Ettersburg</exactsite>
      <coordinates>
        <lat>51.033</lat>
        <lon>11.273</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>331</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243646</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08473+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140588</record_id>
    <processid>FBAPD377-11</processid>
    <bin_uri>BOLD:AAZ7638</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07787</sampleid>
      <catalognum>BC ZSM HYM 07787</catalognum>
      <fieldnum>BC ZSM HYM 07787</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 23 km S Cadiz, Chiclana</exactsite>
      <coordinates>
        <lat>36.5</lat>
        <lon>-6.12</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310930</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07787+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140590</record_id>
    <processid>FBAPD379-11</processid>
    <bin_uri>BOLD:ACF3653</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07789</sampleid>
      <catalognum>BC ZSM HYM 07789</catalognum>
      <fieldnum>BC ZSM HYM 07789</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <region>Alpes Maritimes</region>
      <exactsite>Alpes Maritimes, Col de Cayolle, South</exactsite>
      <coordinates>
        <lat>44.253</lat>
        <lon>6.742</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310932</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07789+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1012574</record_id>
    <processid>FBHAP133-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00038</sampleid>
      <catalognum>BC ZSM HYM 00038</catalognum>
      <fieldnum>BC ZSM HYM 00038</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <region>Luckenwalde</region>
      <exactsite>Jaenickendorf</exactsite>
      <coordinates>
        <lat>52</lat>
        <lon>13.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>496301</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM_00038+1244467562.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133848</record_id>
    <processid>FBHAP296-09</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00391</sampleid>
      <catalognum>BC ZSM HYM 00391</catalognum>
      <fieldnum>BC ZSM HYM 00391</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Kienberg</exactsite>
      <coordinates>
        <lat>48.03</lat>
        <lon>12.45</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>540</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497292</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00391+1244555698.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133891</record_id>
    <processid>FBHAP339-09</processid>
    <bin_uri>BOLD:AAI1999</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00434</sampleid>
      <catalognum>BC ZSM HYM 00434</catalognum>
      <fieldnum>BC ZSM HYM 00434</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214092</taxID>
          <name>Osmia uncinata</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Allacher Forst</exactsite>
      <coordinates>
        <lat>48.2</lat>
        <lon>11.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497335</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00434+1243550820.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875217</record_id>
    <processid>GBACU1206-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14506</sampleid>
      <catalognum>BC ZSM HYM 14506</catalognum>
      <fieldnum>BC ZSM HYM 14506</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>246</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825267</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14506+1345839270.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875221</record_id>
    <processid>GBACU1210-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14510</sampleid>
      <catalognum>BC ZSM HYM 14510</catalognum>
      <fieldnum>BC ZSM HYM 14510</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Berlin</province_state>
      <exactsite>Koepenick, Wuhlheide</exactsite>
      <coordinates>
        <lat>52.46</lat>
        <lon>13.53</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>37</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825271</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14510+1345839386.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856412</record_id>
    <processid>GBAH3881-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726626</sampleid>
      <catalognum>EU726626</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856431</record_id>
    <processid>GBAH3900-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726607</sampleid>
      <catalognum>EU726607</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856436</record_id>
    <processid>GBAH3905-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726602</sampleid>
      <catalognum>EU726602</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856443</record_id>
    <processid>GBAH3912-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726595</sampleid>
      <catalognum>EU726595</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856460</record_id>
    <processid>GBAH3929-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726578</sampleid>
      <catalognum>EU726578</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856464</record_id>
    <processid>GBAH3933-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726574</sampleid>
      <catalognum>EU726574</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616540</record_id>
    <processid>GBAH7422-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583326</sampleid>
      <catalognum>KC583326</catalognum>
      <fieldnum>KC583326</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417851</record_id>
    <processid>GBMIN78115-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957861</sampleid>
      <fieldnum>KX957861</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5027700</record_id>
    <processid>GMGMA1014-14</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG16215-E09</sampleid>
      <catalognum>BIOUG16215-E09</catalognum>
      <fieldnum>GMP#06015</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>5220505</record_id>
    <processid>GMGMH1500-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-E05</sampleid>
      <catalognum>BIOUG17018-E05</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>567</record_id>
    <processid>HCBNS180-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee88</sampleid>
      <catalognum>CSS#165</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Digby County</region>
      <sector>Church Point</sector>
      <coordinates>
        <lat>44.368</lat>
        <lon>-66.094</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>405</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS180-03b.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4825</record_id>
    <processid>HDBNS082-03</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c82</sampleid>
      <catalognum>CSS#159</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>West Black Rock</sector>
      <coordinates>
        <lat>45.13</lat>
        <lon>-64.738</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4841</record_id>
    <processid>HDBNS098-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c98</sampleid>
      <catalognum>sheff-c98</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Kentville</sector>
      <coordinates>
        <lat>45.07</lat>
        <lon>-64.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>708860</record_id>
    <processid>HMBCH060-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-041</sampleid>
      <catalognum>CHU07-BEE-041</catalognum>
      <fieldnum>CHU07-BEE-041</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259423</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_055+1197914488.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>3554814</record_id>
    <processid>HPPPH1011-13</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07534-H05</sampleid>
      <catalognum>BIOUG07534-H05</catalognum>
      <fieldnum>GMP#01735</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Tyler Zemlak</collectors>
      <site_code>BIOUG:HALIFAX</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Halifax</region>
      <sector>Point Pleasant Park</sector>
      <coordinates>
        <lat>44.623</lat>
        <lon>-63.569</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>30</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1423000</record_id>
    <processid>JSYKA128-10</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-034</sampleid>
      <fieldnum>L#JSYKB-034</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia2</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot14</exactsite>
      <coordinates>
        <lat>69.1686</lat>
        <lon>-140.205</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>289</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754254</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7923+1272292920.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423038</record_id>
    <processid>JSYKA166-10</processid>
    <bin_uri>BOLD:AAL9211</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-072</sampleid>
      <fieldnum>L#JSYKB-072</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>365204</taxID>
          <name>Osmia aquilonaria</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp2*Unique</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot02</exactsite>
      <coordinates>
        <lat>69.1658</lat>
        <lon>-140.156</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>278</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754292</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7963+1272293376.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Blue pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1845571</record_id>
    <processid>PHMTX155-11</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG00801-D10</sampleid>
      <catalognum>BIOUG00801-D10</catalognum>
      <fieldnum>L#PHPUS-005</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>BOLD ID Engine</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
      <habitat>Temperate mixed forest</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>Paul Hebert</collectors>
      <site_code>BIOUG:PDH-home</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Wellington County</region>
      <sector>Puslinch Township</sector>
      <exactsite>Concession 11/Hume Rd</exactsite>
      <coordinates>
        <lat>43.537</lat>
        <lon>-80.134</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>320</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1109265</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Chad Whitmell</photographer>
        <image_file>http://www.boldsystems.org/pics/PHMTX/bioug00801-047+1302796554.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[April 25-May2]]&gt;</notes>
  </record>
  <record>
    <record_id>7238472</record_id>
    <processid>RRNGS205-16</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30544-B03</sampleid>
      <catalognum>BIOUG30544-B03</catalognum>
      <fieldnum>GMP#07686</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>DNA/Tissue Vouchered Only</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections</collectors>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Cambridge</region>
      <sector>rare Charitable Research Reserve</sector>
      <exactsite>Site 1 - Woodland Trail, alvar</exactsite>
      <coordinates>
        <lat>43.3792</lat>
        <lon>-80.346</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>288</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3220883</record_id>
    <processid>SMTPB13004-13</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG05637-G12</sampleid>
      <catalognum>BIOUG05637-G12</catalognum>
      <fieldnum>GMP#00868</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>BOLD ID Engine</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <extrainfo>London, Byron Somerset PS</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Suzanne Glasgow</collectors>
      <site_code>BIOUG:SCHOOL-MTP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>London</region>
      <sector>Byron Somerset Public School</sector>
      <exactsite>EQP-CLL-583</exactsite>
      <coordinates>
        <lat>42.947</lat>
        <lon>-81.326</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[Malaise 22-Apr-13 to 03-May-13]]&gt;</notes>
  </record>
  <record>
    <record_id>5917913</record_id>
    <processid>SMTPL2697-15</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG21928-E11</sampleid>
      <catalognum>BIOUG21928-E11</catalognum>
      <fieldnum>GMP#07446</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <extrainfo>Waterloo, Camp Heidelberg Nature Centre</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Allan Woodhouse</collectors>
      <site_code>BIOUG:SCHOOL-MTP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Waterloo</region>
      <sector>Camp Heidelberg Nature Centre</sector>
      <exactsite>EQP-CLL-812</exactsite>
      <coordinates>
        <lat>43.495</lat>
        <lon>-80.624</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>2936929</record_id>
    <processid>SSBAC3521-12</processid>
    <bin_uri>BOLD:AAK6054</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG03981-F04</sampleid>
      <catalognum>BIOUG03981-F04</catalognum>
      <fieldnum>L#12BIOBUS-0459</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Wetland</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|mostly cloudy and 16C on end date</collection_note>
      <site_code>BIOUG:BANFF-NP:2</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff National Park</region>
      <sector>Corral Creek old road</sector>
      <coordinates>
        <lat>51.407</lat>
        <lon>-116.154</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1539</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2071705</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSBAC/BIOUG03981-F04+1372871180.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3032725</record_id>
    <processid>ACUFI258-12</processid>
    <bin_uri>BOLD:ACG6917</bin_uri>
    <specimen_identifiers>
      <sampleid>FACU-000163</sampleid>
      <catalognum>HE.143</catalognum>
      <institution_storing>Finnish Museum of Natural History</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Niklas E Johansson</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>696806</taxID>
          <name>Osmia disjuncta</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Sweden</country>
      <region>Vaesterbotten</region>
      <sector>Vindeln</sector>
      <coordinates>
        <lat>62.995</lat>
        <lon>18.778</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1873795</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Marko Mutanen</copyright_holder>
          <copyright_year>2012</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial</copyright_license>
          <copyright_institution>University of Oulu</copyright_institution>
        </copyright>
        <photographer>Piia Partanen</photographer>
        <image_file>http://www.boldsystems.org/pics/ACUFI/FACU-000163+1353444206.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Museum voucher ID: http://id.luomus.fi/HE.143: O. inermis -species group. Collection period Jun-04 - Aug-01-2011]]&gt;</notes>
  </record>
  <record>
    <record_id>281105</record_id>
    <processid>BEECA075-06</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0075</sampleid>
      <fieldnum>04-MB-0075</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281161</record_id>
    <processid>BEECA131-06</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>05-BC-0131</sampleid>
      <fieldnum>05-BC-0131</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268412</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>514871</record_id>
    <processid>BEECA504-06</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>06-ON-0504</sampleid>
      <fieldnum>06-ON-0504</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596906</record_id>
    <processid>BEECB344-07</processid>
    <bin_uri>BOLD:AAE5493</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1062</sampleid>
      <catalognum>BBSL696277</catalognum>
      <fieldnum>04-WA-1062</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90381</taxID>
          <name>Osmia montana</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>96576</taxID>
          <name>Osmia montana montana</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi SSW Muckamuck Hill</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596921</record_id>
    <processid>BEECB359-07</processid>
    <bin_uri>BOLD:ABY7557</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1077</sampleid>
      <catalognum>BBSL695700</catalognum>
      <fieldnum>04-WA-1077</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265228</taxID>
          <name>Osmia pentstemonis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Roger Lake</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596938</record_id>
    <processid>BEECB376-07</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1094</sampleid>
      <catalognum>BBSL697585</catalognum>
      <fieldnum>04-WA-1094</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi SSW Corral Butte</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596996</record_id>
    <processid>BEECB434-07</processid>
    <bin_uri>BOLD:AAD0302</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1153</sampleid>
      <catalognum>ZION20386</catalognum>
      <fieldnum>06-UT-1153</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96618</taxID>
          <name>Osmia calla</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268542</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_calla_Fem_Lat+1205190536.jpg</image_file>
      </media>
      <media>
        <mediaID>268543</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_calla_Male_Lat+1205190598.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>597010</record_id>
    <processid>BEECB448-07</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1167</sampleid>
      <catalognum>BBSL625961</catalognum>
      <fieldnum>05-CA-1167</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597012</record_id>
    <processid>BEECB450-07</processid>
    <bin_uri>BOLD:ABY6391</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1169</sampleid>
      <catalognum>BBSL621227</catalognum>
      <fieldnum>05-CA-1169</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>95794</taxID>
          <name>Osmia exigua</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597055</record_id>
    <processid>BEECB493-07</processid>
    <bin_uri>BOLD:AAB4645</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1211</sampleid>
      <catalognum>PYU-1032</catalognum>
      <fieldnum>07-ID-1211</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Butte Co.</region>
      <exactsite>Big Lost River</exactsite>
      <coordinates>
        <lat>43.5492</lat>
        <lon>-113.008</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1530</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597057</record_id>
    <processid>BEECB495-07</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1213</sampleid>
      <fieldnum>07-ID-1213</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96619</taxID>
          <name>Osmia bruneri</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>612307</record_id>
    <processid>BEECB532-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1249</sampleid>
      <fieldnum>07-BC-1249</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060935</record_id>
    <processid>BEECC1232-09</processid>
    <bin_uri>BOLD:AAE5493</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2905</sampleid>
      <catalognum>BBSL556421</catalognum>
      <fieldnum>04-CA-2905</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90381</taxID>
          <name>Osmia montana</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>204367</taxID>
          <name>Osmia montana quadriceps</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Yosem Vly, .9mi W Sentinel Pk</exactsite>
      <coordinates>
        <lat>37.73</lat>
        <lon>-119.61</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844560</record_id>
    <processid>BEECC197-08</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1870</sampleid>
      <catalognum>PYU-2571</catalognum>
      <fieldnum>07-WA-1870</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Whitman Co.</region>
      <exactsite>10 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.427</lat>
        <lon>-117.151</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844569</record_id>
    <processid>BEECC206-08</processid>
    <bin_uri>BOLD:ABX5180</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1879</sampleid>
      <catalognum>PYU-2566</catalognum>
      <fieldnum>07-WA-1879</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Whitman Co.</region>
      <exactsite>10 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.427</lat>
        <lon>-117.151</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1011056</record_id>
    <processid>BEECC877-09</processid>
    <bin_uri>BOLD:AAC8497</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2455</sampleid>
      <catalognum>BBSL444193</catalognum>
      <fieldnum>02-UT-2455</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198196</taxID>
          <name>Osmia unca</name>
          <reference>Michener, 1937</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger, Olivia</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Cougar Knoll, 0.97 mi SSE</exactsite>
      <coordinates>
        <lat>37.3</lat>
        <lon>-111.128</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650413</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2455+1263585132.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057721</record_id>
    <processid>BEECC976-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2744</sampleid>
      <catalognum>BBSL627560</catalognum>
      <fieldnum>05-CA-2744</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204035</taxID>
          <name>Osmia giffardi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>2 mi W Andrews Peak</exactsite>
      <coordinates>
        <lat>38.041</lat>
        <lon>-119.717</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650674</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2744+1263589984.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057731</record_id>
    <processid>BEECC986-09</processid>
    <bin_uri>BOLD:AAE5467</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2754</sampleid>
      <catalognum>BBSL556993</catalognum>
      <fieldnum>04-CA-2754</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96616</taxID>
          <name>Osmia gaudiosa</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.8 mi WSW Hetch Hetchy Dome</exactsite>
      <coordinates>
        <lat>37.958</lat>
        <lon>-119.785</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650684</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2754+1263590264.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057732</record_id>
    <processid>BEECC987-09</processid>
    <bin_uri>BOLD:AAE5467</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2755</sampleid>
      <catalognum>BBSL552813</catalognum>
      <fieldnum>04-CA-2755</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96616</taxID>
          <name>Osmia gaudiosa</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, white</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>0.6 mi W Miguel Mdw Rngr Sta</exactsite>
      <coordinates>
        <lat>37.961</lat>
        <lon>-119.852</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650685</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2755+1263590272.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>7092300</record_id>
    <processid>BEEEE330-16</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#1730830</sampleid>
      <catalognum>BMNH(E)#1730830</catalognum>
      <fieldnum>BMNH(E)#1730830</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ivan Wright</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>Adult</lifestage>
      <tissue_type>Whole</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Jodey M. Peyton</collectors>
      <collection_note>LatLong based on UK grid reference: SU5588</collection_note>
      <sampling_protocol>Pan trap</sampling_protocol>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Wallingford</region>
      <coordinates>
        <lat>51.588</lat>
        <lon>-1.208</lon>
        <coord_source></coord_source>
        <coord_accuracy>1000</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Wallingford: SU5692: 17.viii.2015: Jodey M. Peyton: Claire Carvell:  Osmia spinulosa: det. Ivan Wright  2015: BMNH(E)#1730830]]&gt;</notes>
  </record>
  <record>
    <record_id>7200338</record_id>
    <processid>CRHII011-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-H06</sampleid>
      <catalognum>BIOUG30310-H06</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289034</record_id>
    <processid>FBAPB673-09</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02148</sampleid>
      <catalognum>BC ZSM HYM 02148</catalognum>
      <fieldnum>BC ZSM HYM 02148</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Niefern</exactsite>
      <coordinates>
        <lat>48.91</lat>
        <lon>8.7</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>280</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663011</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02148+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289066</record_id>
    <processid>FBAPB705-09</processid>
    <bin_uri>BOLD:AAE4127</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02180</sampleid>
      <catalognum>BC ZSM HYM 02180</catalognum>
      <fieldnum>BC ZSM HYM 02180</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Berlin, Wriezen</exactsite>
      <coordinates>
        <lat>52.7</lat>
        <lon>14.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>20</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663043</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02180+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289077</record_id>
    <processid>FBAPB716-09</processid>
    <bin_uri>BOLD:AAI1846</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02191</sampleid>
      <catalognum>BC ZSM HYM 02191</catalognum>
      <fieldnum>BC ZSM HYM 02191</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Muehlacker, Lomersheim</exactsite>
      <coordinates>
        <lat>48.93</lat>
        <lon>8.86</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663054</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02191+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289081</record_id>
    <processid>FBAPB720-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02195</sampleid>
      <catalognum>BC ZSM HYM 02195</catalognum>
      <fieldnum>BC ZSM HYM 02195</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Austria</country>
      <province_state>Tirol</province_state>
      <exactsite>Reutte, Unter-Pinswang</exactsite>
      <coordinates>
        <lat>47.54</lat>
        <lon>10.66</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>880</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663058</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02195+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289092</record_id>
    <processid>FBAPB731-09</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02206</sampleid>
      <catalognum>BC ZSM HYM 02206</catalognum>
      <fieldnum>BC ZSM HYM 02206</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Lombardy</province_state>
      <exactsite>Brescia, Pavone</exactsite>
      <coordinates>
        <lat>45.65</lat>
        <lon>10.43</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>280</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663069</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02206+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2021834</record_id>
    <processid>FBAPC541-11</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07001</sampleid>
      <catalognum>BC ZSM HYM 07001</catalognum>
      <fieldnum>BC ZSM HYM 07001</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Piedmont</province_state>
      <exactsite>S Cuneo, Lago Rovine</exactsite>
      <coordinates>
        <lat>44.17</lat>
        <lon>7.34</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1600</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171218</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07001+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2021837</record_id>
    <processid>FBAPC544-11</processid>
    <bin_uri>BOLD:AAY5201</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07004</sampleid>
      <catalognum>BC ZSM HYM 07004</catalognum>
      <fieldnum>BC ZSM HYM 07004</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590709</taxID>
          <name>Osmia saxicola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Col de la Cayolle, S</exactsite>
      <coordinates>
        <lat>44.253</lat>
        <lon>6.742</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171221</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07004+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083342</record_id>
    <processid>FBAPC858-11</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08363</sampleid>
      <catalognum>BC ZSM HYM 08363</catalognum>
      <fieldnum>BC ZSM HYM 08363</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Monsheim</exactsite>
      <coordinates>
        <lat>49.6366</lat>
        <lon>8.2036</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>140</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243536</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08363+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083356</record_id>
    <processid>FBAPC872-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08377</sampleid>
      <catalognum>BC ZSM HYM 08377</catalognum>
      <fieldnum>BC ZSM HYM 08377</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Nackenheim, Eichelsbachtal, 1 km SW</exactsite>
      <coordinates>
        <lat>49.9167</lat>
        <lon>8.3429</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>89</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243550</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08377+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083453</record_id>
    <processid>FBAPC969-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08474</sampleid>
      <catalognum>BC ZSM HYM 08474</catalognum>
      <fieldnum>BC ZSM HYM 08474</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Kleingoelitz, Goelitzwaende</exactsite>
      <coordinates>
        <lat>50.699</lat>
        <lon>11.248</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243647</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08474+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140449</record_id>
    <processid>FBAPD238-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09548</sampleid>
      <catalognum>BC ZSM HYM 09548</catalognum>
      <fieldnum>BC ZSM HYM 09548</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Konstanz</exactsite>
      <coordinates>
        <lat>47.661</lat>
        <lon>9.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>430</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1311266</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_09548+1315500456.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[check sex]]&gt;</notes>
  </record>
  <record>
    <record_id>1012627</record_id>
    <processid>FBHAP186-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00091</sampleid>
      <catalognum>BC ZSM HYM 00091</catalognum>
      <fieldnum>BC ZSM HYM 00091</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Munich, Allach</exactsite>
      <coordinates>
        <lat>48.1</lat>
        <lon>11.4</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>496354</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM_00091+1243551180.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[BFB ZSM test]]&gt;</notes>
  </record>
  <record>
    <record_id>1134124</record_id>
    <processid>FBHAP572-09</processid>
    <bin_uri>BOLD:AAI1846</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00857</sampleid>
      <catalognum>BC ZSM HYM 00857</catalognum>
      <fieldnum>BC ZSM HYM 00857</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S. Blank</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Biberbach</exactsite>
      <coordinates>
        <lat>48.524</lat>
        <lon>10.811</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>440</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>498523</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00857+1244569874.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875215</record_id>
    <processid>GBACU1204-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14504</sampleid>
      <catalognum>BC ZSM HYM 14504</catalognum>
      <fieldnum>BC ZSM HYM 14504</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Veithoechheim/Ravensburg</exactsite>
      <coordinates>
        <lat>49.85</lat>
        <lon>9.86</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>167</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825265</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14504+1345839242.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875277</record_id>
    <processid>GBACU1266-12</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14566</sampleid>
      <catalognum>BC ZSM HYM 14566</catalognum>
      <fieldnum>BC ZSM HYM 14566</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Kyffhaeuser, NW Bad Frankenhausen</exactsite>
      <coordinates>
        <lat>51.36</lat>
        <lon>11.07</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>472</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825646</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14566+1346258596.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912193</record_id>
    <processid>GBACU1839-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14189</sampleid>
      <catalognum>BC ZSM HYM 14189</catalognum>
      <fieldnum>BC ZSM HYM 14189</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Mallnow</exactsite>
      <coordinates>
        <lat>52.56</lat>
        <lon>14.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>56</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834185</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14189+1449672338.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>470894</record_id>
    <processid>GBAH0297-06</processid>
    <bin_uri>BOLD:AAW9631</bin_uri>
    <specimen_identifiers>
      <sampleid>AF250944</sampleid>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33106</taxID>
          <name>Osmia jacoti</name>
          <reference>Cockerell, 1929</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856427</record_id>
    <processid>GBAH3896-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726611</sampleid>
      <catalognum>EU726611</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856437</record_id>
    <processid>GBAH3906-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726601</sampleid>
      <catalognum>EU726601</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856457</record_id>
    <processid>GBAH3926-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726581</sampleid>
      <catalognum>EU726581</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856461</record_id>
    <processid>GBAH3930-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726577</sampleid>
      <catalognum>EU726577</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856465</record_id>
    <processid>GBAH3934-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726573</sampleid>
      <catalognum>EU726573</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856470</record_id>
    <processid>GBAH3939-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726568</sampleid>
      <catalognum>EU726568</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856481</record_id>
    <processid>GBAH3950-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726557</sampleid>
      <catalognum>EU726557</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616533</record_id>
    <processid>GBAH7415-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583333</sampleid>
      <catalognum>KC583333</catalognum>
      <fieldnum>KC583333</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>96598</taxID>
          <name>Osmia ribifloris ribifloris</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3459489</record_id>
    <processid>GBCHA1067-13</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17977</sampleid>
      <catalognum>BC ZSM HYM 17977</catalognum>
      <fieldnum>BC ZSM HYM 17977</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Valle d`Aostal</region>
      <exactsite>Valpelline, Bionaz, 3km NW</exactsite>
      <coordinates>
        <lat>45.882</lat>
        <lon>7.446</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1650</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2092591</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_17977+1370966424.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3174336</record_id>
    <processid>GBMIN18106-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135984</sampleid>
      <catalognum>ADU057</catalognum>
      <fieldnum>KC135984</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417838</record_id>
    <processid>GBMIN78102-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX374770</sampleid>
      <fieldnum>KX374770</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417843</record_id>
    <processid>GBMIN78107-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957905</sampleid>
      <fieldnum>KX957905</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5220511</record_id>
    <processid>GMGMH1506-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-E11</sampleid>
      <catalognum>BIOUG17018-E11</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>557</record_id>
    <processid>HCBNS170-03</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee62</sampleid>
      <catalognum>CSS#157</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Sue Rigby</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Lunenburg County</region>
      <sector>Northwest Cove</sector>
      <coordinates>
        <lat>44.319</lat>
        <lon>-64.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>269086</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Fem_Lat+1205190650.jpg</image_file>
      </media>
      <media>
        <mediaID>269087</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Male_Lat+1205190694.jpg</image_file>
      </media>
      <media>
        <mediaID>398</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS170-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>562</record_id>
    <processid>HCBNS175-03</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee80</sampleid>
      <catalognum>CSS#160</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Pereau</sector>
      <coordinates>
        <lat>45.19</lat>
        <lon>-64.415</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>400</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS175-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4826</record_id>
    <processid>HDBNS083-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c83</sampleid>
      <catalognum>sheff-c83</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Annapolis County</region>
      <sector>Middleton</sector>
      <coordinates>
        <lat>44.9665</lat>
        <lon>-65.0576</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3715</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffC-83_photo_a.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6514</record_id>
    <processid>HDBNS215-04</processid>
    <bin_uri>BOLD:AAD5706</bin_uri>
    <specimen_identifiers>
      <sampleid>sheffT-63</sampleid>
      <catalognum>CSS#94</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>127290</taxID>
          <name>Osmia virga</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Sue Rigby</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Lunenburg County</region>
      <sector>Northwest Cove</sector>
      <coordinates>
        <lat>44.319</lat>
        <lon>-64.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>5259</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/EOS20D_2_SHEFFT-63.JPG</image_file>
      </media>
      <media>
        <mediaID>269091</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_virga_Fem_Lat+1205191040.jpg</image_file>
      </media>
      <media>
        <mediaID>5260</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/SHEFFT-63.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>708866</record_id>
    <processid>HMBCH066-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-047</sampleid>
      <catalognum>CHU07-BEE-047</catalognum>
      <fieldnum>CHU07-BEE-047</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259429</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_061+1197914494.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>1420910</record_id>
    <processid>IBBP204-10</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>TCDB-T506</sampleid>
      <fieldnum>U-04-132</fieldnum>
      <institution_storing>Trinity College, Dublin</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Karl Magnacca</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>U. Fitzpatrick</collectors>
      <country>Ireland</country>
      <region>Wexford</region>
      <exactsite>Ballyteige</exactsite>
      <coordinates>
        <lat>52.2</lat>
        <lon>-6.63</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1423001</record_id>
    <processid>JSYKA129-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-035</sampleid>
      <fieldnum>L#JSYKB-035</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot12</exactsite>
      <coordinates>
        <lat>69.2846</lat>
        <lon>-140.328</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>465</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754255</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7925+1272292928.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[White pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423015</record_id>
    <processid>JSYKA143-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-049</sampleid>
      <fieldnum>L#JSYKB-049</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot08</exactsite>
      <coordinates>
        <lat>69.1639</lat>
        <lon>-140.163</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>362</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754269</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7939+1272293056.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Blue pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1132312</record_id>
    <processid>NOBEE057-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00057</sampleid>
      <catalognum>NHMO_APO00057</catalognum>
      <fieldnum>NHMO_APO00057</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Sorlibraten, Ove</collectors>
      <country>Norway</country>
      <province_state>Finnmark</province_state>
      <region>Porsanger</region>
      <exactsite>Rodnesaksla</exactsite>
      <coordinates>
        <lat>70.077</lat>
        <lon>33.2123</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107433</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00057+1375713812.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2495802</record_id>
    <processid>SDBEE280-12</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KJH.1515</sampleid>
      <fieldnum>KJH.1515</fieldnum>
      <institution_storing>University of California, San Diego</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Keng-Lou J. Hung</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>463306</taxID>
          <name>Osmia cf. granulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. James Hung</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>San Diego</region>
      <sector>San Diego</sector>
      <exactsite>Mission Trails Regional Park</exactsite>
      <coordinates>
        <lat>32.8352</lat>
        <lon>-117.077</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5949328</record_id>
    <processid>SMTPM5240-15</processid>
    <bin_uri>BOLD:AAE4089</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG22051-G04</sampleid>
      <catalognum>BIOUG22051-G04</catalognum>
      <fieldnum>GMP#07402</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <extrainfo>Nanaimo, Departure Bay Elementary Eco School</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Lisa Frey</collectors>
      <site_code>BIOUG:SCHOOL-MTP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Nanaimo</region>
      <sector>Departure Bay Elementary Eco School</sector>
      <exactsite>EQP-CLL-596</exactsite>
      <coordinates>
        <lat>49.207</lat>
        <lon>-123.972</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>21</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2777113</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SMTPM/BIOUG22051-G04+1449811740.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1050991</record_id>
    <processid>UPOLB602-09</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>N2Y-20080519-001</sampleid>
      <fieldnum>N2Y May 15 -19 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Edinburgh and Rickson</exactsite>
      <coordinates>
        <lat>43.511</lat>
        <lon>-80.211</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1257995</record_id>
    <processid>BBHEC179-09</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>09BBEHY-0179</sampleid>
      <catalognum>09BBEHY-0179</catalognum>
      <fieldnum>L#09TN-102</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Terra Nova NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2009</collectors>
      <country>Canada</country>
      <province_state>Newfoundland and Labrador</province_state>
      <region>Terra Nova NP</region>
      <sector>Sandy Pond</sector>
      <exactsite>Hiking Trail</exactsite>
      <coordinates>
        <lat>48.492</lat>
        <lon>-54.022</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>100</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>652407</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHEC/IMG_3168+1264092806.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[|http://www.gigapan.org/viewGigapan.php?id=29242]]&gt;</notes>
  </record>
  <record>
    <record_id>4005346</record_id>
    <processid>BCHYM1497-13</processid>
    <bin_uri>BOLD:AAI1846</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19357</sampleid>
      <catalognum>BC ZSM HYM 19357</catalognum>
      <fieldnum>BC ZSM HYM 19357</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214289</taxID>
          <name>Osmia leaiana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Mecklenburg-Vorpommern</province_state>
      <exactsite>Useriner Muehle</exactsite>
      <coordinates>
        <lat>53.32</lat>
        <lon>12.973</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>49</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185451</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19357+1382030228.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281106</record_id>
    <processid>BEECA076-06</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0076</sampleid>
      <fieldnum>04-MB-0076</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514565</record_id>
    <processid>BEECA198-06</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>06-ON-0198</sampleid>
      <fieldnum>06-ON-0198</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514869</record_id>
    <processid>BEECA502-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>06-ON-0502</sampleid>
      <fieldnum>06-ON-0502</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516948</record_id>
    <processid>BEECA596-06</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0596</sampleid>
      <fieldnum>04-MB-0596</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84789</taxID>
          <name>Osmia sp1-1395</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554151</record_id>
    <processid>BEECA961-07</processid>
    <bin_uri>BOLD:AAE4089</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0788</sampleid>
      <fieldnum>01-OR-0788</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96586</taxID>
          <name>Osmia albolateralis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596903</record_id>
    <processid>BEECB341-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1059</sampleid>
      <catalognum>BBSL695686</catalognum>
      <fieldnum>04-WA-1059</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Roger Lake</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268546</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596915</record_id>
    <processid>BEECB353-07</processid>
    <bin_uri>BOLD:AAI2016</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1071</sampleid>
      <catalognum>BBSL697202</catalognum>
      <fieldnum>04-WA-1071</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96580</taxID>
          <name>Osmia tanneri</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Tiffany Mountain</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596917</record_id>
    <processid>BEECB355-07</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1073</sampleid>
      <catalognum>BBSL696180</catalognum>
      <fieldnum>04-WA-1073</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson, L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Quarry at Three Buttes</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596926</record_id>
    <processid>BEECB364-07</processid>
    <bin_uri>BOLD:AAC8503</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1082</sampleid>
      <catalognum>BBSL697392</catalognum>
      <fieldnum>04-WA-1082</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96584</taxID>
          <name>Osmia trevoris</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Salmon Rivers</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596940</record_id>
    <processid>BEECB378-07</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1096</sampleid>
      <catalognum>BBSL695831</catalognum>
      <fieldnum>04-WA-1096</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson, L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Parachute Meadow</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596993</record_id>
    <processid>BEECB431-07</processid>
    <bin_uri>BOLD:AAE5466</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1150</sampleid>
      <catalognum>ZION26569</catalognum>
      <fieldnum>06-UT-1150</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96616</taxID>
          <name>Osmia gaudiosa</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596999</record_id>
    <processid>BEECB437-07</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1156</sampleid>
      <catalognum>ZION27192</catalognum>
      <fieldnum>06-UT-1156</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96619</taxID>
          <name>Osmia bruneri</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597014</record_id>
    <processid>BEECB452-07</processid>
    <bin_uri>BOLD:AAE5368</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-1171</sampleid>
      <catalognum>BBSL480621</catalognum>
      <fieldnum>03-UT-1171</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96625</taxID>
          <name>Osmia anasazi</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688029</record_id>
    <processid>BEECB739-07</processid>
    <bin_uri>BOLD:AAB4645</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1362</sampleid>
      <catalognum>PYU-1039</catalognum>
      <fieldnum>07-ID-1362</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Butte Co.</region>
      <exactsite>Big Lost River</exactsite>
      <coordinates>
        <lat>43.549</lat>
        <lon>-113.008</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1530</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060887</record_id>
    <processid>BEECC1184-09</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2857</sampleid>
      <catalognum>BBSL460802</catalognum>
      <fieldnum>02-UT-2857</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96619</taxID>
          <name>Osmia bruneri</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060911</record_id>
    <processid>BEECC1208-09</processid>
    <bin_uri>BOLD:AAE5485</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2881</sampleid>
      <catalognum>BBSL459709</catalognum>
      <fieldnum>02-UT-2881</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204361</taxID>
          <name>Osmia rawlinsi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Henrieville Spr., 0.5 mi N, Hwy 12</exactsite>
      <coordinates>
        <lat>37.568</lat>
        <lon>-111.988</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060912</record_id>
    <processid>BEECC1209-09</processid>
    <bin_uri>BOLD:AAE5485</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2882</sampleid>
      <catalognum>BBSL465438</catalognum>
      <fieldnum>02-UT-2882</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204361</taxID>
          <name>Osmia rawlinsi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060915</record_id>
    <processid>BEECC1212-09</processid>
    <bin_uri>BOLD:AAD4164</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2885</sampleid>
      <catalognum>BBSL485177</catalognum>
      <fieldnum>03-UT-2885</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204362</taxID>
          <name>Osmia sanrafaelae</name>
          <reference>Parker, 1985</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Cougar Knoll, 0.61 mi SSW</exactsite>
      <coordinates>
        <lat>37.302</lat>
        <lon>-111.144</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060917</record_id>
    <processid>BEECC1214-09</processid>
    <bin_uri>BOLD:AAD5650</bin_uri>
    <specimen_identifiers>
      <sampleid>01-UT-2887</sampleid>
      <catalognum>BBSL407575</catalognum>
      <fieldnum>01-UT-2887</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204363</taxID>
          <name>Osmia titusi</name>
          <reference>Cockerell, 1905</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Andrus,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Duffy Mesa, 1.8 mi NNW</exactsite>
      <coordinates>
        <lat>39.104</lat>
        <lon>-108.456</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060921</record_id>
    <processid>BEECC1218-09</processid>
    <bin_uri>BOLD:AAC8503</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2891</sampleid>
      <catalognum>BBSL456748</catalognum>
      <fieldnum>02-UT-2891</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96584</taxID>
          <name>Osmia trevoris</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Davidson, Cory</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Escalante Riv. Jct Death Hollow, 1.1 mi W</exactsite>
      <coordinates>
        <lat>37.779</lat>
        <lon>-111.533</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844639</record_id>
    <processid>BEECC276-08</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1948</sampleid>
      <catalognum>USGSDRO075362</catalognum>
      <fieldnum>07-SC-1948</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.575</lat>
        <lon>-80.237</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844645</record_id>
    <processid>BEECC282-08</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>05-MD-1954</sampleid>
      <catalognum>USGSDRO052496</catalognum>
      <fieldnum>05-MD-1954</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Maryland</province_state>
      <region>Pr. George`s Co.</region>
      <coordinates>
        <lat>39.015</lat>
        <lon>-76.849</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1003232</record_id>
    <processid>BEECC717-09</processid>
    <bin_uri>BOLD:AAB4645</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2295</sampleid>
      <catalognum>BBSL477941</catalognum>
      <fieldnum>03-UT-2295</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Wilson, Joe</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>3.2 mi SSE Wig Mt.</exactsite>
      <coordinates>
        <lat>40.274</lat>
        <lon>-113.042</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650281</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2295+1263577164.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Tamarix chinensis]]&gt;</notes>
  </record>
  <record>
    <record_id>1011063</record_id>
    <processid>BEECC884-09</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2462</sampleid>
      <catalognum>BBSL505761</catalognum>
      <fieldnum>03-UT-2462</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Johansen, Astrid</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Twentyfive Mile Wash</exactsite>
      <coordinates>
        <lat>37.56</lat>
        <lon>-111.305</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650420</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2462+1263585388.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>332689</record_id>
    <processid>BEEMH156-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>GUE06-BEES-156</sampleid>
      <fieldnum>GUE06-BEES-156</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <identification_method>BOLD ID Engine</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>M A Hannan</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Guelph</region>
      <sector>Stone Road</sector>
      <exactsite>Near Townsend House</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>138880</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Mohammed Hannan</photographer>
        <image_file>http://www.boldsystems.org/pics/BEEMH/IMG_4644+1163103496.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>5272444</record_id>
    <processid>CNNHD201-14</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17252-H04</sampleid>
      <catalognum>BIOUG17252-H04</catalognum>
      <fieldnum>GMP#03990</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <extrainfo>Nahanni NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Parks Canada</collectors>
      <collection_note>2 Malaise traps</collection_note>
      <site_code>BIOUG:NAHANNI-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <region>Nahanni National Park Reserve</region>
      <sector>Nailicho (Virginia Falls)</sector>
      <coordinates>
        <lat>61.606</lat>
        <lon>-125.758</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>578</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3418283</record_id>
    <processid>CNWBE748-13</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG05449-E12</sampleid>
      <catalognum>BIOUG05449-E12</catalognum>
      <fieldnum>GMP#00431</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Wood Buffalo NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Nicole Labine</collectors>
      <collection_note>Dry week, very little precipitation, hot dry air|Aspen stand</collection_note>
      <site_code>BIOUG:WOODBUFF-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Wood Buffalo National Park</region>
      <sector>Benchmark Weather Station</sector>
      <coordinates>
        <lat>59.811</lat>
        <lon>-111.989</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>219</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2773929</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/CNWBE/BIOUG05449-E12+1449496212.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289072</record_id>
    <processid>FBAPB711-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02186</sampleid>
      <catalognum>BC ZSM HYM 02186</catalognum>
      <fieldnum>BC ZSM HYM 02186</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>changed from nigriventris CSE II-2011</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Italy</country>
      <province_state>Trentino-Alto Adige/Sudtirol</province_state>
      <region>Trentino</region>
      <exactsite>Paso di ia bei Cortina d Ampezzo</exactsite>
      <coordinates>
        <lat>46.5</lat>
        <lon>12.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1600</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663049</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02186+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:changed from nigriventris CSE II-2011::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>1289080</record_id>
    <processid>FBAPB719-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02194</sampleid>
      <catalognum>BC ZSM HYM 02194</catalognum>
      <fieldnum>BC ZSM HYM 02194</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <sector>Upper Bavaria</sector>
      <exactsite>Weilheim, NSG Hardt</exactsite>
      <coordinates>
        <lat>47.83</lat>
        <lon>11.16</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>590</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663057</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02194+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289088</record_id>
    <processid>FBAPB727-09</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02202</sampleid>
      <catalognum>BC ZSM HYM 02202</catalognum>
      <fieldnum>BC ZSM HYM 02202</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Trentino-Alto Adige/Sudtirol</province_state>
      <region>Trentino</region>
      <exactsite>Trento, Dro</exactsite>
      <coordinates>
        <lat>45.98</lat>
        <lon>10.94</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>304</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663065</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02202+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083292</record_id>
    <processid>FBAPC808-11</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07933</sampleid>
      <catalognum>BC ZSM HYM 07933</catalognum>
      <fieldnum>BC ZSM HYM 07933</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>65 km SW Sevilla, W Matalascanas</exactsite>
      <coordinates>
        <lat>36.986</lat>
        <lon>-6.518</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>39</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243486</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07933+1312308562.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083355</record_id>
    <processid>FBAPC871-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08376</sampleid>
      <catalognum>BC ZSM HYM 08376</catalognum>
      <fieldnum>BC ZSM HYM 08376</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Goellheim N</exactsite>
      <coordinates>
        <lat>49.594</lat>
        <lon>8.0539</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243549</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08376+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083360</record_id>
    <processid>FBAPC876-11</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08381</sampleid>
      <catalognum>BC ZSM HYM 08381</catalognum>
      <fieldnum>BC ZSM HYM 08381</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>G. Reder</collectors>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <exactsite>Neuleinigen, Gruenstaedter Berg, 1 km N</exactsite>
      <coordinates>
        <lat>49.5441</lat>
        <lon>8.1373</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>275</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243554</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08381+1312308654.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140447</record_id>
    <processid>FBAPD236-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09546</sampleid>
      <catalognum>BC ZSM HYM 09546</catalognum>
      <fieldnum>BC ZSM HYM 09546</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Konstanz</exactsite>
      <coordinates>
        <lat>47.661</lat>
        <lon>9.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>430</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1311264</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_09546+1315500456.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[check sex]]&gt;</notes>
  </record>
  <record>
    <record_id>2140529</record_id>
    <processid>FBAPD318-11</processid>
    <bin_uri>BOLD:AAZ7870</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07728</sampleid>
      <catalognum>BC ZSM HYM 07728</catalognum>
      <fieldnum>BC ZSM HYM 07728</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>396028</taxID>
          <name>Osmia latreillei</name>
          <reference>Spinola, 1806</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km, SW Sevilla, W Matalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310871</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07728+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140532</record_id>
    <processid>FBAPD321-11</processid>
    <bin_uri>BOLD:AAZ7870</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07731</sampleid>
      <catalognum>BC ZSM HYM 07731</catalognum>
      <fieldnum>BC ZSM HYM 07731</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>396028</taxID>
          <name>Osmia latreillei</name>
          <reference>Spinola, 1806</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km, SW Sevilla, W Matalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310874</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07731+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2874806</record_id>
    <processid>GBACU795-12</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 13335</sampleid>
      <catalognum>BC ZSM HYM 13335</catalognum>
      <fieldnum>BC ZSM HYM 13335</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Veithoechheim, Ravensburg</exactsite>
      <coordinates>
        <lat>49.85</lat>
        <lon>9.86</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>456</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825460</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_13335+1337104520.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6153624</record_id>
    <processid>GBAH11806-15</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>KP696364</sampleid>
      <catalognum>MBD_I012</catalognum>
      <fieldnum>KP696364</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>taxon:586934</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856426</record_id>
    <processid>GBAH3895-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726612</sampleid>
      <catalognum>EU726612</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856428</record_id>
    <processid>GBAH3897-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726610</sampleid>
      <catalognum>EU726610</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856448</record_id>
    <processid>GBAH3917-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726590</sampleid>
      <catalognum>EU726590</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856451</record_id>
    <processid>GBAH3920-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726587</sampleid>
      <catalognum>EU726587</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856452</record_id>
    <processid>GBAH3921-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726586</sampleid>
      <catalognum>EU726586</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856454</record_id>
    <processid>GBAH3923-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726584</sampleid>
      <catalognum>EU726584</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856472</record_id>
    <processid>GBAH3941-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726566</sampleid>
      <catalognum>EU726566</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856480</record_id>
    <processid>GBAH3949-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726558</sampleid>
      <catalognum>EU726558</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616535</record_id>
    <processid>GBAH7417-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583331</sampleid>
      <catalognum>KC583331</catalognum>
      <fieldnum>KC583331</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616536</record_id>
    <processid>GBAH7418-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583330</sampleid>
      <catalognum>KC583330</catalognum>
      <fieldnum>KC583330</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616541</record_id>
    <processid>GBAH7423-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583325</sampleid>
      <catalognum>KC583325</catalognum>
      <fieldnum>KC583325</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>2717471</record_id>
    <processid>GBLGC012-12</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 12362</sampleid>
      <catalognum>BC ZSM HYM 12362</catalognum>
      <fieldnum>BC ZSM HYM 12362</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <region>Niederbayern</region>
      <exactsite>Ergolding</exactsite>
      <coordinates>
        <lat>48.578</lat>
        <lon>12.172</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>391</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3174212</record_id>
    <processid>GBMIN17982-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135985</sampleid>
      <catalognum>ADU058</catalognum>
      <fieldnum>KC135985</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>556</record_id>
    <processid>HCBNS169-03</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee61</sampleid>
      <catalognum>CSS#156</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Lockhartville</sector>
      <coordinates>
        <lat>45.085</lat>
        <lon>-64.234</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>397</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS169-03.jpg</image_file>
      </media>
      <media>
        <mediaID>269085</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Male_Lat+1205190694.jpg</image_file>
      </media>
      <media>
        <mediaID>269084</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_coerulescens_Fem_Lat+1205190650.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>559</record_id>
    <processid>HCBNS172-03</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee69</sampleid>
      <fieldnum>Bee69</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Upper Canard</sector>
      <coordinates>
        <lat>45.135</lat>
        <lon>-64.489</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4836</record_id>
    <processid>HDBNS093-03</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c93</sampleid>
      <catalognum>CSS#166</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Lunenburg County</region>
      <sector>Northwest Cove</sector>
      <coordinates>
        <lat>44.319</lat>
        <lon>-64.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4840</record_id>
    <processid>HDBNS097-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c97</sampleid>
      <catalognum>CSS#174</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sue Westby</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>East Torbrook</sector>
      <coordinates>
        <lat>44.927</lat>
        <lon>-64.93</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>6515</record_id>
    <processid>HDBNS216-04</processid>
    <bin_uri>BOLD:AAD5706</bin_uri>
    <specimen_identifiers>
      <sampleid>sheffT-64</sampleid>
      <catalognum>CSS#95</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>127290</taxID>
          <name>Osmia virga</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Sue Rigby</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Lunenburg County</region>
      <sector>Northwest Cove</sector>
      <coordinates>
        <lat>44.319</lat>
        <lon>-64.016</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>5262</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/SHEFFT-64.JPG</image_file>
      </media>
      <media>
        <mediaID>269090</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/Osmia_virga_Fem_Lat+1205191040.jpg</image_file>
      </media>
      <media>
        <mediaID>5261</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/EOS20D_2_SHEFFT-64.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>763670</record_id>
    <processid>LASNA615-08</processid>
    <bin_uri>BOLD:AAE5481</bin_uri>
    <specimen_identifiers>
      <sampleid>1408-E04</sampleid>
      <fieldnum>1408-E04</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>John Ascher</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>156081</taxID>
          <name>Osmia glauca</name>
          <reference>Fowler, 1899</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J.S. Ascher</collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>624314</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Packer Collection at York University</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Packer Collection at York University</photographer>
        <image_file>http://www.boldsystems.org/pics/ASBEE/B1407-1408-E04+1248126052.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6295926</record_id>
    <processid>SRIRP003-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-5</sampleid>
      <catalognum>SRFS-5</catalognum>
      <fieldnum>SRFS-5</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>4N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9512</lat>
        <lon>-120.109</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>478.9</elev>
    </collection_event>
    <notes>&lt;![CDATA[Paul Anderson, Bailey Harris]]&gt;</notes>
  </record>
  <record>
    <record_id>6295932</record_id>
    <processid>SRIRP009-15</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-8</sampleid>
      <catalognum>SRFS-8</catalognum>
      <fieldnum>SRFS-8</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>Morphology</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>1S PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9442</lat>
        <lon>-120.117</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>446.41</elev>
    </collection_event>
    <notes>&lt;![CDATA[Phoebe Wilkinson, Piper Stump]]&gt;</notes>
  </record>
  <record>
    <record_id>4870686</record_id>
    <processid>SSGBC7554-14</processid>
    <bin_uri>BOLD:ABZ4941</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG14958-G01</sampleid>
      <catalognum>BIOUG14958-G01</catalognum>
      <fieldnum>L#13BIOBUS-0653</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Gros Morne NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2013</collectors>
      <collection_note>10 pan traps |windy cloudy and warm |Peridotite, juniper, larch, fern, grasses, wildflowers, mixed desert/grassland habitat</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Newfoundland and Labrador</province_state>
      <region>Gros Morne National Park</region>
      <sector>Tablelands Trail</sector>
      <coordinates>
        <lat>49.477</lat>
        <lon>-57.97</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>175</elev>
    </collection_event>
    <notes>&lt;![CDATA[July 15, 2 pans dried out]]&gt;</notes>
  </record>
  <record>
    <record_id>6318397</record_id>
    <processid>SSGLA5011-15</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG24599-B08</sampleid>
      <catalognum>BIOUG24599-B08</catalognum>
      <fieldnum>L#14BIOBUS-0594</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Glacier NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2014</collectors>
      <collection_note>10 Pan Traps|Warm and sunny|Seasonal stream bed, grasses and shrubs, rocky soil</collection_note>
      <sampling_protocol>Pan trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Glacier National Park</region>
      <exactsite>Beaver Valley Trail</exactsite>
      <coordinates>
        <lat>51.361</lat>
        <lon>-117.429</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>865</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1051045</record_id>
    <processid>UPOLB656-09</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>N3Y-20080523-002</sampleid>
      <fieldnum>N3Y May 20 -23 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Waterloo</sector>
      <exactsite>Chesapeake Drive</exactsite>
      <coordinates>
        <lat>43.508</lat>
        <lon>-80.505</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3955531</record_id>
    <processid>ASGCB254-13</processid>
    <bin_uri>BOLD:AAC0884</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F03</sampleid>
      <fieldnum>BIOUG07489-F03</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172456</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_13_B_Lateral+1383686212.jpg</image_file>
      </media>
      <media>
        <mediaID>2172455</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_13_B_Dorsal+1383686222.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1769805</record_id>
    <processid>BBHYL362-10</processid>
    <bin_uri>BOLD:AAB8874</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3316</sampleid>
      <catalognum>10BBCHY-3316</catalognum>
      <fieldnum>L#PC2010EI-002</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Elk Island NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>|Hot,sunny|Aspen forest and sedge meadows</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Elk Island NP</region>
      <sector>Beaver Pond Trail</sector>
      <coordinates>
        <lat>53.687</lat>
        <lon>-112.813</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>733</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992588</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6568+1294951668.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281103</record_id>
    <processid>BEECA073-06</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0073</sampleid>
      <fieldnum>04-MB-0073</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281108</record_id>
    <processid>BEECA078-06</processid>
    <bin_uri>BOLD:AAD4181</bin_uri>
    <specimen_identifiers>
      <sampleid>04-MB-0078</sampleid>
      <fieldnum>04-MB-0078</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85395</taxID>
          <name>Osmia nigrifrons</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268415</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_nigrifrons_Fem_Lat+1205190918.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Collinsia torreyi var.torreyi]]&gt;</notes>
  </record>
  <record>
    <record_id>514866</record_id>
    <processid>BEECA499-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>06-ON-0499</sampleid>
      <fieldnum>06-ON-0499</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516965</record_id>
    <processid>BEECA613-06</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0613</sampleid>
      <fieldnum>06-YT-0613</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Packer</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <exactsite>Kluane Nat Park &amp; Res</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516966</record_id>
    <processid>BEECA614-06</processid>
    <bin_uri>BOLD:ACF4328</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0614</sampleid>
      <fieldnum>06-YT-0614</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706416</record_id>
    <processid>BEECB1020-07</processid>
    <bin_uri>BOLD:AAD6221</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CO-1641</sampleid>
      <catalognum>USGSDRO34207</catalognum>
      <fieldnum>04-CO-1641</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204033</taxID>
          <name>Osmia giliarum</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Colorado</province_state>
      <region>Jackson Co.</region>
      <coordinates>
        <lat>40.602</lat>
        <lon>-106.073</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596907</record_id>
    <processid>BEECB345-07</processid>
    <bin_uri>BOLD:AAE5493</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1063</sampleid>
      <catalognum>BBSL696986</catalognum>
      <fieldnum>04-WA-1063</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90381</taxID>
          <name>Osmia montana</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>96576</taxID>
          <name>Osmia montana montana</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>2.4 mi W. Duncan Ridge</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596935</record_id>
    <processid>BEECB373-07</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1091</sampleid>
      <catalognum>BBSL697458</catalognum>
      <fieldnum>04-WA-1091</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1 mi E Baldy Pass</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596992</record_id>
    <processid>BEECB430-07</processid>
    <bin_uri>BOLD:AAE5466</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1149</sampleid>
      <catalognum>ZION26458</catalognum>
      <fieldnum>06-UT-1149</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96616</taxID>
          <name>Osmia gaudiosa</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597004</record_id>
    <processid>BEECB442-07</processid>
    <bin_uri>BOLD:ABY6391</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1161</sampleid>
      <catalognum>BBSL620467</catalognum>
      <fieldnum>05-CA-1161</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>95794</taxID>
          <name>Osmia exigua</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688033</record_id>
    <processid>BEECB743-07</processid>
    <bin_uri>BOLD:AAA7671</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1366</sampleid>
      <catalognum>PYU-1253</catalognum>
      <fieldnum>07-ID-1366</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96577</taxID>
          <name>Osmia californica</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Elmora Co.</region>
      <exactsite>20 km E Mountain Home</exactsite>
      <coordinates>
        <lat>43.284</lat>
        <lon>-115.476</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1530</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688093</record_id>
    <processid>BEECB803-07</processid>
    <bin_uri>BOLD:AAC5818</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1520</sampleid>
      <fieldnum>07-BC-1520</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>BC1</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060910</record_id>
    <processid>BEECC1207-09</processid>
    <bin_uri>BOLD:AAE5485</bin_uri>
    <specimen_identifiers>
      <sampleid>04-UT-2880</sampleid>
      <catalognum>BBSL462917</catalognum>
      <fieldnum>04-UT-2880</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204361</taxID>
          <name>Osmia rawlinsi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger, Olivia</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Deer Springs Pt, 0.11 mi W</exactsite>
      <coordinates>
        <lat>37.296</lat>
        <lon>-112.173</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>843267</record_id>
    <processid>BEECC186-08</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>07-OR-1859</sampleid>
      <catalognum>PYU-2192</catalognum>
      <fieldnum>07-OR-1859</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
      <region>Benton Co.</region>
      <sector>Hwy 20</sector>
      <coordinates>
        <lat>44.596</lat>
        <lon>-123.585</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>214</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844641</record_id>
    <processid>BEECC278-08</processid>
    <bin_uri>BOLD:AAF2177</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1950</sampleid>
      <catalognum>USGSDRO075479</catalognum>
      <fieldnum>07-SC-1950</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162344</taxID>
          <name>Osmia inspergens</name>
          <reference>Lovell &amp; Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.558</lat>
        <lon>-80.217</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>973662</record_id>
    <processid>BEECC524-08</processid>
    <bin_uri>BOLD:AAE5426</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-2197</sampleid>
      <catalognum>USGSDRO075342</catalognum>
      <fieldnum>07-SC-2197</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162345</taxID>
          <name>Osmia sandhouseae</name>
          <reference>Mitchell, 1927</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.575</lat>
        <lon>-80.237</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650192</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2197+1263584026.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>973663</record_id>
    <processid>BEECC525-08</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>05-MD-2198</sampleid>
      <catalognum>USGSDRO084996</catalognum>
      <fieldnum>05-MD-2198</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>191630</taxID>
          <name>Osmia subfasciata</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>B. Hollister</collectors>
      <country>United States</country>
      <province_state>Maryland</province_state>
      <region>Anne Arundel Co.</region>
      <coordinates>
        <lat>38.8</lat>
        <lon>-76.698</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650193</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2198+1263584084.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1057706</record_id>
    <processid>BEECC961-09</processid>
    <bin_uri>BOLD:AAF2168</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2729</sampleid>
      <catalognum>BBSL548865</catalognum>
      <fieldnum>04-CA-2729</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204030</taxID>
          <name>Osmia cara</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Foresta Rd, 0.6mi SbyW Eagle Pk</exactsite>
      <coordinates>
        <lat>37.683</lat>
        <lon>-119.791</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650659</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2729+1263589914.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Cirsium occidentale var.californicum]]&gt;</notes>
  </record>
  <record>
    <record_id>6065001</record_id>
    <processid>BEEEE181-15</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970550</sampleid>
      <catalognum>BMNH(E)#970550</catalognum>
      <fieldnum>BMNH(E)#970550</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>Adult</lifestage>
      <associated_taxa>ex: Hippocrepis comosa</associated_taxa>
      <extrainfo>At flowers of Hippocrepis comosa</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: SU617794</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Oxfordshire</region>
      <sector>Hartslock SSSI</sector>
      <exactsite>Near Goring-on-Thames</exactsite>
      <coordinates>
        <lat>51.51</lat>
        <lon>-1.112</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Oxon: Hartslock SSSI: nr Goring-on-Thames: SU617794: 7.vi.2015: at flowers of Hippocrepis comosa: D.Notton; f Osmia bicolor det. D.Notton, 2015; BMNH(E)#970550]]&gt;</notes>
  </record>
  <record>
    <record_id>946374</record_id>
    <processid>BOFWM073-08</processid>
    <bin_uri>BOLD:AAE4095</bin_uri>
    <specimen_identifiers>
      <sampleid>CCDB-00601 G01</sampleid>
      <fieldnum>CCDB-00601 G01</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ricardo Ayala</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>183588</taxID>
          <name>Osmia azteca</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Laurence Packer</collectors>
      <country>Mexico</country>
      <province_state>Jalisco</province_state>
      <region>20 km N Atemajac de Brizuelas</region>
      <coordinates>
        <lat>20.4019</lat>
        <lon>-104.139</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>624635</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Packer Collection at York University</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Packer Collection at York University</photographer>
        <image_file>http://www.boldsystems.org/pics/BOFWM/00601-G01+1262793244.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>7201066</record_id>
    <processid>CRHIF006-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-E06</sampleid>
      <catalognum>BIOUG30310-E06</catalognum>
      <fieldnum>L#16CRH-0001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; goldenrod, milkweed</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 1</exactsite>
      <coordinates>
        <lat>43.4881</lat>
        <lon>-79.616</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>86</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7200333</record_id>
    <processid>CRHII006-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-H01</sampleid>
      <catalognum>BIOUG30310-H01</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>2241144</record_id>
    <processid>FBACB685-11</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 09805</sampleid>
      <catalognum>BC ZSM HYM 09805</catalognum>
      <fieldnum>BC ZSM HYM 09805</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <region>Kyffhaeuser</region>
      <exactsite>Steinthaleben, Ochsenburg</exactsite>
      <coordinates>
        <lat>51.386</lat>
        <lon>11.038</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>165</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1645614</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPI/BC_ZSM_HYM_09805+1338571452.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289101</record_id>
    <processid>FBAPB740-09</processid>
    <bin_uri>BOLD:AAO4762</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02215</sampleid>
      <catalognum>BC ZSM HYM 02215</catalognum>
      <fieldnum>BC ZSM HYM 02215</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265278</taxID>
          <name>Osmia versicolor</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Roussillion, Lioux</exactsite>
      <coordinates>
        <lat>43.94</lat>
        <lon>5.03</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663078</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02215+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289110</record_id>
    <processid>FBAPB749-09</processid>
    <bin_uri>BOLD:AAI1998</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02224</sampleid>
      <catalognum>BC ZSM HYM 02224</catalognum>
      <fieldnum>BC ZSM HYM 02224</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265280</taxID>
          <name>Osmia viridana</name>
          <reference>Morawitz, 1874</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>Pondel</exactsite>
      <coordinates>
        <lat>45.68</lat>
        <lon>7.23</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663087</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02224+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709631</record_id>
    <processid>FBAPC365-10</processid>
    <bin_uri>BOLD:ACC7603</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05970</sampleid>
      <catalognum>BC ZSM HYM 05970</catalognum>
      <fieldnum>BC ZSM HYM 05970</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Turkey</country>
      <province_state>Mersin</province_state>
      <exactsite>Akova</exactsite>
      <coordinates>
        <lat>36.399</lat>
        <lon>33.187</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1313</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189831</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05970+1309188382.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2021836</record_id>
    <processid>FBAPC543-11</processid>
    <bin_uri>BOLD:AAY5201</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07003</sampleid>
      <catalognum>BC ZSM HYM 07003</catalognum>
      <fieldnum>BC ZSM HYM 07003</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590709</taxID>
          <name>Osmia saxicola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>Col de la Cayolle, S</exactsite>
      <coordinates>
        <lat>44.253</lat>
        <lon>6.742</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171220</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07003+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022027</record_id>
    <processid>FBAPC734-11</processid>
    <bin_uri>BOLD:ADK9581</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07574</sampleid>
      <catalognum>BC ZSM HYM 07574</catalognum>
      <fieldnum>BC ZSM HYM 07574</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Brigue</exactsite>
      <coordinates>
        <lat>44.065</lat>
        <lon>7.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>800</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171411</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07574+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083445</record_id>
    <processid>FBAPC961-11</processid>
    <bin_uri>BOLD:AAY9599</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08466</sampleid>
      <catalognum>BC ZSM HYM 08466</catalognum>
      <fieldnum>BC ZSM HYM 08466</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Rudolstadt, Moerla</exactsite>
      <coordinates>
        <lat>50.722</lat>
        <lon>11.308</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>281</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243639</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08466+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140527</record_id>
    <processid>FBAPD316-11</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07726</sampleid>
      <catalognum>BC ZSM HYM 07726</catalognum>
      <fieldnum>BC ZSM HYM 07726</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 23 km S Cadiz, Chiclanca, E-cad 1</exactsite>
      <coordinates>
        <lat>36.5</lat>
        <lon>-6.12</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310869</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07726+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140584</record_id>
    <processid>FBAPD373-11</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07783</sampleid>
      <catalognum>BC ZSM HYM 07783</catalognum>
      <fieldnum>BC ZSM HYM 07783</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 25 km SWW Sevilla, Aznalcazar</exactsite>
      <coordinates>
        <lat>37.35</lat>
        <lon>-6.25</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>25</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310926</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07783+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140586</record_id>
    <processid>FBAPD375-11</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07785</sampleid>
      <catalognum>BC ZSM HYM 07785</catalognum>
      <fieldnum>BC ZSM HYM 07785</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km SW Sevilla, W Maalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310928</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07785+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133843</record_id>
    <processid>FBHAP291-09</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00386</sampleid>
      <catalognum>BC ZSM HYM 00386</catalognum>
      <fieldnum>BC ZSM HYM 00386</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A. Weis</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>FFB, Groebenzell</exactsite>
      <coordinates>
        <lat>48.183</lat>
        <lon>11.367</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>530</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497287</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00386+1244555652.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133845</record_id>
    <processid>FBHAP293-09</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00388</sampleid>
      <catalognum>BC ZSM HYM 00388</catalognum>
      <fieldnum>BC ZSM HYM 00388</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A. Weis</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>FFB, Groebenzell</exactsite>
      <coordinates>
        <lat>48.183</lat>
        <lon>11.367</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>530</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497289</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00388+1244555668.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133855</record_id>
    <processid>FBHAP303-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00398</sampleid>
      <catalognum>BC ZSM HYM 00398</catalognum>
      <fieldnum>BC ZSM HYM 00398</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Obermenzing</exactsite>
      <coordinates>
        <lat>48.167</lat>
        <lon>11.467</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497299</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00398+1244555758.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199242</record_id>
    <processid>GBACU3703-13</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17288</sampleid>
      <catalognum>BC ZSM HYM 17288</catalognum>
      <fieldnum>BC ZSM HYM 17288</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>St. Pierre</exactsite>
      <coordinates>
        <lat>45.716</lat>
        <lon>7.235</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>700</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937579</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17288+1362509794.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2874803</record_id>
    <processid>GBACU792-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 13332</sampleid>
      <catalognum>BC ZSM HYM 13332</catalognum>
      <fieldnum>BC ZSM HYM 13332</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825457</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_13332+1337104260.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2874804</record_id>
    <processid>GBACU793-12</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 13333</sampleid>
      <catalognum>BC ZSM HYM 13333</catalognum>
      <fieldnum>BC ZSM HYM 13333</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>250</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825458</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_13333+1337104426.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856430</record_id>
    <processid>GBAH3899-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726608</sampleid>
      <catalognum>EU726608</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856445</record_id>
    <processid>GBAH3914-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726593</sampleid>
      <catalognum>EU726593</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856487</record_id>
    <processid>GBAH3956-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726551</sampleid>
      <catalognum>EU726551</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616537</record_id>
    <processid>GBAH7419-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583329</sampleid>
      <catalognum>KC583329</catalognum>
      <fieldnum>KC583329</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616543</record_id>
    <processid>GBAH7425-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583323</sampleid>
      <catalognum>KC583323</catalognum>
      <fieldnum>KC583323</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417841</record_id>
    <processid>GBMIN78105-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957867</sampleid>
      <fieldnum>KX957867</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417848</record_id>
    <processid>GBMIN78112-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957902</sampleid>
      <fieldnum>KX957902</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417852</record_id>
    <processid>GBMIN78116-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957869</sampleid>
      <fieldnum>KX957869</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417853</record_id>
    <processid>GBMIN78117-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX374765</sampleid>
      <fieldnum>KX374765</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417857</record_id>
    <processid>GBMIN78121-17</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>KT123240</sampleid>
      <fieldnum>KT123240</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5220513</record_id>
    <processid>GMGMH1508-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-F01</sampleid>
      <catalognum>BIOUG17018-F01</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>5220596</record_id>
    <processid>GMGMH1591-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17019-E01</sampleid>
      <catalognum>BIOUG17019-E01</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>6436336</record_id>
    <processid>GMOQF280-15</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG25284-B11</sampleid>
      <catalognum>BIOUG25284-B11</catalognum>
      <fieldnum>GMP#05213</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>Benoit Godin</collectors>
      <collection_note>MT damaged, rip in white back of tent, front poles bent; repositioned and secured trap; very rainy</collection_note>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Whitehorse</region>
      <sector>Wolf Creek</sector>
      <exactsite>Cadet Camp</exactsite>
      <coordinates>
        <lat>60.5954</lat>
        <lon>-134.953</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4799</record_id>
    <processid>HDBNS056-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c56</sampleid>
      <catalognum>sheff-c56</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Upper Canard</sector>
      <coordinates>
        <lat>45.1</lat>
        <lon>-64.2</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3701</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffC-56_photo_a.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4828</record_id>
    <processid>HDBNS085-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c85</sampleid>
      <catalognum>sheff-c85</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>Lockhartville</sector>
      <coordinates>
        <lat>45.1</lat>
        <lon>-64.2</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>70289</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/sheff-c85+1141055338.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4833</record_id>
    <processid>HDBNS090-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c90</sampleid>
      <catalognum>sheff-c90</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Harriston</sector>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3716</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffC-90_photo_a.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>708827</record_id>
    <processid>HMBCH027-07</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-008</sampleid>
      <catalognum>CHU07-BEE-008</catalognum>
      <fieldnum>CHU07-BEE-008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259390</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_022+1197913948.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708857</record_id>
    <processid>HMBCH057-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-038</sampleid>
      <catalognum>CHU07-BEE-038</catalognum>
      <fieldnum>CHU07-BEE-038</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>16 km SW Churchill, Churchill River Pump House</sector>
      <coordinates>
        <lat>58.626</lat>
        <lon>-94.229</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259420</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_052+1197914486.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Pump House||58.619|-93.828|&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708861</record_id>
    <processid>HMBCH061-07</processid>
    <bin_uri>BOLD:ACE4798</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-042</sampleid>
      <catalognum>CHU07-BEE-042</catalognum>
      <fieldnum>CHU07-BEE-042</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>686305</taxID>
          <name>Osmia tarsata</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259424</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_056+1197914490.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708865</record_id>
    <processid>HMBCH065-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-046</sampleid>
      <catalognum>CHU07-BEE-046</catalognum>
      <fieldnum>CHU07-BEE-046</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259428</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_060+1197914494.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>2495800</record_id>
    <processid>SDBEE278-12</processid>
    <bin_uri>BOLD:ABW4591</bin_uri>
    <specimen_identifiers>
      <sampleid>KJH.1392</sampleid>
      <fieldnum>KJH.1392</fieldnum>
      <institution_storing>University of California, San Diego</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Keng-Lou J. Hung</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>463307</taxID>
          <name>Osmia SanDiego Sp.1</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. James Hung</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>San Diego</region>
      <sector>San Diego</sector>
      <exactsite>Mission Trails Regional Park</exactsite>
      <coordinates>
        <lat>32.8423</lat>
        <lon>-117.066</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>2495801</record_id>
    <processid>SDBEE279-12</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>KJH.990</sampleid>
      <fieldnum>KJH.990</fieldnum>
      <institution_storing>University of California, San Diego</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Keng-Lou J. Hung</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>463305</taxID>
          <name>Osmia cf. clarescens</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. James Hung</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>San Diego</region>
      <sector>San Diego</sector>
      <exactsite>Pasatiempo Open Space West</exactsite>
      <coordinates>
        <lat>32.7922</lat>
        <lon>-117.061</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5799083</record_id>
    <processid>SSKOA1225-15</processid>
    <bin_uri>BOLD:AAF2177</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG20558-E09</sampleid>
      <catalognum>BIOUG20558-E09</catalognum>
      <fieldnum>L#13BIOBUS-0138</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162344</taxID>
          <name>Osmia inspergens</name>
          <reference>Lovell &amp; Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Wetland</habitat>
      <extrainfo>Kouchibouguac NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2013</collectors>
      <collection_note>10 pan traps|partly cloudy|domed bog</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kouchibouguac National Park</region>
      <sector>Bog Trail</sector>
      <coordinates>
        <lat>46.812</lat>
        <lon>-64.951</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>16</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2799076</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSKOA/BIOUG20558-E09+1453338240.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1049563</record_id>
    <processid>UPOLL124-09</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>O5B-20070702-002</sampleid>
      <fieldnum>O5B June 28 - July 2 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Cambridge</sector>
      <exactsite>Chalmers Street</exactsite>
      <coordinates>
        <lat>43.355</lat>
        <lon>-80.298</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8115257</record_id>
    <processid>ABEE077-17</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 277</sampleid>
      <catalognum>NHMW-HYM 277</catalognum>
      <fieldnum>Zimmermann 11.07.2016</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>vouchered: registered collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>NBH2 Nordbahnhof</exactsite>
      <coordinates>
        <lat>48.2273</lat>
        <lon>16.3919</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3162550</mediaID>
        <media_descriptor>Frontal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000277_Of+1500053412.jpg</image_file>
      </media>
      <media>
        <mediaID>3162551</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000277_Os+1500053258.jpg</image_file>
      </media>
      <media>
        <mediaID>3162549</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000277_Oo+1500053014.jpg</image_file>
      </media>
      <media>
        <mediaID>3162553</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000277_La2+1500053364.jpg</image_file>
      </media>
      <media>
        <mediaID>3162552</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000277_La1+1500052980.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>8362283</record_id>
    <processid>ABEE184-17</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 2142</sampleid>
      <catalognum>NHMW-HYM 2142</catalognum>
      <fieldnum>NBH2 Zimmermann 2017.04.03 Oesterreich WienAUTWienZimmermann</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sabine Schoder</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2273</lat>
        <lon>16.3919</lon>
        <coord_source>Google Earth</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8362284</record_id>
    <processid>ABEE185-17</processid>
    <bin_uri>BOLD:ADJ1069</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 2144</sampleid>
      <catalognum>NHMW-HYM 2144</catalognum>
      <fieldnum>NBH2 Zimmermann 2017.04.03 Oesterreich WienAUTWienZimmermann</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2273</lat>
        <lon>16.3919</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1741838</record_id>
    <processid>BBHYK033-10</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-1991</sampleid>
      <catalognum>10BBCHY-1991</catalognum>
      <fieldnum>L#PC2010YO-161</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <habitat>Grassland</habitat>
      <extrainfo>Yoho NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>10 Yellow pans||Avalanche cleared meadow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Yoho NP</region>
      <sector>Emerald Lake Trails</sector>
      <coordinates>
        <lat>51.443</lat>
        <lon>-116.542</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1310</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>977148</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Spencer Walker</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYK/10bbchy-1991+1293051340.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>240782</record_id>
    <processid>BCT006-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>06-BCT-006</sampleid>
      <fieldnum>06-BCT-006</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>58220</taxID>
          <name>Osmia pumila</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>C. J. Daley</collectors>
      <country>United States</country>
      <province_state>Connecticut</province_state>
      <region>New London County</region>
      <exactsite>Montville, Chesterfield Rd.</exactsite>
      <coordinates>
        <lat>41.275</lat>
        <lon>-72.103</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>144025</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/BCT/06-BCT-006+1147195460.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281151</record_id>
    <processid>BEECA121-06</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0121</sampleid>
      <fieldnum>04-ON-0121</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268418</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECA/Osmia_subaustralis_Male_Lat+1205191006.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281153</record_id>
    <processid>BEECA123-06</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0123</sampleid>
      <fieldnum>04-ON-0123</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Malaise trap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>A. Bennett, D. Barnes</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <exactsite>N. Gower to Smiths Falls, 1km N of city Rd 6 &amp; Mon</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281194</record_id>
    <processid>BEECA164-06</processid>
    <bin_uri>BOLD:AAC3107</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0164</sampleid>
      <fieldnum>03-BC-0164</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281195</record_id>
    <processid>BEECA165-06</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0165</sampleid>
      <fieldnum>03-BC-0165</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514805</record_id>
    <processid>BEECA438-06</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>03-NT-0438</sampleid>
      <fieldnum>03-NT-0438</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Anne Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Negus Pt.; Yellowknife</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516954</record_id>
    <processid>BEECA602-06</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0602</sampleid>
      <fieldnum>06-YT-0602</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554148</record_id>
    <processid>BEECA958-07</processid>
    <bin_uri>BOLD:AAC3294</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0785</sampleid>
      <fieldnum>01-OR-0785</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204027</taxID>
          <name>Osmia densa</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Packer</collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
      <region>Lane Co.</region>
      <exactsite>Hampton, Hwy 58, 28 mi SE Eugene</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597005</record_id>
    <processid>BEECB443-07</processid>
    <bin_uri>BOLD:AAC3290</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1162</sampleid>
      <catalognum>ZION23694</catalognum>
      <fieldnum>06-UT-1162</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204036</taxID>
          <name>Osmia ednae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597008</record_id>
    <processid>BEECB446-07</processid>
    <bin_uri>BOLD:AAE5486</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1165</sampleid>
      <catalognum>BBSL620185</catalognum>
      <fieldnum>05-CA-1165</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96623</taxID>
          <name>Osmia regulina</name>
          <reference>Cockerell, 1911</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688036</record_id>
    <processid>BEECB746-07</processid>
    <bin_uri>BOLD:AAD0390</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1369</sampleid>
      <catalognum>PYU-1150</catalognum>
      <fieldnum>07-ID-1369</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204366</taxID>
          <name>Osmia nemoris</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
      <region>Blaine Co.</region>
      <exactsite>10 km E Craters of the Moon Nat. Mon</exactsite>
      <coordinates>
        <lat>43.379</lat>
        <lon>-113.722</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1587</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844561</record_id>
    <processid>BEECC198-08</processid>
    <bin_uri>BOLD:AAD4163</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1871</sampleid>
      <catalognum>PYU-2543</catalognum>
      <fieldnum>07-WA-1871</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96619</taxID>
          <name>Osmia bruneri</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Whitman Co.</region>
      <exactsite>10 km W Clarkston, Hwy 12</exactsite>
      <coordinates>
        <lat>46.427</lat>
        <lon>-117.151</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>223</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844642</record_id>
    <processid>BEECC279-08</processid>
    <bin_uri>BOLD:AAE5426</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1951</sampleid>
      <catalognum>USGSDRO075367</catalognum>
      <fieldnum>07-SC-1951</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162345</taxID>
          <name>Osmia sandhouseae</name>
          <reference>Mitchell, 1927</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.575</lat>
        <lon>-80.237</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1057693</record_id>
    <processid>BEECC948-09</processid>
    <bin_uri>BOLD:AAE4128</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2716</sampleid>
      <catalognum>BBSL565943</catalognum>
      <fieldnum>04-CA-2716</fieldnum>
      <institution_storing>United States Department of Agriculture, ARS, Systematic Entomology Laboratory</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204025</taxID>
          <name>Osmia malina</name>
          <reference>Cockerell, 1909</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Stephens, Erica</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Tuolumne Co.</region>
      <exactsite>Yosem Vly, El Capitan Mdw</exactsite>
      <coordinates>
        <lat>37.723</lat>
        <lon>-119.637</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650646</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2716+1263589876.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Aster occidentalis]]&gt;</notes>
  </record>
  <record>
    <record_id>1057697</record_id>
    <processid>BEECC952-09</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2720</sampleid>
      <catalognum>BBSL627527</catalognum>
      <fieldnum>05-CA-2720</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>2 mi W Andrews Peak</exactsite>
      <coordinates>
        <lat>38.041</lat>
        <lon>-119.717</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650650</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2720+1263590018.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Streptanthus sp.]]&gt;</notes>
  </record>
  <record>
    <record_id>1057699</record_id>
    <processid>BEECC954-09</processid>
    <bin_uri>BOLD:AAC3294</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2722</sampleid>
      <catalognum>BBSL566847</catalognum>
      <fieldnum>04-CA-2722</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204027</taxID>
          <name>Osmia densa</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Hetch Hetchy, 3mi SWbyS Dam</exactsite>
      <coordinates>
        <lat>37.911</lat>
        <lon>-119.815</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650652</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2722+1263590036.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Lupinus argenteus var.meionanthus]]&gt;</notes>
  </record>
  <record>
    <record_id>1057707</record_id>
    <processid>BEECC962-09</processid>
    <bin_uri>BOLD:AAF2185</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2730</sampleid>
      <catalognum>BBSL555714</catalognum>
      <fieldnum>04-CA-2730</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204031</taxID>
          <name>Osmia gabrielis</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>4.7mi E of N. Mt Lookout Tower</exactsite>
      <coordinates>
        <lat>37.903</lat>
        <lon>-119.81</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650660</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2730+1263589920.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057718</record_id>
    <processid>BEECC973-09</processid>
    <bin_uri>BOLD:ABY6905</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2741</sampleid>
      <catalognum>BBSL562620</catalognum>
      <fieldnum>04-CA-2741</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204034</taxID>
          <name>Osmia nifoata</name>
          <reference>Cockerell, 1909</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>3mi S Double Rock</exactsite>
      <coordinates>
        <lat>37.856</lat>
        <lon>-119.574</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650671</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2741+1263589958.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Should be Osmia pellax, but that option is not available. -MGR::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>1057720</record_id>
    <processid>BEECC975-09</processid>
    <bin_uri>BOLD:AAC5803</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2743</sampleid>
      <catalognum>BBSL622975</catalognum>
      <fieldnum>05-CA-2743</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204035</taxID>
          <name>Osmia giffardi</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.8 mi SSW Ostrander Rocks</exactsite>
      <coordinates>
        <lat>37.666</lat>
        <lon>-119.604</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650673</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2743+1263589972.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057728</record_id>
    <processid>BEECC983-09</processid>
    <bin_uri>BOLD:ABY6391</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2751</sampleid>
      <catalognum>BBSL545605</catalognum>
      <fieldnum>04-CA-2751</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>95794</taxID>
          <name>Osmia exigua</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Miguel Mdw, 2.9 WNW Dam</exactsite>
      <coordinates>
        <lat>37.963</lat>
        <lon>-119.838</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650681</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2751+1263590188.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057739</record_id>
    <processid>BEECC994-09</processid>
    <bin_uri>BOLD:AAI1803</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2762</sampleid>
      <catalognum>BBSL553287</catalognum>
      <fieldnum>04-CA-2762</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198197</taxID>
          <name>Osmia austromaritima</name>
          <reference>Michener, 1936</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.4 mi NWbyW Miguel Mdw Rngr Sta</exactsite>
      <coordinates>
        <lat>37.972</lat>
        <lon>-119.863</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650692</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2762+1263590450.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>946373</record_id>
    <processid>BOFWM072-08</processid>
    <bin_uri>BOLD:AAF0589</bin_uri>
    <specimen_identifiers>
      <sampleid>CCDB-00601 F12</sampleid>
      <fieldnum>CCDB-00601 F12</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ricardo Ayala</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>183587</taxID>
          <name>Osmia aliciae</name>
          <reference>Ayala &amp; Griswold, 2005</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Laurence Packer</collectors>
      <country>Mexico</country>
      <province_state>Jalisco</province_state>
      <region>20 km N Atemajac de Brizuelas</region>
      <coordinates>
        <lat>20.4019</lat>
        <lon>-104.139</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>624634</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Packer Collection at York University</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Packer Collection at York University</photographer>
        <image_file>http://www.boldsystems.org/pics/BOFWM/00601-F12+1262793246.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>5771534</record_id>
    <processid>CNTIC6240-15</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG20806-B05</sampleid>
      <catalognum>BIOUG20806-B05</catalognum>
      <fieldnum>GMP#03790</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Thousand Islands NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>M.Brown</collectors>
      <collection_note>Shoreline transition area (from emergent typha marsh to mixed forest edge); T1</collection_note>
      <site_code>BIOUG:STLAW-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Thousand Islands National Park</region>
      <coordinates>
        <lat>44.453</lat>
        <lon>-75.865</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>91</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7200332</record_id>
    <processid>CRHII005-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-G12</sampleid>
      <catalognum>BIOUG30310-G12</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7221655</record_id>
    <processid>CRHII784-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-F12</sampleid>
      <catalognum>BIOUG30450-F12</catalognum>
      <fieldnum>L#16CRH-0040</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7222538</record_id>
    <processid>CRHIJ886-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30470-C05</sampleid>
      <catalognum>BIOUG30470-C05</catalognum>
      <fieldnum>L#16CRH-0043</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|control; grass, goldenrod</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 5</exactsite>
      <coordinates>
        <lat>43.4878</lat>
        <lon>-79.615</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>82</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289028</record_id>
    <processid>FBAPB667-09</processid>
    <bin_uri>BOLD:AAI1798</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02142</sampleid>
      <catalognum>BC ZSM HYM 02142</catalognum>
      <fieldnum>BC ZSM HYM 02142</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663005</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02142+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289045</record_id>
    <processid>FBAPB684-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02159</sampleid>
      <catalognum>BC ZSM HYM 02159</catalognum>
      <fieldnum>BC ZSM HYM 02159</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Switzerland</country>
      <province_state>Ticino</province_state>
      <region>Vallemaggia</region>
      <exactsite>Robiei</exactsite>
      <coordinates>
        <lat>46.4</lat>
        <lon>8.6</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2200</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663022</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02159+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709621</record_id>
    <processid>FBAPC355-10</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05960</sampleid>
      <catalognum>BC ZSM HYM 05960</catalognum>
      <fieldnum>BC ZSM HYM 05960</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <region>Niederbayern</region>
      <exactsite>Velden</exactsite>
      <coordinates>
        <lat>48.361</lat>
        <lon>12.243</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>456</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189821</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05960+1309188394.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709636</record_id>
    <processid>FBAPC370-10</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05975</sampleid>
      <catalognum>BC ZSM HYM 05975</catalognum>
      <fieldnum>BC ZSM HYM 05975</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Croatia</country>
      <region>Insel Rab, Dalmatia</region>
      <exactsite>Lopar</exactsite>
      <coordinates>
        <lat>44.826</lat>
        <lon>14.729</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>10</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189836</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05975+1309188376.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709638</record_id>
    <processid>FBAPC372-10</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05977</sampleid>
      <catalognum>BC ZSM HYM 05977</catalognum>
      <fieldnum>BC ZSM HYM 05977</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Saint-Pierre</exactsite>
      <coordinates>
        <lat>45.709</lat>
        <lon>7.23</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>710</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189838</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05977+1309188374.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083175</record_id>
    <processid>FBAPD121-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08766</sampleid>
      <catalognum>BC ZSM HYM 08766</catalognum>
      <fieldnum>BC ZSM HYM 08766</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, Vogelsangpass</exactsite>
      <coordinates>
        <lat>48.087</lat>
        <lon>7.692</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243850</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08766+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083177</record_id>
    <processid>FBAPD123-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08768</sampleid>
      <catalognum>BC ZSM HYM 08768</catalognum>
      <fieldnum>BC ZSM HYM 08768</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, Vogelsangpass</exactsite>
      <coordinates>
        <lat>48.087</lat>
        <lon>7.692</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>380</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243852</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08768+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133851</record_id>
    <processid>FBHAP299-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00394</sampleid>
      <catalognum>BC ZSM HYM 00394</catalognum>
      <fieldnum>BC ZSM HYM 00394</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>changed from bicolor (JS, 06.2010)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Heuberg</exactsite>
      <coordinates>
        <lat>49.031</lat>
        <lon>10.999</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>470</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497295</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00394+1244555724.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:changed from bicolor to bicornis (JS, 06.2010) ::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>1133872</record_id>
    <processid>FBHAP320-09</processid>
    <bin_uri>BOLD:AAE5490</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00415</sampleid>
      <catalognum>BC ZSM HYM 00415</catalognum>
      <fieldnum>BC ZSM HYM 00415</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214252</taxID>
          <name>Osmia parietina</name>
          <reference>Curtis, 1828</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Schuberth</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Muenchen, Neuperlach</exactsite>
      <coordinates>
        <lat>48.1</lat>
        <lon>11.65</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>550</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497316</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00415+1243550820.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133880</record_id>
    <processid>FBHAP328-09</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00423</sampleid>
      <catalognum>BC ZSM HYM 00423</catalognum>
      <fieldnum>BC ZSM HYM 00423</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Auf der Brand, FS, KEH</exactsite>
      <coordinates>
        <lat>48.964</lat>
        <lon>11.766</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>520</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497324</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00423+1243550820.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from Osmia (JS 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>856415</record_id>
    <processid>GBAH3884-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726623</sampleid>
      <catalognum>EU726623</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856417</record_id>
    <processid>GBAH3886-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726621</sampleid>
      <catalognum>EU726621</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856449</record_id>
    <processid>GBAH3918-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726589</sampleid>
      <catalognum>EU726589</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856453</record_id>
    <processid>GBAH3922-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726585</sampleid>
      <catalognum>EU726585</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616530</record_id>
    <processid>GBAH7412-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583336</sampleid>
      <catalognum>KC583336</catalognum>
      <fieldnum>KC583336</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3170147</record_id>
    <processid>GBMIN13917-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>JQ677595</sampleid>
      <catalognum>ETHZ 2</catalognum>
      <fieldnum>JQ677595</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornuta</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417836</record_id>
    <processid>GBMIN78100-17</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KX374763</sampleid>
      <fieldnum>KX374763</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417837</record_id>
    <processid>GBMIN78101-17</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KX374764</sampleid>
      <fieldnum>KX374764</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417842</record_id>
    <processid>GBMIN78106-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX374769</sampleid>
      <fieldnum>KX374769</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417850</record_id>
    <processid>GBMIN78114-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957866</sampleid>
      <fieldnum>KX957866</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417854</record_id>
    <processid>GBMIN78118-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957865</sampleid>
      <fieldnum>KX957865</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417858</record_id>
    <processid>GBMIN78122-17</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>KT123239</sampleid>
      <fieldnum>KT123239</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5247698</record_id>
    <processid>GMGMK360-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17175-H07</sampleid>
      <catalognum>BIOUG17175-H07</catalognum>
      <fieldnum>GMP#06026</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>569</record_id>
    <processid>HCBNS182-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee97</sampleid>
      <catalognum>CSS#172</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Kentville</sector>
      <coordinates>
        <lat>45.063</lat>
        <lon>-64.488</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>407</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS182-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>572</record_id>
    <processid>HCBNS185-03</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee112</sampleid>
      <fieldnum>Bee112</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Wolfville</sector>
      <coordinates>
        <lat>45.087</lat>
        <lon>-64.667</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>410</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS185-03b.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4835</record_id>
    <processid>HDBNS092-03</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c92</sampleid>
      <catalognum>sheff-c92</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Weston</sector>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3717</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffC-92_photo_a.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6532884</record_id>
    <processid>POBGA1098-15</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG25747-A01</sampleid>
      <catalognum>BIOUG25747-A01</catalognum>
      <fieldnum>GMP#04699</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <extrainfo>Port of Montreal</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Maxim Larrivee</collectors>
      <collection_note>Malaise traps 40m apart; Trap 2</collection_note>
      <site_code>BIOUG:MONBOT</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Quebec</province_state>
      <region>Montreal</region>
      <sector>Montreal Botanical Garden</sector>
      <exactsite>Trap 2</exactsite>
      <coordinates>
        <lat>45.5594</lat>
        <lon>-73.5668</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>52</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>6295925</record_id>
    <processid>SRIRP002-15</processid>
    <bin_uri>BOLD:ACW6667</bin_uri>
    <specimen_identifiers>
      <sampleid>SRFS-1</sampleid>
      <catalognum>SRFS-1</catalognum>
      <fieldnum>SRFS-1</fieldnum>
      <institution_storing>Coastal Marine Biolabs</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Ruben Alarcon</identification_provided_by>
      <identification_method>barcode</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96584</taxID>
          <name>Osmia trevoris</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>To be vouchered (holdup/private)</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
      <tissue_type>abdomen</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>Cause Hanna</collectors>
      <site_code>3N PAN</site_code>
      <sampling_protocol>pan trap</sampling_protocol>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Rosa Island</region>
      <coordinates>
        <lat>33.9481</lat>
        <lon>-120.111</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>466.52</elev>
    </collection_event>
    <notes>&lt;![CDATA[Sean Min, Noah Eckman]]&gt;</notes>
  </record>
  <record>
    <record_id>6318389</record_id>
    <processid>SSGLA5003-15</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG24599-A12</sampleid>
      <catalognum>BIOUG24599-A12</catalognum>
      <fieldnum>L#14BIOBUS-0594</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Glacier NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2014</collectors>
      <collection_note>10 Pan Traps|Warm and sunny|Seasonal stream bed, grasses and shrubs, rocky soil</collection_note>
      <sampling_protocol>Pan trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Glacier National Park</region>
      <exactsite>Beaver Valley Trail</exactsite>
      <coordinates>
        <lat>51.361</lat>
        <lon>-117.429</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>865</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>6318399</record_id>
    <processid>SSGLA5013-15</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG24599-B10</sampleid>
      <catalognum>BIOUG24599-B10</catalognum>
      <fieldnum>L#14BIOBUS-0594</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Glacier NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2014</collectors>
      <collection_note>10 Pan Traps|Warm and sunny|Seasonal stream bed, grasses and shrubs, rocky soil</collection_note>
      <sampling_protocol>Pan trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Glacier National Park</region>
      <exactsite>Beaver Valley Trail</exactsite>
      <coordinates>
        <lat>51.361</lat>
        <lon>-117.429</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>865</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3095116</record_id>
    <processid>SSWLA023-13</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04237-D02</sampleid>
      <catalognum>BIOUG04237-D02</catalognum>
      <fieldnum>L#12BIOBUS-0654</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|Mostly cloudy, Windy, 10C|montane forest, douglas fir and lodgepole pine stand with aspen and birch understory</collection_note>
      <site_code>BIOUG:WATERTON-NP:2</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>East of 2 Flags Lookout</sector>
      <exactsite>Highway 6 pulloff</exactsite>
      <coordinates>
        <lat>49.065</lat>
        <lon>-113.779</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1569</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3788372</record_id>
    <processid>SSWLE2271-13</processid>
    <bin_uri>BOLD:ABY7571</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG08079-F12</sampleid>
      <catalognum>BIOUG08079-F12</catalognum>
      <fieldnum>L#12BIOBUS-1619</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265238</taxID>
          <name>Osmia pulsatillae</name>
          <reference>Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|Overcast, 19C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:5</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.088</lat>
        <lon>-113.883</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1328</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2312024</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2014</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSWLE/bioug008079-f12+1399382390.jpg</image_file>
      </media>
      <media>
        <mediaID>2831893</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSWLE/BIOUG08079-F12+1457362258.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Aug 11, 2 pans found tipped over]]&gt;</notes>
  </record>
  <record>
    <record_id>970667</record_id>
    <processid>TTHYW397-08</processid>
    <bin_uri>BOLD:AAI1801</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0364</sampleid>
      <catalognum>08BBHYM-0364</catalognum>
      <fieldnum>L#08BANFF-071</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>272732</taxID>
          <name>Osmia bc3</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed Habitat</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting||Marsh, aspen wood</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff NP</region>
      <sector>Near Carrot Creek</sector>
      <coordinates>
        <lat>51.148</lat>
        <lon>-115.42</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1379</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371012</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_8943+1231438826.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1051039</record_id>
    <processid>UPOLB650-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20080522-007</sampleid>
      <fieldnum>G1Y May 19 -22 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8115255</record_id>
    <processid>ABEE076-17</processid>
    <bin_uri>BOLD:ADH8891</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 18</sampleid>
      <catalognum>NHMW-HYM 18</catalognum>
      <fieldnum>Zimmermann 06.06.2016</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>identification key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>696831</taxID>
          <name>Osmia ligurica</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>vouchered: registered collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Zimmermann Dominique</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>NBH1 Nordbahnhof</exactsite>
      <coordinates>
        <lat>48.2259</lat>
        <lon>16.3938</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>3162447</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000018_La2+1500053658.jpg</image_file>
      </media>
      <media>
        <mediaID>3162445</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000018_Os+1500053660.jpg</image_file>
      </media>
      <media>
        <mediaID>3162443</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000018_Oo+1500053660.jpg</image_file>
      </media>
      <media>
        <mediaID>3162444</mediaID>
        <media_descriptor>Frontal</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000018_Of+1500053658.jpg</image_file>
      </media>
      <media>
        <mediaID>3162446</mediaID>
        <media_descriptor>labels</media_descriptor>
        <copyright>
          <copyright_year>2017</copyright_year>
          <copyright_license>CreativeCommons  Attribution Non-Commercial (by-nc)</copyright_license>
          <copyright_institution>Natural History Museum Vienna</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/ABEE/NHMW-HYM0000018_La1+1500053658.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>8362289</record_id>
    <processid>ABEE190-17</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMW-HYM 2259</sampleid>
      <catalognum>NHMW-HYM 2259</catalognum>
      <fieldnum>NBH9 Schoder 2017.06.15 Oesterreich WienAUTWienSchoder</fieldnum>
      <institution_storing>Naturhistorisches Museum, Wien</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Herbert Zettel</identification_provided_by>
      <identification_method>key</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered: Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schoder Sabine</collectors>
      <country>Austria</country>
      <province_state>Vienna</province_state>
      <exactsite>Nordbahnhof 1020 Wien</exactsite>
      <coordinates>
        <lat>48.2166</lat>
        <lon>16.3833</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1769804</record_id>
    <processid>BBHYL361-10</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3315</sampleid>
      <catalognum>10BBCHY-3315</catalognum>
      <fieldnum>L#PC2010GR-153</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Forest</habitat>
      <extrainfo>Glacier NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>10 Yellow Pan Traps||Riverside forest</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Glacier NP</region>
      <sector>Loop Trail</sector>
      <coordinates>
        <lat>51.254</lat>
        <lon>-117.538</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1140</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992587</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6563+1294953530.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1769806</record_id>
    <processid>BBHYL363-10</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3317</sampleid>
      <catalognum>10BBCHY-3317</catalognum>
      <fieldnum>L#PC2010YO-001</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Forest</habitat>
      <extrainfo>Yoho NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>Free Hand|Partly cloudy, Warm|Forested campground</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Yoho NP</region>
      <sector>Kicking Horse Campground</sector>
      <coordinates>
        <lat>51.424</lat>
        <lon>-116.429</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1317</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992589</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6569+1294951684.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1769808</record_id>
    <processid>BBHYL365-10</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3319</sampleid>
      <catalognum>10BBCHY-3319</catalognum>
      <fieldnum>L#PC2010YO-150</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Riparian Zone</habitat>
      <extrainfo>Yoho NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>Free Hand|Scattered showers|Lake perimeter</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Yoho NP</region>
      <sector>Emerald Lake Trails</sector>
      <coordinates>
        <lat>51.443</lat>
        <lon>-116.542</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1307</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992591</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6572+1294951750.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4005340</record_id>
    <processid>BCHYM1491-13</processid>
    <bin_uri>BOLD:AAK6070</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19351</sampleid>
      <catalognum>BC ZSM HYM 19351</catalognum>
      <fieldnum>BC ZSM HYM 19351</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Saxony-Anhalt</province_state>
      <exactsite>Quellendorf</exactsite>
      <coordinates>
        <lat>51.75</lat>
        <lon>12.127</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>69</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185444</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19351+1382029532.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281154</record_id>
    <processid>BEECA124-06</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0124</sampleid>
      <fieldnum>04-ON-0124</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Malaise trap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>A. Bennett, D. Barnes</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <exactsite>N. Gower to Smiths Falls, 1km N of city Rd 6 &amp; Mon</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281198</record_id>
    <processid>BEECA168-06</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0168</sampleid>
      <fieldnum>03-BC-0168</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>281215</record_id>
    <processid>BEECA185-06</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>03-BC-0185</sampleid>
      <fieldnum>03-BC-0185</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554158</record_id>
    <processid>BEECA968-07</processid>
    <bin_uri>BOLD:AAC5795</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0795</sampleid>
      <fieldnum>01-OR-0795</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265228</taxID>
          <name>Osmia pentstemonis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706474</record_id>
    <processid>BEECB1078-07</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>07-MB-1699</sampleid>
      <fieldnum>07-MB-1699</fieldnum>
      <institution_storing>University of Manitoba</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A.M. Patenaude</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <exactsite>nr Pine Falls</exactsite>
      <coordinates>
        <lat>50.468</lat>
        <lon>-96.033</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596901</record_id>
    <processid>BEECB339-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1057</sampleid>
      <catalognum>BBSL697169</catalognum>
      <fieldnum>04-WA-1057</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>1.5 mi SSW Corral Butte</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268548</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596909</record_id>
    <processid>BEECB347-07</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1065</sampleid>
      <catalognum>BBSL696877</catalognum>
      <fieldnum>04-WA-1065</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Long Swamp</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268556</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_subaustralis_Male_Lat+1205191006.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596918</record_id>
    <processid>BEECB356-07</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1074</sampleid>
      <catalognum>BBSL696761</catalognum>
      <fieldnum>04-WA-1074</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.8 mi W Tiffany Lake</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596994</record_id>
    <processid>BEECB432-07</processid>
    <bin_uri>BOLD:AAD6172</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1151</sampleid>
      <catalognum>ZION24047</catalognum>
      <fieldnum>06-UT-1151</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96617</taxID>
          <name>Osmia kincaidii</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597015</record_id>
    <processid>BEECB453-07</processid>
    <bin_uri>BOLD:AAF2158</bin_uri>
    <specimen_identifiers>
      <sampleid>06-CA-1172</sampleid>
      <catalognum>YOSE169425</catalognum>
      <fieldnum>06-CA-1172</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84710</taxID>
          <name>Osmia cobaltina</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597054</record_id>
    <processid>BEECB492-07</processid>
    <bin_uri>BOLD:AAD0302</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1210</sampleid>
      <fieldnum>07-ID-1210</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96618</taxID>
          <name>Osmia calla</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597063</record_id>
    <processid>BEECB501-07</processid>
    <bin_uri>BOLD:AAE5486</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1219</sampleid>
      <fieldnum>07-WA-1219</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96623</taxID>
          <name>Osmia regulina</name>
          <reference>Cockerell, 1911</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597068</record_id>
    <processid>BEECB506-07</processid>
    <bin_uri>BOLD:AAD0302</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1224</sampleid>
      <fieldnum>07-ID-1224</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96618</taxID>
          <name>Osmia calla</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>612381</record_id>
    <processid>BEECB606-07</processid>
    <bin_uri>BOLD:ACE6161</bin_uri>
    <specimen_identifiers>
      <sampleid>07-ID-1323</sampleid>
      <fieldnum>07-ID-1323</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204362</taxID>
          <name>Osmia sanrafaelae</name>
          <reference>Parker, 1985</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Idaho</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060873</record_id>
    <processid>BEECC1170-09</processid>
    <bin_uri>BOLD:ABX5180</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2843</sampleid>
      <catalognum>BBSL481721</catalognum>
      <fieldnum>03-UT-2843</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Higbee, Stacy</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Long Canyon</exactsite>
      <coordinates>
        <lat>37.914</lat>
        <lon>-111.251</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060882</record_id>
    <processid>BEECC1179-09</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2852</sampleid>
      <catalognum>BBSL483065</catalognum>
      <fieldnum>03-UT-2852</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Tolliver, Jillian</collectors>
      <country>United States</country>
      <province_state>Arizona</province_state>
      <exactsite>Quartzite, 10 mi W</exactsite>
      <coordinates>
        <lat>33.64</lat>
        <lon>-114.385</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>844607</record_id>
    <processid>BEECC244-08</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CO-1916</sampleid>
      <catalognum>USGSDRO033978</catalognum>
      <fieldnum>04-CO-1916</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Colorado</province_state>
      <region>Jackson Co.</region>
      <coordinates>
        <lat>40.602</lat>
        <lon>-106.073</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844619</record_id>
    <processid>BEECC256-08</processid>
    <bin_uri>BOLD:AAD0288</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1928</sampleid>
      <fieldnum>07-BC-1928</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204356</taxID>
          <name>Osmia atrocyanea</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>vane trap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>G.G.E. Scudder</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <exactsite>East Beach</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>953355</record_id>
    <processid>BEECC468-08</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-2141</sampleid>
      <catalognum>PYU-3221</catalognum>
      <fieldnum>07-WA-2141</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Gibbs and C. Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Lewis Co.</region>
      <sector>5 km S Packwood</sector>
      <exactsite>Hwy 12</exactsite>
      <coordinates>
        <lat>46.571</lat>
        <lon>-121.7</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>329</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1011058</record_id>
    <processid>BEECC879-09</processid>
    <bin_uri>BOLD:AAC8498</bin_uri>
    <specimen_identifiers>
      <sampleid>03-UT-2457</sampleid>
      <catalognum>BBSL514281</catalognum>
      <fieldnum>03-UT-2457</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204359</taxID>
          <name>Osmia cockerelli</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Higbee, Stacy</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Hardhead Water Spr., 3.0 mi SSE</exactsite>
      <coordinates>
        <lat>37.468</lat>
        <lon>-111.534</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650415</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2457+1263585146.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:old identification was O. alpestris::endTaxonomy:No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057695</record_id>
    <processid>BEECC950-09</processid>
    <bin_uri>BOLD:AAI1731</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-2718</sampleid>
      <catalognum>BBSL622272</catalognum>
      <fieldnum>05-CA-2718</fieldnum>
      <institution_storing>United States Department of Agriculture, ARS, Systematic Entomology Laboratory</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204026</taxID>
          <name>Osmia caraformis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Stephens, Erica</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Mariposa Co.</region>
      <exactsite>1.9 mi SE Ostrander Rocks</exactsite>
      <coordinates>
        <lat>37.672</lat>
        <lon>-119.569</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650648</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2718+1263589892.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057700</record_id>
    <processid>BEECC955-09</processid>
    <bin_uri>BOLD:AAC3294</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2723</sampleid>
      <catalognum>BBSL559678</catalognum>
      <fieldnum>04-CA-2723</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204027</taxID>
          <name>Osmia densa</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Merced Lk Tr, .5 mi NE Bunnel Pt</exactsite>
      <coordinates>
        <lat>37.745</lat>
        <lon>-119.461</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650653</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2723+1263590046.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Lotus nevadensis]]&gt;</notes>
  </record>
  <record>
    <record_id>1057712</record_id>
    <processid>BEECC967-09</processid>
    <bin_uri>BOLD:AAC5795</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2735</sampleid>
      <catalognum>BBSL568064</catalognum>
      <fieldnum>04-CA-2735</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265228</taxID>
          <name>Osmia pentstemonis</name>
          <reference>Cockerell, 1906</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.0 mi SEbyS Gaylor Peak</exactsite>
      <coordinates>
        <lat>37.908</lat>
        <lon>-119.256</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650665</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2735+1263590088.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057742</record_id>
    <processid>BEECC997-09</processid>
    <bin_uri>BOLD:AAE5481</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2765</sampleid>
      <catalognum>BBSL546688</catalognum>
      <fieldnum>04-CA-2765</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>156081</taxID>
          <name>Osmia glauca</name>
          <reference>Fowler, 1899</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, fluor. Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Ikerd, Harold --Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Foresta Rd, 1.9mi SW Eagle Pk</exactsite>
      <coordinates>
        <lat>37.667</lat>
        <lon>-119.81</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650695</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2765+1263590294.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>5983221</record_id>
    <processid>BEEEE071-15</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970403</sampleid>
      <catalognum>BMNH(E)#970403</catalognum>
      <fieldnum>BMNH(E)#970403</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <tissue_type>Leg</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: TQ376762</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>London</region>
      <sector>Lewisham</sector>
      <coordinates>
        <lat>51.468</lat>
        <lon>-0.02</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: London: Lewisham: TQ376762: 10.v.2015: D.Notton: leg. D.G.Notton BMNH-ENT-2015-89: m Osmia caerulescens det. D.Notton, 2015: BMNH(E)#970403]]&gt;</notes>
  </record>
  <record>
    <record_id>56014</record_id>
    <processid>BUSA235-05</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>32560</sampleid>
      <catalognum>32560</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sam W. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Sam W. Droege</collectors>
      <country>United States</country>
      <province_state>West Virginia</province_state>
      <region>Hampshire</region>
      <coordinates>
        <lat>39.351</lat>
        <lon>-78.5087</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>31238</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BUSA/IMG_2928.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>5548237</record_id>
    <processid>CNRVB048-15</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG19254-D11</sampleid>
      <catalognum>BIOUG19254-D11</catalognum>
      <fieldnum>GMP#05044</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Mount Revelstoke NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>S.Devita</collectors>
      <collection_note>2 Malaise traps|coniferous forest close to cliff edge</collection_note>
      <site_code>BIOUG:REVEL-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Mount Revelstoke National Park</region>
      <sector>Off trail behind old staff housing</sector>
      <coordinates>
        <lat>51.018</lat>
        <lon>-118.205</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>608</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7209502</record_id>
    <processid>CRHII267-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-C01</sampleid>
      <catalognum>BIOUG30420-C01</catalognum>
      <fieldnum>L#16CRH-0011</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>1 Intercept trap|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7209504</record_id>
    <processid>CRHII269-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30420-C03</sampleid>
      <catalognum>BIOUG30420-C03</catalognum>
      <fieldnum>L#16CRH-0011</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>1 Intercept trap|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289032</record_id>
    <processid>FBAPB671-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02146</sampleid>
      <catalognum>BC ZSM HYM 02146</catalognum>
      <fieldnum>BC ZSM HYM 02146</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265267</taxID>
          <name>Osmia brevicornis</name>
          <reference>Fabricius, 1798</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Hungary</country>
      <region>Veszprem</region>
      <exactsite>Balatonfuered</exactsite>
      <coordinates>
        <lat>46.9</lat>
        <lon>17.9</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>150</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663009</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02146+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289039</record_id>
    <processid>FBAPB678-09</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02153</sampleid>
      <catalognum>BC ZSM HYM 02153</catalognum>
      <fieldnum>BC ZSM HYM 02153</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Karlsruhe</exactsite>
      <coordinates>
        <lat>49</lat>
        <lon>8.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>110</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663016</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02153+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289041</record_id>
    <processid>FBAPB680-09</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02155</sampleid>
      <catalognum>BC ZSM HYM 02155</catalognum>
      <fieldnum>BC ZSM HYM 02155</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Stromberg, Ochsenbach</exactsite>
      <coordinates>
        <lat>49.01</lat>
        <lon>9</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663018</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02155+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289046</record_id>
    <processid>FBAPB685-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02160</sampleid>
      <catalognum>BC ZSM HYM 02160</catalognum>
      <fieldnum>BC ZSM HYM 02160</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Switzerland</country>
      <province_state>Ticino</province_state>
      <region>Vallemaggia</region>
      <exactsite>Robiei</exactsite>
      <coordinates>
        <lat>46.4</lat>
        <lon>8.6</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2200</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663023</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02160+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289069</record_id>
    <processid>FBAPB708-09</processid>
    <bin_uri>BOLD:AAE4127</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02183</sampleid>
      <catalognum>BC ZSM HYM 02183</catalognum>
      <fieldnum>BC ZSM HYM 02183</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Veneto</province_state>
      <exactsite>Verona, Monte</exactsite>
      <coordinates>
        <lat>45.56</lat>
        <lon>10.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>450</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663046</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02183+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140528</record_id>
    <processid>FBAPD317-11</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07727</sampleid>
      <catalognum>BC ZSM HYM 07727</catalognum>
      <fieldnum>BC ZSM HYM 07727</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 23 km S Cadiz, Chiclanca, E-cad 1</exactsite>
      <coordinates>
        <lat>36.5</lat>
        <lon>-6.12</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310870</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07727+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140530</record_id>
    <processid>FBAPD319-11</processid>
    <bin_uri>BOLD:AAZ7870</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07729</sampleid>
      <catalognum>BC ZSM HYM 07729</catalognum>
      <fieldnum>BC ZSM HYM 07729</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>396028</taxID>
          <name>Osmia latreillei</name>
          <reference>Spinola, 1806</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km, SW Sevilla, W Matalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310872</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07729+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133853</record_id>
    <processid>FBHAP301-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00396</sampleid>
      <catalognum>BC ZSM HYM 00396</catalognum>
      <fieldnum>BC ZSM HYM 00396</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Voith</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>GAP, Friedergries</exactsite>
      <coordinates>
        <lat>47.49</lat>
        <lon>10.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>900</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497297</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00396+1244555742.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912233</record_id>
    <processid>GBACU1879-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14229</sampleid>
      <catalognum>BC ZSM HYM 14229</catalognum>
      <fieldnum>BC ZSM HYM 14229</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Veitshoechheim Ravensburg</exactsite>
      <coordinates>
        <lat>49.85</lat>
        <lon>9.86</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>264</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834225</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14229+1449672346.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912237</record_id>
    <processid>GBACU1883-12</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14233</sampleid>
      <catalognum>BC ZSM HYM 14233</catalognum>
      <fieldnum>BC ZSM HYM 14233</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bickensohl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.66</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>422</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834229</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14233+1449672346.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856439</record_id>
    <processid>GBAH3908-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726599</sampleid>
      <catalognum>EU726599</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856456</record_id>
    <processid>GBAH3925-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726582</sampleid>
      <catalognum>EU726582</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856462</record_id>
    <processid>GBAH3931-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726576</sampleid>
      <catalognum>EU726576</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856463</record_id>
    <processid>GBAH3932-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726575</sampleid>
      <catalognum>EU726575</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856466</record_id>
    <processid>GBAH3935-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726572</sampleid>
      <catalognum>EU726572</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616539</record_id>
    <processid>GBAH7421-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583327</sampleid>
      <catalognum>KC583327</catalognum>
      <fieldnum>KC583327</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3174334</record_id>
    <processid>GBMIN18104-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135988</sampleid>
      <catalognum>ADU071</catalognum>
      <fieldnum>KC135988</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>5220486</record_id>
    <processid>GMGMH1481-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-C10</sampleid>
      <catalognum>BIOUG17018-C10</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>5220496</record_id>
    <processid>GMGMH1491-14</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG17018-D08</sampleid>
      <catalognum>BIOUG17018-D08</catalognum>
      <fieldnum>GMP#06023</fieldnum>
      <institution_storing>Zoologisches Forschungsmuseum Alexander Koenig</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
    </specimen_desc>
    <collection_event>
      <collectors>Rulik et al</collectors>
      <site_code>BIOUG:GERMANY</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Germany</country>
      <province_state>Rhineland-Palatinate</province_state>
      <region>Kreis Ahrweiler</region>
      <sector>Landskrone</sector>
      <coordinates>
        <lat>50.552</lat>
        <lon>7.17</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>194</elev>
    </collection_event>
    <notes>&lt;![CDATA[2 bottles]]&gt;</notes>
  </record>
  <record>
    <record_id>561</record_id>
    <processid>HCBNS174-03</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee71</sampleid>
      <fieldnum>Bee71</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Wolfville</sector>
      <coordinates>
        <lat>45.087</lat>
        <lon>-64.667</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>570</record_id>
    <processid>HCBNS183-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee101</sampleid>
      <catalognum>CSS#173</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Hortonville</sector>
      <coordinates>
        <lat>45.104</lat>
        <lon>-64.293</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>408</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS183-03b.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>571</record_id>
    <processid>HCBNS184-03</processid>
    <bin_uri>BOLD:AAE5495</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee104</sampleid>
      <catalognum>CSS#169</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21434</taxID>
          <name>Osmia lignaria</name>
          <reference>Say, 1837</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Kentville</sector>
      <coordinates>
        <lat>45.07</lat>
        <lon>-64.48</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>409</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS184-03b.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>6516</record_id>
    <processid>HDBNS217-04</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheffT-65</sampleid>
      <fieldnum>sheffT-65</fieldnum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>70301</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/sheffT-65+1141055430.jpg</image_file>
      </media>
      <media>
        <mediaID>5263</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/SHEFFT-65.JPG</image_file>
      </media>
      <media>
        <mediaID>5264</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HDBNS/EOS20D_2_SHEFFT-65.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1422992</record_id>
    <processid>JSYKA120-10</processid>
    <bin_uri>BOLD:AAL9209</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-026</sampleid>
      <fieldnum>L#JSYKB-026</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>462966</taxID>
          <name>Osmia maritima</name>
          <reference>Friese, 1885</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp1 *Unique from SC</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot01</exactsite>
      <coordinates>
        <lat>69.2672</lat>
        <lon>-140.251</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>253</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754246</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7915+1272292838.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1422999</record_id>
    <processid>JSYKA127-10</processid>
    <bin_uri>BOLD:AAL9210</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-033</sampleid>
      <fieldnum>L#JSYKB-033</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp1 *Unique from SC</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot01</exactsite>
      <coordinates>
        <lat>69.2672</lat>
        <lon>-140.251</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>253</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754253</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7922+1272292912.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423016</record_id>
    <processid>JSYKA144-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-050</sampleid>
      <fieldnum>L#JSYKB-050</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot14</exactsite>
      <coordinates>
        <lat>69.1686</lat>
        <lon>-140.205</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>289</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754270</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7940+1272293066.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>2495803</record_id>
    <processid>SDBEE281-12</processid>
    <bin_uri>BOLD:ABW3875</bin_uri>
    <specimen_identifiers>
      <sampleid>KJH.1310</sampleid>
      <fieldnum>KJH.1310</fieldnum>
      <institution_storing>University of California, San Diego</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297356</taxID>
          <name>Osmia granulosa</name>
          <reference>Cockerell, 1911</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. James Hung</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>San Diego</region>
      <sector>Spring Valley</sector>
      <exactsite>SDNWR Otay-Sweetwater Unit</exactsite>
      <coordinates>
        <lat>32.7329</lat>
        <lon>-116.955</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>970752</record_id>
    <processid>TTHYW482-08</processid>
    <bin_uri>BOLD:AAI3428</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0449</sampleid>
      <catalognum>08BBHYM-0449</catalognum>
      <fieldnum>L#08WATL-150</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes NP</region>
      <sector>Bellevue</sector>
      <exactsite>South/east-facing alpine slope</exactsite>
      <coordinates>
        <lat>49.121</lat>
        <lon>-113.95</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2100</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371382</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Young-suk</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_9285+1231526798.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>970997</record_id>
    <processid>TTHYW727-08</processid>
    <bin_uri>BOLD:AAC8510</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0694</sampleid>
      <catalognum>08BBHYM-0694</catalognum>
      <fieldnum>L#08BNP-029</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85407</taxID>
          <name>Osmia subaustralis</name>
          <reference>Cockerell, 1900</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Riparian Zone</habitat>
      <extrainfo>Bruce Peninsula NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>daytime netting</collection_note>
      <site_code>BIOUG:BRUCE-NP</site_code>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Bruce Peninsula National Park</region>
      <sector>Bruce Peninsula</sector>
      <exactsite>Horse Lake Shore</exactsite>
      <coordinates>
        <lat>45.24</lat>
        <lon>-81.52</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>251</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>378150</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_9407+1232562676.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3955535</record_id>
    <processid>ASGCB258-13</processid>
    <bin_uri>BOLD:AAC0884</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG07489-F07</sampleid>
      <fieldnum>BIOUG07489-F07</fieldnum>
      <institution_storing>Biodiversity Institute of Ontario</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2172463</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_22_s_Dorsal+1383686224.jpg</image_file>
      </media>
      <media>
        <mediaID>2172464</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Caitlin Paterson</copyright_holder>
          <copyright_year>2013</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Caitlin Paterson</photographer>
        <image_file>http://www.boldsystems.org/pics/ASGCB/Osmia2_22_s_Lateral+1383686226.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1769720</record_id>
    <processid>BBHYL277-10</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3231</sampleid>
      <catalognum>10BBCHY-3231</catalognum>
      <fieldnum>L#PC2010PA-068</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Prince Albert</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <country>Canada</country>
      <province_state>Saskatchewan</province_state>
      <region>Prince Albert National Park</region>
      <sector>Sturgeon Crossing</sector>
      <exactsite>Aspen forest</exactsite>
      <coordinates>
        <lat>53.73</lat>
        <lon>-106.722</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>518</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1013245</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Spencer Walker</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_8746+1295993248.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Partly cloudy Freehand Sampling]]&gt;</notes>
  </record>
  <record>
    <record_id>4005345</record_id>
    <processid>BCHYM1496-13</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19356</sampleid>
      <catalognum>BC ZSM HYM 19356</catalognum>
      <fieldnum>BC ZSM HYM 19356</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Kallmuenz</exactsite>
      <coordinates>
        <lat>49.162</lat>
        <lon>11.959</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>336</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185450</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19356+1382030106.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281196</record_id>
    <processid>BEECA166-06</processid>
    <bin_uri>BOLD:ABZ3184</bin_uri>
    <specimen_identifiers>
      <sampleid>04-BC-0166</sampleid>
      <fieldnum>04-BC-0166</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85428</taxID>
          <name>Osmia dolerosa</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516952</record_id>
    <processid>BEECA600-06</processid>
    <bin_uri>BOLD:AAE5477</bin_uri>
    <specimen_identifiers>
      <sampleid>00-BC-0600</sampleid>
      <fieldnum>00-BC-0600</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>686302</taxID>
          <name>Osmia sedula</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516956</record_id>
    <processid>BEECA604-06</processid>
    <bin_uri>BOLD:ABZ0288</bin_uri>
    <specimen_identifiers>
      <sampleid>06-YT-0604</sampleid>
      <fieldnum>06-YT-0604</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85427</taxID>
          <name>Osmia tristella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>554154</record_id>
    <processid>BEECA964-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>01-OR-0791</sampleid>
      <fieldnum>01-OR-0791</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>706476</record_id>
    <processid>BEECB1080-07</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>07-MB-1701</sampleid>
      <fieldnum>07-MB-1701</fieldnum>
      <institution_storing>University of Manitoba</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A.M. Patenaude</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <exactsite>nr Pine Falls</exactsite>
      <coordinates>
        <lat>50.468</lat>
        <lon>-96.033</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596905</record_id>
    <processid>BEECB343-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1061</sampleid>
      <catalognum>BBSL697388</catalognum>
      <fieldnum>04-WA-1061</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Salmon Meadows</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268544</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>597001</record_id>
    <processid>BEECB439-07</processid>
    <bin_uri>BOLD:AAF2158</bin_uri>
    <specimen_identifiers>
      <sampleid>06-UT-1158</sampleid>
      <catalognum>ZION23474</catalognum>
      <fieldnum>06-UT-1158</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96620</taxID>
          <name>Osmia bella</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597007</record_id>
    <processid>BEECB445-07</processid>
    <bin_uri>BOLD:AAE5486</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1164</sampleid>
      <catalognum>BBSL618232</catalognum>
      <fieldnum>05-CA-1164</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96623</taxID>
          <name>Osmia regulina</name>
          <reference>Cockerell, 1911</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>597013</record_id>
    <processid>BEECB451-07</processid>
    <bin_uri>BOLD:AAE5368</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-1170</sampleid>
      <catalognum>BBSL442588</catalognum>
      <fieldnum>02-UT-1170</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96625</taxID>
          <name>Osmia anasazi</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>612306</record_id>
    <processid>BEECB531-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1248</sampleid>
      <fieldnum>07-BC-1248</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>612365</record_id>
    <processid>BEECB590-07</processid>
    <bin_uri>BOLD:ABX5180</bin_uri>
    <specimen_identifiers>
      <sampleid>07-OR-1307</sampleid>
      <fieldnum>07-OR-1307</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Oregon</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688025</record_id>
    <processid>BEECB735-07</processid>
    <bin_uri>BOLD:AAE5464</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1358</sampleid>
      <catalognum>PYU-1359</catalognum>
      <fieldnum>07-WA-1358</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204364</taxID>
          <name>Osmia cyanella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Yakima Co.</region>
      <exactsite>7 km W Naches</exactsite>
      <coordinates>
        <lat>46.737</lat>
        <lon>-120.791</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>501</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060934</record_id>
    <processid>BEECC1231-09</processid>
    <bin_uri>BOLD:AAE5493</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2904</sampleid>
      <catalognum>BBSL555236</catalognum>
      <fieldnum>04-CA-2904</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90381</taxID>
          <name>Osmia montana</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>204367</taxID>
          <name>Osmia montana quadriceps</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Ronda</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Foresta Rd, 0.6mi SbyW Eagle Pk</exactsite>
      <coordinates>
        <lat>37.683</lat>
        <lon>-119.791</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[Pholistoma auritum]]&gt;</notes>
  </record>
  <record>
    <record_id>844621</record_id>
    <processid>BEECC258-08</processid>
    <bin_uri>BOLD:AAD0288</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1930</sampleid>
      <fieldnum>07-BC-1930</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204356</taxID>
          <name>Osmia atrocyanea</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>vane trap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>G.G.E. Scudder</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <exactsite>East Beach</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>844644</record_id>
    <processid>BEECC281-08</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>05-MD-1953</sampleid>
      <catalognum>USGSDRO052434</catalognum>
      <fieldnum>05-MD-1953</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>Maryland</province_state>
      <region>Pr. George`s Co.</region>
      <coordinates>
        <lat>39.013</lat>
        <lon>-76.846</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1003234</record_id>
    <processid>BEECC719-09</processid>
    <bin_uri>BOLD:AAB8782</bin_uri>
    <specimen_identifiers>
      <sampleid>05-WY-2297</sampleid>
      <catalognum>BBSL588743</catalognum>
      <fieldnum>05-WY-2297</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96581</taxID>
          <name>Osmia brevis</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Parker, Frank</collectors>
      <country>United States</country>
      <province_state>Wyoming</province_state>
      <exactsite>White Mountains, Cottonwood Creek</exactsite>
      <coordinates>
        <lat>37.524</lat>
        <lon>-118.052</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650283</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2297+1263577176.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011057</record_id>
    <processid>BEECC878-09</processid>
    <bin_uri>BOLD:AAC8497</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2456</sampleid>
      <catalognum>BBSL459554</catalognum>
      <fieldnum>02-UT-2456</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198196</taxID>
          <name>Osmia unca</name>
          <reference>Michener, 1937</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Richmond, Jared</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Hwy 14, jct Hwy 148</exactsite>
      <coordinates>
        <lat>37.572</lat>
        <lon>-112.836</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650414</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2456+1263585138.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011065</record_id>
    <processid>BEECC886-09</processid>
    <bin_uri>BOLD:ABZ8178</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2464</sampleid>
      <catalognum>BBSL455978</catalognum>
      <fieldnum>02-UT-2464</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297351</taxID>
          <name>Osmia grinnelli</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Hawk, Jessica</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Canaan Peak, 3.6 mi NW</exactsite>
      <coordinates>
        <lat>37.647</lat>
        <lon>-111.844</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650422</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2464+1263585400.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1011066</record_id>
    <processid>BEECC887-09</processid>
    <bin_uri>BOLD:ABZ8178</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2465</sampleid>
      <catalognum>BBSL462901</catalognum>
      <fieldnum>02-UT-2465</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297351</taxID>
          <name>Osmia grinnelli</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Messinger,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Kitchen Corral Spr., 1.0 mi N</exactsite>
      <coordinates>
        <lat>37.23</lat>
        <lon>-112.116</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650423</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2465+1263585448.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1057741</record_id>
    <processid>BEECC996-09</processid>
    <bin_uri>BOLD:AAE5481</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2764</sampleid>
      <catalognum>BBSL554092</catalognum>
      <fieldnum>04-CA-2764</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>156081</taxID>
          <name>Osmia glauca</name>
          <reference>Fowler, 1899</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Ronda</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>1.2 mi WNW Kolana Rock</exactsite>
      <coordinates>
        <lat>37.96</lat>
        <lon>-119.78</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650694</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2764+1263590288.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Limnanthes alba]]&gt;</notes>
  </record>
  <record>
    <record_id>516711</record_id>
    <processid>CHUBE002-06</processid>
    <bin_uri>BOLD:AAD4181</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU05-BEE-002</sampleid>
      <catalognum>CHU05-BEE-002</catalognum>
      <fieldnum>CHU05-BEE-002</fieldnum>
      <institution_storing>University of Manitoba, Wallis Roughley Museum of Entomology</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85395</taxID>
          <name>Osmia nigrifrons</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>C.Sheffield</collectors>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>14 km E Churchill, Golf Balls Intertidal</sector>
      <coordinates>
        <lat>58.769</lat>
        <lon>-93.929</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;|Twin Golf Balls|58.63|-93.8|&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>7200336</record_id>
    <processid>CRHII009-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30310-H04</sampleid>
      <catalognum>BIOUG30310-H04</catalognum>
      <fieldnum>L#16CRH-0010</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast and windy|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289047</record_id>
    <processid>FBAPB686-09</processid>
    <bin_uri>BOLD:AAD0379</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02161</sampleid>
      <catalognum>BC ZSM HYM 02161</catalognum>
      <fieldnum>BC ZSM HYM 02161</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Trentino-Alto Adige/Sudtirol</province_state>
      <region>Trentino</region>
      <exactsite>Martelltal, Zufallhuette</exactsite>
      <coordinates>
        <lat>46.4</lat>
        <lon>10.6</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663024</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02161+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289067</record_id>
    <processid>FBAPB706-09</processid>
    <bin_uri>BOLD:AAE4126</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02181</sampleid>
      <catalognum>BC ZSM HYM 02181</catalognum>
      <fieldnum>BC ZSM HYM 02181</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>252961</taxID>
          <name>Osmia mustelina</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Brandenburg</province_state>
      <exactsite>Berlin, Wriezen</exactsite>
      <coordinates>
        <lat>52.7</lat>
        <lon>14.1</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>20</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663044</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02181+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709639</record_id>
    <processid>FBAPC373-10</processid>
    <bin_uri>BOLD:AAP2416</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05978</sampleid>
      <catalognum>BC ZSM HYM 05978</catalognum>
      <fieldnum>BC ZSM HYM 05978</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265272</taxID>
          <name>Osmia niveata</name>
          <reference>Fabricius, 1804</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Name corrected (JS 04.2011)</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>France</country>
      <province_state>Occitanie</province_state>
      <region>Languedoc-Roussillon</region>
      <sector>Languedoc-Roussillion</sector>
      <exactsite>Beziers</exactsite>
      <coordinates>
        <lat>43.341</lat>
        <lon>3.219</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>62</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189839</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05978+1309188372.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[::taxonomy:Name corrected from O. fulviventris (JS, 04.2011)::endTaxonomy:]]&gt;</notes>
  </record>
  <record>
    <record_id>2021838</record_id>
    <processid>FBAPC545-11</processid>
    <bin_uri>BOLD:AAY5201</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07005</sampleid>
      <catalognum>BC ZSM HYM 07005</catalognum>
      <fieldnum>BC ZSM HYM 07005</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>590709</taxID>
          <name>Osmia saxicola</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>St. Dalmas-Valdeblore, Millefonts</exactsite>
      <coordinates>
        <lat>44.098</lat>
        <lon>7.186</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>2030</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171222</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07005+1305748380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022021</record_id>
    <processid>FBAPC728-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07568</sampleid>
      <catalognum>BC ZSM HYM 07568</catalognum>
      <fieldnum>BC ZSM HYM 07568</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Bollene Vesubie</exactsite>
      <coordinates>
        <lat>43.998</lat>
        <lon>7.339</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>630</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171405</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07568+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022026</record_id>
    <processid>FBAPC733-11</processid>
    <bin_uri>BOLD:AAY5207</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07573</sampleid>
      <catalognum>BC ZSM HYM 07573</catalognum>
      <fieldnum>BC ZSM HYM 07573</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265266</taxID>
          <name>Osmia andrenoides</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Brigue</exactsite>
      <coordinates>
        <lat>44.065</lat>
        <lon>7.618</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>800</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171410</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07573+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083455</record_id>
    <processid>FBAPC971-11</processid>
    <bin_uri>BOLD:AAZ0859</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08476</sampleid>
      <catalognum>BC ZSM HYM 08476</catalognum>
      <fieldnum>BC ZSM HYM 08476</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265274</taxID>
          <name>Osmia pilicornis</name>
          <reference>Smith, 1846</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>F. Burger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Fahner Hoehe, Molschleben, Bienstaedter Warte</exactsite>
      <coordinates>
        <lat>51.017</lat>
        <lon>10.838</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>359</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243649</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_08476+1312308900.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083172</record_id>
    <processid>FBAPD118-11</processid>
    <bin_uri>BOLD:AAD0313</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08763</sampleid>
      <catalognum>BC ZSM HYM 08763</catalognum>
      <fieldnum>BC ZSM HYM 08763</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>249286</taxID>
          <name>Osmia caerulescens</name>
          <reference>Linnaeus, 1758</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Kaiserstuhl, 1 km E Bickensohl</exactsite>
      <coordinates>
        <lat>48.082</lat>
        <lon>7.659</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>385</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243847</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08763+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2083173</record_id>
    <processid>FBAPD119-11</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 08764</sampleid>
      <catalognum>BC ZSM HYM 08764</catalognum>
      <fieldnum>BC ZSM HYM 08764</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <region>Freiburg</region>
      <exactsite>Muellheim, 1 km N</exactsite>
      <coordinates>
        <lat>47.82</lat>
        <lon>7.62</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>260</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1243848</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Adult</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_08764+1312309328.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140587</record_id>
    <processid>FBAPD376-11</processid>
    <bin_uri>BOLD:AAE5409</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07786</sampleid>
      <catalognum>BC ZSM HYM 07786</catalognum>
      <fieldnum>BC ZSM HYM 07786</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km SW Sevilla, W Maalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310929</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07786+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2140589</record_id>
    <processid>FBAPD378-11</processid>
    <bin_uri>BOLD:AAK5820</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07788</sampleid>
      <catalognum>BC ZSM HYM 07788</catalognum>
      <fieldnum>BC ZSM HYM 07788</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265276</taxID>
          <name>Osmia submicans</name>
          <reference>Morawitz, 1870</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Spain</country>
      <province_state>Andalusia</province_state>
      <exactsite>Andalucia, 65 km SW Sevilla, W Maalascanas</exactsite>
      <coordinates>
        <lat>37.04</lat>
        <lon>-6.55</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>40</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1310931</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPD/BC_ZSM_HYM_07788+1315500312.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1134130</record_id>
    <processid>FBHAP578-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00863</sampleid>
      <catalognum>BC ZSM HYM 00863</catalognum>
      <fieldnum>BC ZSM HYM 00863</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214292</taxID>
          <name>Osmia xanthomelana</name>
          <reference>Kirby, 1802</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>M. Kraus</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Eining</exactsite>
      <coordinates>
        <lat>48.855</lat>
        <lon>11.77</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>350</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>498529</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00863+1243965540.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875278</record_id>
    <processid>GBACU1267-12</processid>
    <bin_uri>BOLD:AAE5457</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14567</sampleid>
      <catalognum>BC ZSM HYM 14567</catalognum>
      <fieldnum>BC ZSM HYM 14567</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265275</taxID>
          <name>Osmia rufohirta</name>
          <reference>Latreille, 1811</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Thuringia</province_state>
      <exactsite>Kyffhaeuser, NW Bad Frankenhausen</exactsite>
      <coordinates>
        <lat>51.36</lat>
        <lon>11.07</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>472</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825647</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14567+1346258752.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856411</record_id>
    <processid>GBAH3880-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726627</sampleid>
      <catalognum>EU726627</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856419</record_id>
    <processid>GBAH3888-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726619</sampleid>
      <catalognum>EU726619</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Jecheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856429</record_id>
    <processid>GBAH3898-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726609</sampleid>
      <catalognum>EU726609</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856441</record_id>
    <processid>GBAH3910-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726597</sampleid>
      <catalognum>EU726597</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856474</record_id>
    <processid>GBAH3943-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726564</sampleid>
      <catalognum>EU726564</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Milyang</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856479</record_id>
    <processid>GBAH3948-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726559</sampleid>
      <catalognum>EU726559</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856482</record_id>
    <processid>GBAH3951-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726556</sampleid>
      <catalognum>EU726556</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Dangjin</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856484</record_id>
    <processid>GBAH3953-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726554</sampleid>
      <catalognum>EU726554</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856486</record_id>
    <processid>GBAH3955-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726552</sampleid>
      <catalognum>EU726552</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616532</record_id>
    <processid>GBAH7414-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583334</sampleid>
      <catalognum>KC583334</catalognum>
      <fieldnum>KC583334</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3174333</record_id>
    <processid>GBMIN18103-13</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>KC135990</sampleid>
      <catalognum>ADU073</catalognum>
      <fieldnum>KC135990</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <extrainfo>Osmia cornifrons</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>C. Jung</collectors>
      <country>South Korea</country>
      <coordinates>
        <lat>36.265</lat>
        <lon>129.014</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417839</record_id>
    <processid>GBMIN78103-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957864</sampleid>
      <fieldnum>KX957864</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417844</record_id>
    <processid>GBMIN78108-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX374768</sampleid>
      <fieldnum>KX374768</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Germany</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>8417847</record_id>
    <processid>GBMIN78111-17</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>KX957868</sampleid>
      <fieldnum>KX957868</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>Kyrgyzstan</country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>563</record_id>
    <processid>HCBNS176-03</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee81</sampleid>
      <catalognum>CSS#161</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>East Torbrook</sector>
      <coordinates>
        <lat>44.927</lat>
        <lon>-64.93</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>401</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/HCBNS176-03.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4827</record_id>
    <processid>HDBNS084-03</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c84</sampleid>
      <catalognum>sheff-c84</catalognum>
      <institution_storing></institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21203</taxID>
          <name>Osmia atriventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>New Brunswick</province_state>
      <region>Kings County</region>
      <sector>East Torbrook</sector>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>70290</mediaID>
        <caption>Lateral</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/HCBNS/sheff-c84+1141055380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4842</record_id>
    <processid>HDBNS099-03</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c99</sampleid>
      <catalognum>CSS#175</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sue Westby</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Upper Canard</sector>
      <coordinates>
        <lat>45.135</lat>
        <lon>-64.489</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>708825</record_id>
    <processid>HMBCH025-07</processid>
    <bin_uri>BOLD:AAB4644</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-006</sampleid>
      <catalognum>CHU07-BEE-006</catalognum>
      <fieldnum>CHU07-BEE-006</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>unspecified locality</sector>
      <exactsite>bus stop</exactsite>
      <coordinates>
        <lat>58.74</lat>
        <lon>-93.82</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259388</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_020+1197913946.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Bus Stop||||&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>708856</record_id>
    <processid>HMBCH056-07</processid>
    <bin_uri>BOLD:ACF4328</bin_uri>
    <specimen_identifiers>
      <sampleid>CHU07-BEE-037</sampleid>
      <catalognum>CHU07-BEE-037</catalognum>
      <fieldnum>CHU07-BEE-037</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96585</taxID>
          <name>Osmia paradisica</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>P.G.Kevan</collectors>
      <site_code>BIOUG:Churchill</site_code>
      <country>Canada</country>
      <province_state>Manitoba</province_state>
      <region>Churchill</region>
      <sector>16 km SW Churchill, Churchill River Pump House</sector>
      <coordinates>
        <lat>58.626</lat>
        <lon>-94.229</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>259419</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2008</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/HMBCH/CHU07-BEE_051+1197914486.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[&lt;VERBATIM LOCALITY&gt;Pump House||58.619|-93.828|&lt;/VERBATIM LOCALITY&gt;]]&gt;</notes>
  </record>
  <record>
    <record_id>1422993</record_id>
    <processid>JSYKA121-10</processid>
    <bin_uri>BOLD:AAD0378</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-027</sampleid>
      <fieldnum>L#JSYKB-027</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85394</taxID>
          <name>Osmia nigriventris</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot14</exactsite>
      <coordinates>
        <lat>69.1686</lat>
        <lon>-140.205</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>289</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754247</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7916+1272292848.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>2495804</record_id>
    <processid>SDBEE282-12</processid>
    <bin_uri>BOLD:AAE5493</bin_uri>
    <specimen_identifiers>
      <sampleid>KJH.2059</sampleid>
      <fieldnum>KJH.2059</fieldnum>
      <institution_storing>University of California, San Diego</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90381</taxID>
          <name>Osmia montana</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>204367</taxID>
          <name>Osmia montana quadriceps</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>K. James Hung</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>San Diego</region>
      <sector>San Diego</sector>
      <exactsite>Mission Trails Regional Park</exactsite>
      <coordinates>
        <lat>32.8352</lat>
        <lon>-117.077</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4601658</record_id>
    <processid>SSBRC1471-14</processid>
    <bin_uri>BOLD:AAD5706</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG13335-D07</sampleid>
      <catalognum>BIOUG13335-D07</catalognum>
      <fieldnum>L#13BIOBUS-0494</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>127290</taxID>
          <name>Osmia virga</name>
          <reference>Sandhouse, 1939</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Cape Breton Highlands NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2013</collectors>
      <collection_note>1 intercept trap|overcast and windy|barrens with blueberry, huckleberry, heath shrubs and black spruce</collection_note>
      <sampling_protocol>Intercept Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Cape Breton Highlands National Park</region>
      <sector>Paquette Lake Rd.</sector>
      <coordinates>
        <lat>46.837</lat>
        <lon>-60.434</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>276</elev>
    </collection_event>
    <notes>&lt;![CDATA[June 29, trap partially collapsed]]&gt;</notes>
  </record>
  <record>
    <record_id>970664</record_id>
    <processid>TTHYW394-08</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0361</sampleid>
      <catalognum>08BBHYM-0361</catalognum>
      <fieldnum>L#08BANFF-071</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed Habitat</habitat>
      <extrainfo>Banff NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting||Marsh, aspen wood</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Banff NP</region>
      <sector>Near Carrot Creek</sector>
      <coordinates>
        <lat>51.148</lat>
        <lon>-115.42</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1379</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>371009</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_8938+1231438824.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>970901</record_id>
    <processid>TTHYW631-08</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>08BBHYM-0598</sampleid>
      <catalognum>08BBHYM-0598</catalognum>
      <fieldnum>L#08PUK-105</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Tomislav Terzin</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Forest</habitat>
      <extrainfo>Pukaskwa NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2008</collectors>
      <collection_note>Daytime netting||Rock pools/mixed forest</collection_note>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Pukaskwa NP</region>
      <sector>Southern Headland Trail</sector>
      <coordinates>
        <lat>48.587</lat>
        <lon>-86.295</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>179</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>372345</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2009</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Young-suk</photographer>
        <image_file>http://www.boldsystems.org/pics/TTHYW/IMG_8449+1232030430.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1051007</record_id>
    <processid>UPOLB618-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>I2Y-20080520-002</sampleid>
      <fieldnum>I2Y May 16 -20 2008</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Massey Drive</exactsite>
      <coordinates>
        <lat>43.541</lat>
        <lon>-80.3</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1049580</record_id>
    <processid>UPOLL141-09</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>G1Y-20070702-003</sampleid>
      <fieldnum>G1Y June 28 - July 2 2007</fieldnum>
      <institution_storing>University of Guelph</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Marianna Horn</collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Southern Ontario</region>
      <sector>Guelph</sector>
      <exactsite>Hanlon Creek Conservation Area</exactsite>
      <coordinates>
        <lat>43.509</lat>
        <lon>-80.207</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1769753</record_id>
    <processid>BBHYL310-10</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>10BBCHY-3264</sampleid>
      <catalognum>10BBCHY-3264</catalognum>
      <fieldnum>L#PC2010KT-025</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Julie K. Stahlhut</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <habitat>Mixed habitat</habitat>
      <extrainfo>Kootenay NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIObus 2010</collectors>
      <collection_note>|Hot,sunny,very dry|Mixed forest around shallow lake</collection_note>
      <sampling_protocol>Free Hand</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Kootenay NP</region>
      <sector>Olive Lake Trail</sector>
      <coordinates>
        <lat>50.675</lat>
        <lon>-115.931</lon>
        <coord_source>GPS WGS84</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1482</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>992536</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2011</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Grace Bannon</photographer>
        <image_file>http://www.boldsystems.org/pics/BBHYL/IMG_6442+1294778874.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>4005348</record_id>
    <processid>BCHYM1499-13</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 19359</sampleid>
      <catalognum>BC ZSM HYM 19359</catalognum>
      <fieldnum>BC ZSM HYM 19359</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>adult</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Mecklenburg-Vorpommern</province_state>
      <exactsite>Blankenfoerde</exactsite>
      <coordinates>
        <lat>53.347</lat>
        <lon>12.922</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>51</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2185454</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/BCHYM/BC_ZSM_HYM_19359+1382030388.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>240799</record_id>
    <processid>BCT023-06</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>06-BCT-023</sampleid>
      <fieldnum>06-BCT-023</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors>C. J. Daley</collectors>
      <country>United States</country>
      <province_state>Connecticut</province_state>
      <region>New London County</region>
      <exactsite>Old Lyme, Hatchett Pt.</exactsite>
      <coordinates>
        <lat>41.275</lat>
        <lon>-72.103</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>144042</mediaID>
        <caption>Dorsal</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/BCT/06-BCT-023+1147195502.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>281212</record_id>
    <processid>BEECA182-06</processid>
    <bin_uri>BOLD:AAB1785</bin_uri>
    <specimen_identifiers>
      <sampleid>02-BC-0182</sampleid>
      <fieldnum>02-BC-0182</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>17216</taxID>
          <name>Osmia simillima</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514749</record_id>
    <processid>BEECA382-06</processid>
    <bin_uri>BOLD:ACF2880</bin_uri>
    <specimen_identifiers>
      <sampleid>06-VA-0382</sampleid>
      <fieldnum>06-VA-0382</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204353</taxID>
          <name>Osmia texana</name>
          <reference>Cresson, 1872</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Virginia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>514806</record_id>
    <processid>BEECA439-06</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>03-NT-0439</sampleid>
      <fieldnum>03-NT-0439</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Anne Gunn</collectors>
      <country>Canada</country>
      <province_state>Northwest Territories</province_state>
      <exactsite>Negus Pt.; Yellowknife</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516924</record_id>
    <processid>BEECA572-06</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>00-NS-0572</sampleid>
      <fieldnum>00-NS-0572</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sue Westby</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>516950</record_id>
    <processid>BEECA598-06</processid>
    <bin_uri>BOLD:AAC5789</bin_uri>
    <specimen_identifiers>
      <sampleid>04-ON-0598</sampleid>
      <fieldnum>04-ON-0598</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>266926</taxID>
          <name>Osmia albiventris</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>Canada</country>
      <province_state>Ontario</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>549752</record_id>
    <processid>BEECA663-07</processid>
    <bin_uri>BOLD:AAW9602</bin_uri>
    <specimen_identifiers>
      <sampleid>96-GA-0663</sampleid>
      <fieldnum>96-GA-0663</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>90382</taxID>
          <name>Osmia chalybea</name>
          <reference>Smith, 1853</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors></collectors>
      <country>United States</country>
      <province_state>Georgia</province_state>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596911</record_id>
    <processid>BEECB349-07</processid>
    <bin_uri>BOLD:AAD3950</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA1067</sampleid>
      <catalognum>BBSL696741</catalognum>
      <fieldnum>04-WA1067</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96578</taxID>
          <name>Osmia longula</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>0.8 mi W Tiffany Lake</exactsite>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268551</mediaID>
        <caption>Male</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Male_Lat+1205190880.jpg</image_file>
      </media>
      <media>
        <mediaID>268550</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_longula_Fem_Lat+1205190844.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>596937</record_id>
    <processid>BEECB375-07</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>04-WA-1093</sampleid>
      <catalognum>BBSL695835</catalognum>
      <fieldnum>04-WA-1093</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J. Wilson</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Okanogan Co.</region>
      <exactsite>Parachute Meadow</exactsite>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596960</record_id>
    <processid>BEECB398-07</processid>
    <bin_uri>BOLD:AAW9629</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1117</sampleid>
      <catalognum>BBSL613410</catalognum>
      <fieldnum>05-CA-1117</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>H.W. Ikerd</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Mariposa Co.</region>
      <exactsite>1.8 mi W of Devils Dance Floor</exactsite>
      <elev>1786</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>596961</record_id>
    <processid>BEECB399-07</processid>
    <bin_uri>BOLD:AAW9691</bin_uri>
    <specimen_identifiers>
      <sampleid>05-CA-1118</sampleid>
      <catalognum>BBSL615215</catalognum>
      <fieldnum>05-CA-1118</fieldnum>
      <institution_storing>Utah State University, Logan Bee Lab</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96600</taxID>
          <name>Osmia aff ribifloris</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Fuerst</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Mariposa Co.</region>
      <exactsite>1.1 mi EbyS Half Dome</exactsite>
      <elev>1994</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688026</record_id>
    <processid>BEECB736-07</processid>
    <bin_uri>BOLD:AAB2770</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1359</sampleid>
      <catalognum>PYU-1367</catalognum>
      <fieldnum>07-WA-1359</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85413</taxID>
          <name>Osmia coloradensis</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Lewis Co.</region>
      <exactsite>5 km S Packwood</exactsite>
      <coordinates>
        <lat>46.571</lat>
        <lon>-121.7</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>329</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>268549</mediaID>
        <caption>Female</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECB/Osmia_coloradensis_Fem_Lat+1205190720.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>688030</record_id>
    <processid>BEECB740-07</processid>
    <bin_uri>BOLD:AAB4645</bin_uri>
    <specimen_identifiers>
      <sampleid>07-WA-1363</sampleid>
      <catalognum>PYU-1345</catalognum>
      <fieldnum>07-WA-1363</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85393</taxID>
          <name>Osmia integra</name>
          <reference>Cresson, 1878</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>United States</country>
      <province_state>Washington</province_state>
      <region>Grant Co.</region>
      <exactsite>nr Vantage</exactsite>
      <coordinates>
        <lat>46.931</lat>
        <lon>-119.948</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>236</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>688094</record_id>
    <processid>BEECB804-07</processid>
    <bin_uri>BOLD:AAE4128</bin_uri>
    <specimen_identifiers>
      <sampleid>07-BC-1521</sampleid>
      <fieldnum>07-BC-1521</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204025</taxID>
          <name>Osmia malina</name>
          <reference>Cockerell, 1909</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Gibbs and Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>BC4</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1060878</record_id>
    <processid>BEECC1175-09</processid>
    <bin_uri>BOLD:AAE5368</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2848</sampleid>
      <catalognum>BBSL442606</catalognum>
      <fieldnum>02-UT-2848</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96625</taxID>
          <name>Osmia anasazi</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Griswold, Terry</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Henrieville Cr</exactsite>
      <coordinates>
        <lat>37.603</lat>
        <lon>-111.916</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060902</record_id>
    <processid>BEECC1199-09</processid>
    <bin_uri>BOLD:AAC3295</bin_uri>
    <specimen_identifiers>
      <sampleid>02-UT-2872</sampleid>
      <catalognum>BBSL464546</catalognum>
      <fieldnum>02-UT-2872</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96583</taxID>
          <name>Osmia juxta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Bradley, Brosi</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Calf Creek</exactsite>
      <coordinates>
        <lat>37.764</lat>
        <lon>-111.405</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>1060922</record_id>
    <processid>BEECC1219-09</processid>
    <bin_uri>BOLD:AAE5464</bin_uri>
    <specimen_identifiers>
      <sampleid>04-CA-2892</sampleid>
      <catalognum>BBSL561216</catalognum>
      <fieldnum>04-CA-2892</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204364</taxID>
          <name>Osmia cyanella</name>
          <reference>Cockerell, 1897</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>net</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Briggs, Jennifer Tobias</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <exactsite>Merced Lk Tr, 1.2mi SWbyW Moraine Dome</exactsite>
      <coordinates>
        <lat>37.735</lat>
        <lon>-119.51</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[Ericameria bloomeri]]&gt;</notes>
  </record>
  <record>
    <record_id>844640</record_id>
    <processid>BEECC277-08</processid>
    <bin_uri>BOLD:AAF2177</bin_uri>
    <specimen_identifiers>
      <sampleid>07-SC-1949</sampleid>
      <catalognum>USGSDRO075353</catalognum>
      <fieldnum>07-SC-1949</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>S. Droege</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>162344</taxID>
          <name>Osmia inspergens</name>
          <reference>Lovell &amp; Cockerell, 1907</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>L. Housh</collectors>
      <country>United States</country>
      <province_state>South Carolina</province_state>
      <region>Chesterfield Co.</region>
      <coordinates>
        <lat>34.575</lat>
        <lon>-80.237</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>973628</record_id>
    <processid>BEECC490-08</processid>
    <bin_uri>BOLD:AAF2185</bin_uri>
    <specimen_identifiers>
      <sampleid>08-CA-2163</sampleid>
      <catalognum>USGSDRO106071</catalognum>
      <fieldnum>08-CA-2163</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Gibbs</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>204031</taxID>
          <name>Osmia gabrielis</name>
          <reference>Cockerell, 1910</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>S.W. Droege</collectors>
      <country>United States</country>
      <province_state>California</province_state>
      <region>Santa Monica Mtns.</region>
      <coordinates>
        <lat>34.056</lat>
        <lon>-118.896</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1003235</record_id>
    <processid>BEECC720-09</processid>
    <bin_uri>BOLD:AAE5460</bin_uri>
    <specimen_identifiers>
      <sampleid>98-UT-2298</sampleid>
      <catalognum>BBSL608592</catalognum>
      <fieldnum>98-UT-2298</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Terry L. Griswold</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>196921</taxID>
          <name>Osmia crassa</name>
          <reference>Rust &amp; Bohart, 1986</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Pantrap, yellow</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Toler,</collectors>
      <country>United States</country>
      <province_state>Utah</province_state>
      <exactsite>Dugway Proving Grounds: Ditto HQ, 4 km ENE (site 3</exactsite>
      <coordinates>
        <lat>40.196</lat>
        <lon>-112.882</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>650284</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>Cory S. Sheffield</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Cory Sheffield</photographer>
        <image_file>http://www.boldsystems.org/pics/BEECC/2298+1263577184.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[No Floral Record]]&gt;</notes>
  </record>
  <record>
    <record_id>5983220</record_id>
    <processid>BEEEE070-15</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BMNH(E)#970345</sampleid>
      <catalognum>BMNH(E)#970345</catalognum>
      <fieldnum>BMNH(E)#970345</fieldnum>
      <institution_storing>Natural History Museum, London</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>David Notton</identification_provided_by>
      <identification_method>Morphological</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>Adult</lifestage>
      <tissue_type>Leg</tissue_type>
    </specimen_desc>
    <collection_event>
      <collectors>David Notton</collectors>
      <collection_note>LatLong based on UK grid reference: SU718773</collection_note>
      <country>United Kingdom</country>
      <province_state>England</province_state>
      <region>Berkshire</region>
      <sector>Reading</sector>
      <exactsite>Emmer Green</exactsite>
      <coordinates>
        <lat>51.49</lat>
        <lon>-0.967</lon>
        <coord_source></coord_source>
        <coord_accuracy>100</coord_accuracy>
      </coordinates>
    </collection_event>
    <notes>&lt;![CDATA[UK: Berks: Emmer Green: nr Reading: SU 718 773: 6.iv.2015: D.Notton: m Osmia bicornis: BMNH(E)#970345]]&gt;</notes>
  </record>
  <record>
    <record_id>5548468</record_id>
    <processid>CNRVB279-15</processid>
    <bin_uri>BOLD:ACF5858</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG19444-C06</sampleid>
      <catalognum>BIOUG19444-C06</catalognum>
      <fieldnum>GMP#05044</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Angela Telfer</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>96624</taxID>
          <name>Osmia laeta</name>
          <reference>Sandhouse, 1924</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
      <extrainfo>Mount Revelstoke NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>S.Devita</collectors>
      <collection_note>2 Malaise traps|coniferous forest close to cliff edge</collection_note>
      <site_code>BIOUG:REVEL-NP</site_code>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>British Columbia</province_state>
      <region>Mount Revelstoke National Park</region>
      <sector>Off trail behind old staff housing</sector>
      <coordinates>
        <lat>51.018</lat>
        <lon>-118.205</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>608</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2777105</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/CNRVB/BIOUG19444-C06+1449811740.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>7221649</record_id>
    <processid>CRHII778-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30450-F06</sampleid>
      <catalognum>BIOUG30450-F06</catalognum>
      <fieldnum>L#16CRH-0040</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|by lake; gravel base, goldenrod, willow</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 4</exactsite>
      <coordinates>
        <lat>43.4893</lat>
        <lon>-79.6159</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>85</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>7222539</record_id>
    <processid>CRHIJ887-16</processid>
    <bin_uri>BOLD:AAC0883</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG30470-C06</sampleid>
      <catalognum>BIOUG30470-C06</catalognum>
      <fieldnum>L#16CRH-0043</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>84730</taxID>
          <name>Osmia conjuncta</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <lifestage>A</lifestage>
      <tissue_type>Whole Voucher</tissue_type>
      <habitat>Grassland</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>BIO Collections Staff</collectors>
      <collection_note>5 Pan traps|overcast|control; grass, goldenrod</collection_note>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Ontario</province_state>
      <region>Mississauga</region>
      <sector>CRH Canada, 2391 Lakeshore Rd W</sector>
      <exactsite>Site 5</exactsite>
      <coordinates>
        <lat>43.4878</lat>
        <lon>-79.615</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>82</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1289037</record_id>
    <processid>FBAPB676-09</processid>
    <bin_uri>BOLD:AAI1788</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02151</sampleid>
      <catalognum>BC ZSM HYM 02151</catalognum>
      <fieldnum>BC ZSM HYM 02151</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>200479</taxID>
          <name>Osmia cornuta</name>
          <reference>Latreille, 1805</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Stromberg, Ochsenbach</exactsite>
      <coordinates>
        <lat>49.01</lat>
        <lon>9</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663014</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02151+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289043</record_id>
    <processid>FBAPB682-09</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02157</sampleid>
      <catalognum>BC ZSM HYM 02157</catalognum>
      <fieldnum>BC ZSM HYM 02157</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bretten, Freudenstein</exactsite>
      <coordinates>
        <lat>49.03</lat>
        <lon>8.8</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>270</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663020</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02157+1259765280.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1289112</record_id>
    <processid>FBAPB751-09</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 02226</sampleid>
      <catalognum>BC ZSM HYM 02226</catalognum>
      <fieldnum>BC ZSM HYM 02226</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265280</taxID>
          <name>Osmia viridana</name>
          <reference>Morawitz, 1874</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <exactsite>St. Pierre</exactsite>
      <coordinates>
        <lat>45.7</lat>
        <lon>7.32</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>800</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>663089</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPB/BC_ZSM_HYM_02226+1259765340.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709632</record_id>
    <processid>FBAPC366-10</processid>
    <bin_uri>BOLD:ABZ4072</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05971</sampleid>
      <catalognum>BC ZSM HYM 05971</catalognum>
      <fieldnum>BC ZSM HYM 05971</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Saint-Christophe, Cretallaz</exactsite>
      <coordinates>
        <lat>45.761</lat>
        <lon>7.378</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1064</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189832</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05971+1309188380.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1709633</record_id>
    <processid>FBAPC367-10</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 05972</sampleid>
      <catalognum>BC ZSM HYM 05972</catalognum>
      <fieldnum>BC ZSM HYM 05972</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>E. Scheuchl</collectors>
      <country>Italy</country>
      <province_state>Aosta Valley</province_state>
      <region>Aosta</region>
      <exactsite>Saint-Pierre</exactsite>
      <coordinates>
        <lat>45.709</lat>
        <lon>7.23</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>710</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1189833</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_05972+1309188378.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2022022</record_id>
    <processid>FBAPC729-11</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 07569</sampleid>
      <catalognum>BC ZSM HYM 07569</catalognum>
      <fieldnum>BC ZSM HYM 07569</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Stefan Schmidt</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>C. Schmid-Egger</collectors>
      <country>France</country>
      <province_state>Provence-Alpes-Cote d'Azur</province_state>
      <exactsite>La Bollene Vesubie</exactsite>
      <coordinates>
        <lat>43.998</lat>
        <lon>7.339</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>630</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1171406</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBAPC/BC_ZSM_HYM_07569+1305749040.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1133854</record_id>
    <processid>FBHAP302-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 00397</sampleid>
      <catalognum>BC ZSM HYM 00397</catalognum>
      <fieldnum>BC ZSM HYM 00397</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Johannes Schuberth</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>A. Dubitzky</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Dachau</exactsite>
      <coordinates>
        <lat>48.25</lat>
        <lon>11.433</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>500</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>497298</mediaID>
        <caption>Adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>ZSM Hymenoptera Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/FBHAP/BC_ZSM_HYM00397+1244555750.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2875216</record_id>
    <processid>GBACU1205-12</processid>
    <bin_uri>BOLD:AAE5408</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14505</sampleid>
      <catalognum>BC ZSM HYM 14505</catalognum>
      <fieldnum>BC ZSM HYM 14505</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>M</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Veithoechheim/Ravensburg</exactsite>
      <coordinates>
        <lat>49.85</lat>
        <lon>9.86</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>167</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1825266</mediaID>
        <caption>adult</caption>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_14505+1345839256.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>2912235</record_id>
    <processid>GBACU1881-12</processid>
    <bin_uri>BOLD:AAE5472</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 14231</sampleid>
      <catalognum>BC ZSM HYM 14231</catalognum>
      <fieldnum>BC ZSM HYM 14231</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214091</taxID>
          <name>Osmia bicolor</name>
          <reference>Schrank, 1781</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Bavaria</province_state>
      <exactsite>Retzbach</exactsite>
      <coordinates>
        <lat>49.9</lat>
        <lon>9.83</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>243</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2834227</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Stefan Schmidt</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <photographer>Hymenoptera Photo Group</photographer>
        <image_file>http://www.boldsystems.org/pics/GBAPI/BC_ZSM_HYM_14231+1449672346.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199235</record_id>
    <processid>GBACU3696-13</processid>
    <bin_uri>BOLD:AAO8736</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17281</sampleid>
      <catalognum>BC ZSM HYM 17281</catalognum>
      <fieldnum>BC ZSM HYM 17281</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>265268</taxID>
          <name>Osmia gallarum</name>
          <reference>Spinola, 1808</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Grissheim</exactsite>
      <coordinates>
        <lat>47.87</lat>
        <lon>7.56</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>210</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937572</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17281+1362509774.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3199240</record_id>
    <processid>GBACU3701-13</processid>
    <bin_uri>BOLD:AAI2010</bin_uri>
    <specimen_identifiers>
      <sampleid>BC ZSM HYM 17286</sampleid>
      <catalognum>BC ZSM HYM 17286</catalognum>
      <fieldnum>BC ZSM HYM 17286</fieldnum>
      <institution_storing>SNSB, Zoologische Staatssammlung Muenchen</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Christian Schmid-Egger</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214255</taxID>
          <name>Osmia spinulosa</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>a</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Schmid-Egger</collectors>
      <country>Germany</country>
      <province_state>Baden-Wuerttemberg</province_state>
      <exactsite>Bickensohl</exactsite>
      <coordinates>
        <lat>48.08</lat>
        <lon>7.66</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>377</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>1937577</mediaID>
        <caption>adult</caption>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_holder>SNSB, Zoologische Staatssammlung Muenchen</copyright_holder>
          <copyright_year>2015</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>SNSB, Zoologische Staatssammlung Muenchen</copyright_institution>
        </copyright>
        <image_file>http://www.boldsystems.org/pics/GBACU/BC_ZSM_HYM_17286+1362509788.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>856413</record_id>
    <processid>GBAH3882-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726625</sampleid>
      <catalognum>EU726625</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Gokseong</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856435</record_id>
    <processid>GBAH3904-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726603</sampleid>
      <catalognum>EU726603</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yesan</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856468</record_id>
    <processid>GBAH3937-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726570</sampleid>
      <catalognum>EU726570</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <province_state>Incheon</province_state>
      <region>Icheon</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>856762</record_id>
    <processid>GBAH3959-08</processid>
    <bin_uri>BOLD:AAA4494</bin_uri>
    <specimen_identifiers>
      <sampleid>EU726549</sampleid>
      <catalognum>EU726549</catalognum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>33111</taxID>
          <name>Osmia cornifrons</name>
          <reference>Radoszkowski, 1887</reference>
        </taxon>
      </species>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country>South Korea</country>
      <region>Yeongju</region>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>3616534</record_id>
    <processid>GBAH7416-13</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>KC583332</sampleid>
      <catalognum>KC583332</catalognum>
      <fieldnum>KC583332</fieldnum>
      <institution_storing>Mined from GenBank, NCBI</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>297349</taxID>
          <name>Osmia ribifloris</name>
        </taxon>
      </species>
      <subspecies>
        <taxon>
          <taxID>266924</taxID>
          <name>Osmia ribifloris biedermannii</name>
        </taxon>
      </subspecies>
    </taxonomy>
    <collection_event>
      <collectors></collectors>
      <country></country>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>6483648</record_id>
    <processid>GMOTE078-15</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG25284-H05</sampleid>
      <catalognum>BIOUG25284-H05</catalognum>
      <fieldnum>GMP#05227</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Kate Perez</identification_provided_by>
      <identification_method>BIN Taxonomy Match</identification_method>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Forest</habitat>
    </specimen_desc>
    <collection_event>
      <collectors>Mary Whitley</collectors>
      <sampling_protocol>Malaise Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>N of Whitehorse</region>
      <sector>Nilsson-Lammers Research Forest</sector>
      <coordinates>
        <lat>60.841</lat>
        <lon>-135.208</lon>
        <coord_source>GPS</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>682</elev>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>564</record_id>
    <processid>HCBNS177-03</processid>
    <bin_uri>BOLD:AAB6289</bin_uri>
    <specimen_identifiers>
      <sampleid>Bee83</sampleid>
      <fieldnum>Bee83</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Cory S. Sheffield</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21439</taxID>
          <name>Osmia bucephala</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Cory Sheffield</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Annapolis County</region>
      <sector>Middleton</sector>
      <coordinates>
        <lat>44.966</lat>
        <lon>-65.058</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>4834</record_id>
    <processid>HDBNS091-03</processid>
    <bin_uri>BOLD:AAB7164</bin_uri>
    <specimen_identifiers>
      <sampleid>sheff-c91</sampleid>
      <catalognum>CSS#162</catalognum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Sue Westby</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>21436</taxID>
          <name>Osmia proxima</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
      <extrainfo>Megachilinae</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Sheffield, Rigby, Jansen</collectors>
      <country>Canada</country>
      <province_state>Nova Scotia</province_state>
      <region>Kings County</region>
      <sector>Forest Home</sector>
      <coordinates>
        <lat>44.912</lat>
        <lon>-64.529</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1420909</record_id>
    <processid>IBBP203-10</processid>
    <bin_uri></bin_uri>
    <specimen_identifiers>
      <sampleid>TCDB-T505</sampleid>
      <fieldnum>U-04-132</fieldnum>
      <institution_storing>Trinity College, Dublin</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Karl Magnacca</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214248</taxID>
          <name>Osmia aurulenta</name>
          <reference>Panzer, 1799</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>U. Fitzpatrick</collectors>
      <country>Ireland</country>
      <region>Wexford</region>
      <exactsite>Ballyteige</exactsite>
      <coordinates>
        <lat>52.2</lat>
        <lon>-6.63</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <notes></notes>
  </record>
  <record>
    <record_id>1422998</record_id>
    <processid>JSYKA126-10</processid>
    <bin_uri>BOLD:AAC2237</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-032</sampleid>
      <fieldnum>L#JSYKB-032</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19875</taxID>
          <name>Osmia tersula</name>
          <reference>Cockerell, 1912</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia2</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot04</exactsite>
      <coordinates>
        <lat>69.1744</lat>
        <lon>-140.164</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>355</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754252</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7921+1272292902.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Blue pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423012</record_id>
    <processid>JSYKA140-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-046</sampleid>
      <fieldnum>L#JSYKB-046</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot15</exactsite>
      <coordinates>
        <lat>69.1682</lat>
        <lon>-140.198</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>308</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754266</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7936+1272293032.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423014</record_id>
    <processid>JSYKA142-10</processid>
    <bin_uri>BOLD:AAI2013</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-048</sampleid>
      <fieldnum>L#JSYKB-048</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>OsmiaSp3*Blue</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot08</exactsite>
      <coordinates>
        <lat>69.1639</lat>
        <lon>-140.163</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>362</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754268</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7938+1272293048.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Pitfall trap]]&gt;</notes>
  </record>
  <record>
    <record_id>1423037</record_id>
    <processid>JSYKA165-10</processid>
    <bin_uri>BOLD:ABZ4941</bin_uri>
    <specimen_identifiers>
      <sampleid>JSYKB-071</sampleid>
      <fieldnum>L#JSYKB-071</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Jason Straka</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>19878</taxID>
          <name>Osmia inermis</name>
          <reference>Zetterstedt, 1838</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <lifestage>A</lifestage>
      <extrainfo>Osmia4</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>Jason Straka</collectors>
      <country>Canada</country>
      <province_state>Yukon Territory</province_state>
      <region>Firth River</region>
      <sector>Sheep Creek</sector>
      <exactsite>Plot04</exactsite>
      <coordinates>
        <lat>69.1744</lat>
        <lon>-140.164</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>355</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>754291</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>Jaclyn McCormick</photographer>
        <image_file>http://www.boldsystems.org/pics/JSYKA/IMG_7962+1272293366.JPG</image_file>
      </media>
    </specimen_imagery>
    <notes>&lt;![CDATA[Blue pan trap]]&gt;</notes>
  </record>
  <record>
    <record_id>763575</record_id>
    <processid>LASNA520-08</processid>
    <bin_uri>BOLD:AAE5481</bin_uri>
    <specimen_identifiers>
      <sampleid>1407-E04</sampleid>
      <fieldnum>1407-E04</fieldnum>
      <institution_storing>York University, Packer Collection</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>John Ascher</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>156081</taxID>
          <name>Osmia glauca</name>
          <reference>Fowler, 1899</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <reproduction>S</reproduction>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>J.S. Ascher</collectors>
      <country>United States</country>
      <province_state>California</province_state>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>624245</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>Packer Collection at York University</copyright_holder>
          <copyright_year>2010</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>York University</copyright_institution>
        </copyright>
        <photographer>Packer Collection at York University</photographer>
        <image_file>http://www.boldsystems.org/pics/ASBEE/B1407-1408-E04+1248126052.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1132315</record_id>
    <processid>NOBEE060-09</processid>
    <bin_uri>BOLD:AAD6282</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00060</sampleid>
      <catalognum>NHMO_APO00060</catalognum>
      <fieldnum>NHMO_APO00060</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>198545</taxID>
          <name>Osmia bicornis</name>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Hansen, Lars Ove</collectors>
      <country>Norway</country>
      <province_state>Buskerud</province_state>
      <region>Drammen</region>
      <exactsite>Underlia</exactsite>
      <coordinates>
        <lat>59.7549</lat>
        <lon>10.1764</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107431</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00060+1375713946.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>1132316</record_id>
    <processid>NOBEE061-09</processid>
    <bin_uri>BOLD:AAI1999</bin_uri>
    <specimen_identifiers>
      <sampleid>NHMO_APO00061</sampleid>
      <catalognum>NHMO_APO00061</catalognum>
      <fieldnum>NHMO_APO00061</fieldnum>
      <institution_storing>University of Oslo, Natural History Museum</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <identification_provided_by>Lars ove Hansen</identification_provided_by>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>214092</taxID>
          <name>Osmia uncinata</name>
          <reference>Gerstäcker, 1869</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status></voucher_status>
      <sex>F</sex>
      <lifestage>A</lifestage>
    </specimen_desc>
    <collection_event>
      <collectors>Hansen, Lars Ove</collectors>
      <country>Norway</country>
      <province_state>Vestfold</province_state>
      <region>Sande</region>
      <exactsite>Kudalsdammen [NW]</exactsite>
      <coordinates>
        <lat>59.5842</lat>
        <lon>10.2841</lon>
        <coord_source></coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2107435</mediaID>
        <media_descriptor>Dorsal</media_descriptor>
        <copyright>
          <copyright_year>2013</copyright_year>
          <copyright_license>No Rights Reserved</copyright_license>
          <copyright_institution>University of Oslo, Natural History Museum</copyright_institution>
        </copyright>
        <photographer>Trude Magnussen</photographer>
        <image_file>http://www.boldsystems.org/pics/NOBEE/NHMO_APO00061+1375713996.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3237918</record_id>
    <processid>SSWLB3767-13</processid>
    <bin_uri>BOLD:AAC5816</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04656-E03</sampleid>
      <catalognum>BIOUG04656-E03</catalognum>
      <fieldnum>L#12BIOBUS-0540</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
      <species>
        <taxon>
          <taxID>85426</taxID>
          <name>Osmia pusilla</name>
          <reference>Cresson, 1864</reference>
        </taxon>
      </species>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>5 min sweep x4 collectors (1)|Partly cloudy, 26C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:3</site_code>
      <sampling_protocol>Sweep Net</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.081</lat>
        <lon>-113.879</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1335</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2799069</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2016</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSWLB/BIOUG04656-E03+1453338240.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
  <record>
    <record_id>3146194</record_id>
    <processid>SSWLB397-13</processid>
    <bin_uri>BOLD:ACM8917</bin_uri>
    <specimen_identifiers>
      <sampleid>BIOUG04934-C10</sampleid>
      <catalognum>BIOUG04934-C10</catalognum>
      <fieldnum>L#12BIOBUS-0644</fieldnum>
      <institution_storing>Centre for Biodiversity Genomics</institution_storing>
    </specimen_identifiers>
    <taxonomy>
      <phylum>
        <taxon>
          <taxID>20</taxID>
          <name>Arthropoda</name>
        </taxon>
      </phylum>
      <class>
        <taxon>
          <taxID>82</taxID>
          <name>Insecta</name>
        </taxon>
      </class>
      <order>
        <taxon>
          <taxID>125</taxID>
          <name>Hymenoptera</name>
        </taxon>
      </order>
      <family>
        <taxon>
          <taxID>443</taxID>
          <name>Megachilidae</name>
        </taxon>
      </family>
      <subfamily>
        <taxon>
          <taxID>4962</taxID>
          <name>Megachilinae</name>
        </taxon>
      </subfamily>
      <genus>
        <taxon>
          <taxID>4940</taxID>
          <name>Osmia</name>
        </taxon>
      </genus>
    </taxonomy>
    <specimen_desc>
      <voucher_status>Vouchered:Registered Collection</voucher_status>
      <tissue_type>Tissue</tissue_type>
      <habitat>Grassland</habitat>
      <extrainfo>Waterton Lakes NP</extrainfo>
    </specimen_desc>
    <collection_event>
      <collectors>BIOBus 2012</collectors>
      <collection_note>10 Pan Traps|Mostly cloudy, Windy, 6C|Moraine grassland, well established</collection_note>
      <site_code>BIOUG:WATERTON-NP:3</site_code>
      <sampling_protocol>Pan Trap</sampling_protocol>
      <country>Canada</country>
      <province_state>Alberta</province_state>
      <region>Waterton Lakes National Park</region>
      <sector>Red Rock Parkway</sector>
      <coordinates>
        <lat>49.081</lat>
        <lon>-113.879</lon>
        <coord_source>GPSmap 60Cx</coord_source>
        <coord_accuracy></coord_accuracy>
      </coordinates>
      <elev>1335</elev>
    </collection_event>
    <specimen_imagery>
      <media>
        <mediaID>2251012</mediaID>
        <media_descriptor>Lateral</media_descriptor>
        <copyright>
          <copyright_holder>CBG Photography Group</copyright_holder>
          <copyright_year>2014</copyright_year>
          <copyright_license>CreativeCommons - Attribution Non-Commercial Share-Alike</copyright_license>
          <copyright_institution>Centre for Biodiversity Genomics</copyright_institution>
        </copyright>
        <photographer>CBG Photography Group</photographer>
        <image_file>http://www.boldsystems.org/pics/SSWLB/BIOUG04934-C10+1392738576.jpg</image_file>
      </media>
    </specimen_imagery>
    <notes></notes>
  </record>
</bold_records>
'
  recorded_at: 2018-04-24 18:40:17 GMT
  recorded_with: vcr/0.0.7.9410
